<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:series="https://publishpress.com/"
	
	>
<channel>
	<title>
	Kommentare zu: REDUCE ABAP750 FOR x = u IN n = 1 THEN brainf*ck	</title>
	<atom:link href="/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/feed/" rel="self" type="application/rss+xml" />
	<link>/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/</link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:24:48 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>
	<item>
		<title>
		Von: Enno Wulff		</title>
		<link>/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/#comment-2695</link>

		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 23 Mar 2017 22:06:13 +0000</pubDate>
		<guid isPermaLink="false">https://tricktresor.com/?p=1017909#comment-2695</guid>

					<description><![CDATA[Als Antwort auf &lt;a href=&quot;/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/#comment-2694&quot;&gt;ralfwenzel&lt;/a&gt;.

Ein Programmierer will in der Regel nicht so programmieren, dass es ein Berater versteht. Ein Programmierer programmiert so, wie er kann und so, dass es l√§uft.

Gerade mit diesen verkettet-geschachtelten Aufrufen ist es m. E. nicht mehr n√∂tig, eine neue Methode zu machen (Ja: Test-Units, Ja, Clean-Code, aber finde mal einen passenden Namen f√ºr eine Methode, die alle mit R√úCK oder TR√úK zur√ºck gemeldeten Vorg√§nge aus den Auftr√§gen ermittelt, die kein L√∂schkennzeichen haben...)
Aber das ist ein anderes Thema... 

Hier geht es ja darum, aufzuzeigen, was wie m√∂glich ist.]]></description>
			<content:encoded><![CDATA[<p>Als Antwort auf <a href="/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/#comment-2694">ralfwenzel</a>.</p>
<p>Ein Programmierer will in der Regel nicht so programmieren, dass es ein Berater versteht. Ein Programmierer programmiert so, wie er kann und so, dass es l√§uft.</p>
<p>Gerade mit diesen verkettet-geschachtelten Aufrufen ist es m. E. nicht mehr n√∂tig, eine neue Methode zu machen (Ja: Test-Units, Ja, Clean-Code, aber finde mal einen passenden Namen f√ºr eine Methode, die alle mit R√úCK oder TR√úK zur√ºck gemeldeten Vorg√§nge aus den Auftr√§gen ermittelt, die kein L√∂schkennzeichen haben&#8230;)<br />
Aber das ist ein anderes Thema&#8230; </p>
<p>Hier geht es ja darum, aufzuzeigen, was wie m√∂glich ist.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Von: ralfwenzel		</title>
		<link>/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/#comment-2694</link>

		<dc:creator><![CDATA[ralfwenzel]]></dc:creator>
		<pubDate>Thu, 23 Mar 2017 06:54:22 +0000</pubDate>
		<guid isPermaLink="false">https://tricktresor.com/?p=1017909#comment-2694</guid>

					<description><![CDATA[Wenn man ABAP so schreiben will, dass ein Berater es versteht, schr√§nkt man sich sehr stark ein, weil die zumeist schon mit OO-Konzepten √ºberfordert sind. 

Viel wichtiger ist, dass man so komplexes Coding in eine eigene Methode schreibt und diese durch sprechenden Namen, eine ebensolche Beschreibung und ggf. per Dokumentation erkl√§rt. 

Den wichtigsten Vorteil aber hat hier keiner genannt: √Ñhnlich einer funktionalen Methode k√∂nnen solche Operationen an Operandenpositionen eingesetzt werden, was unglaublich viele Hilfsvariablen erspart. 

Ich kenne Methoden, die erstmal 20 Zeilen Deklarationsblock haben, ehe das Coding √ºberhaupt anf√§ngt.....


Ralf]]></description>
			<content:encoded><![CDATA[<p>Wenn man ABAP so schreiben will, dass ein Berater es versteht, schr√§nkt man sich sehr stark ein, weil die zumeist schon mit OO-Konzepten √ºberfordert sind. </p>
<p>Viel wichtiger ist, dass man so komplexes Coding in eine eigene Methode schreibt und diese durch sprechenden Namen, eine ebensolche Beschreibung und ggf. per Dokumentation erkl√§rt. </p>
<p>Den wichtigsten Vorteil aber hat hier keiner genannt: √Ñhnlich einer funktionalen Methode k√∂nnen solche Operationen an Operandenpositionen eingesetzt werden, was unglaublich viele Hilfsvariablen erspart. </p>
<p>Ich kenne Methoden, die erstmal 20 Zeilen Deklarationsblock haben, ehe das Coding √ºberhaupt anf√§ngt&#8230;..</p>
<p>Ralf</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Von: abapkadabra		</title>
		<link>/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/#comment-2691</link>

		<dc:creator><![CDATA[abapkadabra]]></dc:creator>
		<pubDate>Wed, 01 Mar 2017 11:04:06 +0000</pubDate>
		<guid isPermaLink="false">https://tricktresor.com/?p=1017909#comment-2691</guid>

					<description><![CDATA[Gerade bei der schon fachlich hohen Komplexit√§t von SAP-Systemen finde ich es sehr wichtig, dass das Coding gut lesbar und somit langfristig gut wartbar bleibt. Idealerweise soll nicht nur der Hardcore-Programmierer sondern auch der SAP-Berater mit grunds√§tzlichen ABAP-Kenntnissen im Debugger noch verstehen k√∂nnen, was gerade passiert.

Noch hatte ich keine Situationen in der Entwicklung, in welchen die neuen Befehle und Schreibweisen wirklich erforderlich gewesen w√§ren, aber das mag in Spezialgebieten anders sein. Andererseits kann ich auch meistens die Neuerungen gar nicht verwenden, da wir unsere Entwicklung in Kundensysteme unterschiedlichster Releasest√§nde ausliefern. 

Ganz klar muss man sich als SAP-Entwickler aber mit den neuen M√∂glichkeiten auseinandersetzen und diese zumindest verstehen - m√∂gen muss man sie deswegen noch lange nicht ;)]]></description>
			<content:encoded><![CDATA[<p>Gerade bei der schon fachlich hohen Komplexit√§t von SAP-Systemen finde ich es sehr wichtig, dass das Coding gut lesbar und somit langfristig gut wartbar bleibt. Idealerweise soll nicht nur der Hardcore-Programmierer sondern auch der SAP-Berater mit grunds√§tzlichen ABAP-Kenntnissen im Debugger noch verstehen k√∂nnen, was gerade passiert.</p>
<p>Noch hatte ich keine Situationen in der Entwicklung, in welchen die neuen Befehle und Schreibweisen wirklich erforderlich gewesen w√§ren, aber das mag in Spezialgebieten anders sein. Andererseits kann ich auch meistens die Neuerungen gar nicht verwenden, da wir unsere Entwicklung in Kundensysteme unterschiedlichster Releasest√§nde ausliefern. </p>
<p>Ganz klar muss man sich als SAP-Entwickler aber mit den neuen M√∂glichkeiten auseinandersetzen und diese zumindest verstehen &#8211; m√∂gen muss man sie deswegen noch lange nicht üòâ</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Von: Enno Wulff		</title>
		<link>/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/#comment-2690</link>

		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 01 Mar 2017 09:06:28 +0000</pubDate>
		<guid isPermaLink="false">https://tricktresor.com/?p=1017909#comment-2690</guid>

					<description><![CDATA[Als Antwort auf &lt;a href=&quot;/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/#comment-2689&quot;&gt;laurin&lt;/a&gt;.

Du hast nat√ºrlich Recht, es geht nicht darum auf Teufel komm raus das alte durch Neues zu ersetzen. Aber es wird immer mehr Leute geben, die bei neuen Programmierungen Probleme mit neuen Sprachfeatures zu l√∂sen. Und ohne, dass man wirklich verstanden hat, wie sie funktionieren, kommt halt sowas wie bei mir raus. 
Danke f√ºr den Blogbeitrag! Testing wird immer wichtiger. Gerade bei solchen kompakten Sprachausdr√ºcken.]]></description>
			<content:encoded><![CDATA[<p>Als Antwort auf <a href="/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/#comment-2689">laurin</a>.</p>
<p>Du hast nat√ºrlich Recht, es geht nicht darum auf Teufel komm raus das alte durch Neues zu ersetzen. Aber es wird immer mehr Leute geben, die bei neuen Programmierungen Probleme mit neuen Sprachfeatures zu l√∂sen. Und ohne, dass man wirklich verstanden hat, wie sie funktionieren, kommt halt sowas wie bei mir raus.<br />
Danke f√ºr den Blogbeitrag! Testing wird immer wichtiger. Gerade bei solchen kompakten Sprachausdr√ºcken.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		Von: laurin		</title>
		<link>/blog/reduce-abap750-for-x-u-in-n-1-then-brainfck/#comment-2689</link>

		<dc:creator><![CDATA[laurin]]></dc:creator>
		<pubDate>Tue, 28 Feb 2017 19:04:56 +0000</pubDate>
		<guid isPermaLink="false">https://tricktresor.com/?p=1017909#comment-2689</guid>

					<description><![CDATA[Hi Enno,
ich glaube, dass du einen kleinen Denkfehler machst. Diese neuen Features sollen nicht das &quot;alte&quot; ABAP ersetzen - sie sollen lediglich da eingesetzt werden, wo sie auch wirklich Sinn machen. Ich habe auf StackOverflow schon einige Fragen gesehen, in denen krampfhaft versucht wurde, ausschlie√ülich den neuen Schreibstil unterzubringen. F√ºrchterlich! 

&lt;code&gt;CONV&lt;/code&gt; zum Beispiel ist wunderbar um die strengen Typchecks bei Funktionsbausteinen zu umgehen. &lt;code&gt;CORRESPONDING&lt;/code&gt; erweitert &lt;code&gt;MOVE-CORRESPONDING&lt;/code&gt; endlich um eine M√∂glichkeit, Felder zu mappen, welche nicht gleich benannt sind. Es gibt schon einige Vorteile.

&lt;code&gt;COND&lt;/code&gt; ist an der Stelle, an welcher du ihn benutzt, auch etwas unpassend. Du kannst doch einfach &lt;code&gt;LET command ... IN NEXT html = html ...&lt;/code&gt; verwenden - v√∂llig ohne &lt;code&gt;COND&lt;/code&gt;.

BTW: auch das &lt;a href=&quot;https://blogs.sap.com/2016/08/15/performance-trap-in-string-concatenations/&quot; rel=&quot;nofollow&quot;&gt;hier&lt;/a&gt; ist Pflichtlekt√ºre ;)]]></description>
			<content:encoded><![CDATA[<p>Hi Enno,<br />
ich glaube, dass du einen kleinen Denkfehler machst. Diese neuen Features sollen nicht das &#8220;alte&#8221; ABAP ersetzen &#8211; sie sollen lediglich da eingesetzt werden, wo sie auch wirklich Sinn machen. Ich habe auf StackOverflow schon einige Fragen gesehen, in denen krampfhaft versucht wurde, ausschlie√ülich den neuen Schreibstil unterzubringen. F√ºrchterlich! </p>
<p><code>CONV</code> zum Beispiel ist wunderbar um die strengen Typchecks bei Funktionsbausteinen zu umgehen. <code>CORRESPONDING</code> erweitert <code>MOVE-CORRESPONDING</code> endlich um eine M√∂glichkeit, Felder zu mappen, welche nicht gleich benannt sind. Es gibt schon einige Vorteile.</p>
<p><code>COND</code> ist an der Stelle, an welcher du ihn benutzt, auch etwas unpassend. Du kannst doch einfach <code>LET command ... IN NEXT html = html ...</code> verwenden &#8211; v√∂llig ohne <code>COND</code>.</p>
<p>BTW: auch das <a href="https://blogs.sap.com/2016/08/15/performance-trap-in-string-concatenations/" rel="nofollow">hier</a> ist Pflichtlekt√ºre üòâ</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
