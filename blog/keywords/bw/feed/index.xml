<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>BW Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/bw/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Wed, 10 Jan 2018 19:24:56 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>BW Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Schwarz. Kompakt. Hilfreich. Espresso-Tutorials</title>
		<link>/blog/schwarz-kompakt-hilfreich-espresso-tutorials/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 29 Jan 2015 06:00:00 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Partner]]></category>
		<category><![CDATA[Featured]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[programmierung]]></category>
		<category><![CDATA[Dokumentation]]></category>
		<category><![CDATA[tutorial]]></category>
		<category><![CDATA[buch]]></category>
		<category><![CDATA[epub]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[ebook]]></category>
		<category><![CDATA[BW]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=5235</guid>

					<description><![CDATA[<p>Espresso-Tutorials hat sich auf Themen aus dem Finanzbereich spezialisiert. Aber auch Themen zu Produktionsplanung, BW, CRM und einige mehr stellt der Verlag bereit. Das Angebot soll zudem stark in Richtung Programmierung ausgebaut werden. Auch viele Video-Tutorials erleichtern bei vielen Themen den Einstieg in die Materie.</p>
<p>Der Beitrag <a href="/blog/schwarz-kompakt-hilfreich-espresso-tutorials/">Schwarz. Kompakt. Hilfreich. Espresso-Tutorials</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Unser Medienpartner, der Espresso Tutorials Verlag, hat sein SAP E-Book und SAP Videoangebot weiter ausgebaut.</p>
<p>Für eine Flatrate von 99 Euro (inkl. MwSt.) erhältst du für ein Jahr Zugang zu allen SAP Inhalten des Verlags.</p>
<p>Espresso-Tutorials hat sich auf Themen aus dem Finanzbereich spezialisiert. Aber auch Themen zu Produktionsplanung, BW, CRM und einige mehr stellt der Verlag bereit. Das Angebot soll zudem stark in Richtung Programmierung ausgebaut werden. Die Video-Tutorials erleichtern bei vielen Themen den Einstieg in die Materie.</p>
<p>Auf jeden Fall eine spannende Sache.</p>
<p>Die Nachschlagewerke können mittels PC, iOS und Android abgerufen werden.</p>
<p>Gerade die Nutzung mit mobilen Endgeräten dürfte für SAP-Berater, SAP-Experten und Freelancern interessant sein, um von überall darauf zuzugreifen. Für das Jahr 2015 sind bereits mehr als zwanzig zusätzliche Titel zur Veröffentlichung angekündigt. Auch die Neuerscheinungen sollen allen Abonnenten sofort nach Veröffentlichung zugänglich gemacht werden.</p>
<p>Mit dem Gutscheincode &#8220;<strong><span style="color: #0000ff;">915-885-313</span></strong>&#8221; sparst du 10 Euro Gebühr im ersten Jahr!</p>
<p>Die enthaltenen Buch- und Videotitel, Konditionen, ein Informationsvideo und eine Bestellmöglichkeit findest du hier:</p>
<p><a href="http://onleihe.espresso-tutorials.com/"><img decoding="async" class="alignnone size-medium wp-image-5241" src="https://tricktresor.com/wp-content/uploads/2015/01/ET_Webbanner_300x125_2-300x125.jpg" alt="ET_Webbanner_300x125_2" width="300" height="125" /></a></p>
<p><a href="http://onleihe.espresso-tutorials.com/">http://onleihe.espresso-tutorials.com/</a></p>
<p>Der Beitrag <a href="/blog/schwarz-kompakt-hilfreich-espresso-tutorials/">Schwarz. Kompakt. Hilfreich. Espresso-Tutorials</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Grid mit Variantenschnellzugriff (Menü)</title>
		<link>/blog/grid-mit-variantenschnellzugriff-menue/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 16 Aug 2011 19:23:04 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[toolbar]]></category>
		<category><![CDATA[sender]]></category>
		<category><![CDATA[Layout]]></category>
		<category><![CDATA[LVC_VARIANT_SELECT]]></category>
		<category><![CDATA[set_variant]]></category>
		<category><![CDATA[set_frontend_fieldcatalog]]></category>
		<category><![CDATA[cl_gui_custom_container]]></category>
		<category><![CDATA[set_filter_criteria]]></category>
		<category><![CDATA[register events]]></category>
		<category><![CDATA[set_sort_criteria]]></category>
		<category><![CDATA[LINKS]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[splitter]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[vererbung]]></category>
		<category><![CDATA[cl_gui_splitter_container]]></category>
		<category><![CDATA[BW]]></category>
		<category><![CDATA[cl_gui_container]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=611</guid>

					<description><![CDATA[<p>Dies ist eine andere Version mit der ein Varianten-Schnellzugriff in einem ALV-Grid realisiert wurde. Dieses Programm verwaltet vier Grids und in jedem Grid werden die vorhandenen Varianten in zwei Men&#252;s angezeigt: System- und Benutzervarianten. Der Name der aktuell ausgew&#228;hlten Variante wird dabei im jeweiligen Men&#252; angezeigt. </p>
<p>Der Beitrag <a href="/blog/grid-mit-variantenschnellzugriff-menue/">Grid mit Variantenschnellzugriff (Menü)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Dies ist eine andere Version mit der ein Varianten-Schnellzugriff in einem ALV-Grid realisiert wurde. Dieses Programm verwaltet vier Grids und in jedem Grid werden die vorhandenen Varianten in zwei Menüs angezeigt: System- und Benutzervarianten. Der Name der aktuell ausgewählten Variante wird dabei im jeweiligen Menü angezeigt.</p>
<h2 class="head1">Screenshot</h2>
<p><img decoding="async" src="/wp-content/uploads/tt_images/ALV/Bild527.jpg" alt="" /></p>
<h2 class="head1">Erklärung</h2>
<p class="text1">Die beiden Events, die für die Umsetzung maßgeblich beteiligt sind: TOOLBAR und MENU_BUTTON.</p>
<p class="text1">Im Event TOOLBAR werden die Menüs erstellt. In MENU_BUTTON werden die zugehörigen Untermenüs aufgebaut, wenn der Benutzer auf einen Menu-Button geklickt hat. Die Menüs in der Toolbar werden also erst zum Zeitpunkt des Anklickens aufgebaut.</p>
<p class="text1"><img decoding="async" src="/wp-content/uploads/tt_images/ALV/Bild528.jpg" alt="" /></p>
<p>Links die globalen Varianten, rechts Benutzervarianten</p>
<h2>Coding</h2>
<pre class="lang:abap decode:true ">*&amp;---------------------------------------------------------------------*
*&amp; Report  ZZ_GRID_VARIANT_MENU
*&amp;---------------------------------------------------------------------*

***_________________________________***
***                                 ***
***    https://tricktresor.com   / ***
***_________________________________***
***                                 ***

* BESCHREIBUNG
* ============
* Das Programm enthält eine Klasse, mit deren Hilfe vier durch einen
* Splitter getrennte ALV-Grids angezeigt werden
* Es können Varianten abgespeichert werden, die dann als Schnellzugriff
* mit einem Menü in der Toolbar aktiviert werden.

* DYNPRO 100
* ==========
* Dynpro 100 muss angelegt werden.
* Es muss einen CustomContainer mit Namen CONTAINER enthalten
* Der Status "100" muss angelegt werden. Die Funktionstaste F3 muss
* mit dem Funktionscode BACK belegt werden.

* DYNPRO-ABLAUFLOGIK
* ==================
* PROCESS BEFORE OUTPUT.
*   MODULE pbo.
*
* PROCESS AFTER INPUT.
*   MODULE pai.

REPORT zz_grid_variant.

*** Class for event receiver
CLASS lcl_event_receiver DEFINITION DEFERRED.

*** global data
DATA gr_grid1    TYPE REF TO            lcl_event_receiver.
DATA gr_grid2    TYPE REF TO            lcl_event_receiver.
DATA gr_grid3    TYPE REF TO            lcl_event_receiver.
DATA gr_grid4    TYPE REF TO            lcl_event_receiver.

DATA gv_matnr    TYPE matnr.
DATA gt_mara     TYPE STANDARD TABLE OF mara.
DATA gt_marc     TYPE STANDARD TABLE OF marc.
DATA gt_mard     TYPE STANDARD TABLE OF mard.
DATA gt_mvke     TYPE STANDARD TABLE OF mvke.

DATA gr_cc       TYPE REF TO            cl_gui_custom_container.
DATA gr_splitter TYPE REF TO            cl_gui_splitter_container.

DATA gr_cont1    TYPE REF TO            cl_gui_container.
DATA gr_cont2    TYPE REF TO            cl_gui_container.
DATA gr_cont3    TYPE REF TO            cl_gui_container.
DATA gr_cont4    TYPE REF TO            cl_gui_container.

SELECT-OPTIONS s_matnr FOR gv_matnr.

*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver DEFINITION.

  PUBLIC SECTION.

    DATA gr_grid    TYPE REF TO            cl_gui_alv_grid.
DATA gr_cont    TYPE REF TO            cl_gui_container.
DATA gs_variant TYPE                   disvariant.
DATA gs_layout  TYPE                   lvc_s_layo.
DATA gv_table   TYPE                   text80.

    DATA ls_toolbar       TYPE stb_button.
DATA ls_variant       TYPE disvariant.

*** Variants
DATA lt_ltdx          TYPE STANDARD TABLE OF ltdx.

*** Variant texts
DATA lt_ltdxt         TYPE STANDARD TABLE OF ltdxt.

METHODS:

*** constructor
constructor
IMPORTING i_handle    TYPE c
i_container TYPE REF TO cl_gui_container
i_title     TYPE lvc_title
i_table     TYPE c,

*** event for menu button
handle_menu_button
FOR EVENT menu_button OF cl_gui_alv_grid
IMPORTING e_object e_ucomm sender,

*** event for double click
handle_double_click
FOR EVENT double_click OF cl_gui_alv_grid
IMPORTING e_row e_column es_row_no sender,

*** event for adding buttons to toolbar
handle_toolbar
FOR EVENT toolbar OF cl_gui_alv_grid
IMPORTING e_object e_interactive sender,

*** event for pressed buttons
handle_user_command
FOR EVENT user_command OF cl_gui_alv_grid
IMPORTING e_ucomm sender.

ENDCLASS.                    "lcl_event_receiver DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver IMPLEMENTATION.

  METHOD constructor.

    FIELD-SYMBOLS &lt;outtab&gt; TYPE STANDARD TABLE.

    gv_table = i_table.
ASSIGN (gv_table) TO &lt;outtab&gt;.
CHECK sy-subrc = 0.

*** Create ALV Grid
CREATE OBJECT gr_grid
EXPORTING
i_parent = i_container.

*** Set variant
CLEAR gs_variant.
gs_variant-report    = sy-repid.
gs_variant-handle    = i_handle.
gs_variant-username  = sy-uname.

*** Layout
gs_layout-grid_title = i_title.
gs_layout-no_toolbar = ' '.

*** Set display
CALL METHOD gr_grid-&gt;set_table_for_first_display
EXPORTING
i_structure_name = i_handle
is_variant       = gs_variant
i_save           = 'A'
i_default        = 'X'
is_layout        = gs_layout
CHANGING
it_outtab        = &lt;outtab&gt;
EXCEPTIONS
OTHERS           = 4.

**** Create event handler for grid
SET HANDLER handle_user_command
handle_toolbar
handle_double_click
handle_menu_button
FOR gr_grid.

*** set toolbar interactive
CALL METHOD gr_grid-&gt;set_toolbar_interactive.

  ENDMETHOD.                    "constructor

  METHOD handle_double_click.

    FIELD-SYMBOLS &lt;outtab&gt; TYPE STANDARD TABLE.
FIELD-SYMBOLS &lt;outwa&gt;  TYPE ANY.
FIELD-SYMBOLS &lt;value&gt;  TYPE ANY.

    ASSIGN (gv_table) TO &lt;outtab&gt;.
CHECK sy-subrc = 0.

    CASE e_column.
WHEN 'MATNR'.
READ TABLE &lt;outtab&gt; ASSIGNING &lt;outwa&gt; INDEX es_row_no-row_id.
IF sy-subrc = 0.
ASSIGN COMPONENT e_column OF STRUCTURE &lt;outwa&gt; TO &lt;value&gt;.
IF sy-subrc = 0.
SET PARAMETER ID 'MAT' FIELD &lt;value&gt;.
CALL TRANSACTION 'MM03' AND SKIP FIRST SCREEN.
ENDIF.
ENDIF.
ENDCASE.

  ENDMETHOD.                    "handle_double_click

  METHOD handle_toolbar.

    FIELD-SYMBOLS &lt;ltdx&gt;  TYPE ltdx.
FIELD-SYMBOLS &lt;ltdxt&gt; TYPE ltdxt.

**** Get actual variant
CALL METHOD sender-&gt;get_variant
IMPORTING
es_variant = ls_variant.

*** Read existing variants
SELECT * FROM ltdx INTO TABLE lt_ltdx UP TO 10 ROWS
WHERE relid  = 'LT'
AND report = gs_variant-report
AND handle = gs_variant-handle
AND srtf2  = 0
AND ( username = space
OR  username = sy-uname )
ORDER BY username variant.

    IF sy-subrc = 0.
*** add Separator to toolbar
ls_toolbar-function  = 'DUMMY'.
ls_toolbar-butn_type = '3'.
APPEND ls_toolbar TO e_object-&gt;mt_toolbar.

*** Get variant texts
SELECT * FROM ltdxt INTO TABLE lt_ltdxt
FOR ALL ENTRIES IN lt_ltdx
WHERE relid  = 'LT'
AND report = gs_variant-report
AND handle = gs_variant-handle
AND variant = lt_ltdx-variant
AND langu = sy-langu.

*** Check if there are global variants...
READ TABLE lt_ltdx TRANSPORTING NO FIELDS
WITH KEY username = space.
IF sy-subrc = 0.
*** add menu "GLOBAL" to toolbar
CLEAR ls_toolbar.
IF ls_variant-variant IS NOT INITIAL AND
ls_variant-variant(1) = '/'.
*** If variant is actually set: Display name of variant
READ TABLE lt_ltdxt ASSIGNING &lt;ltdxt&gt;
WITH KEY username = space
variant  = ls_variant-variant.
IF sy-subrc = 0.
ls_toolbar-text = &lt;ltdxt&gt;-text.
ENDIF.
ENDIF.
ls_toolbar-function  = 'GLOBAL'.
ls_toolbar-icon      = icon_bw_gis.
ls_toolbar-butn_type = '2'.
APPEND ls_toolbar TO e_object-&gt;mt_toolbar.
ENDIF.

*** Check if there are user specific variants...
READ TABLE lt_ltdx TRANSPORTING NO FIELDS
WITH KEY username = sy-uname.
IF sy-subrc = 0.
*** add menu "USER SPECIFIC" to toolbar
CLEAR ls_toolbar.
IF ls_variant-variant IS NOT INITIAL AND
ls_variant-variant(1) &lt;&gt; '/'.
*** If variant is actually set: Display name of variant
READ TABLE lt_ltdxt ASSIGNING &lt;ltdxt&gt;
WITH KEY username = sy-uname
variant  = ls_variant-variant.
IF sy-subrc = 0.
ls_toolbar-text = &lt;ltdxt&gt;-text.
ENDIF.
ENDIF.
ls_toolbar-function  = 'USER'.
ls_toolbar-icon      = icon_usergroup.
ls_toolbar-butn_type = '2'.
APPEND ls_toolbar TO e_object-&gt;mt_toolbar.
ENDIF.
ENDIF.

  ENDMETHOD.                    "handle_toolbar

  METHOD handle_user_command.
*** Set chosen variant

    FIELD-SYMBOLS &lt;ltdx&gt;  TYPE ltdx.
FIELD-SYMBOLS &lt;ltdxt&gt; TYPE ltdxt.

*** data
DATA lv_user_specific TYPE c.
DATA ls_variant       TYPE disvariant.
DATA ls_stable        TYPE lvc_s_stbl.
DATA lt_fieldcat      TYPE  lvc_t_fcat.
DATA lt_sort          TYPE  lvc_t_sort.
DATA lt_filter        TYPE  lvc_t_filt.
DATA ls_layout        TYPE  lvc_s_layo.

*** Variant
CLEAR ls_variant.
ls_variant-variant = e_ucomm.
SHIFT ls_variant-variant LEFT BY 1 PLACES.
ls_variant-report    = gs_variant-report.
ls_variant-handle    = gs_variant-handle.
IF ls_variant-variant(1) &lt;&gt; '/'.
ls_variant-username  = sy-uname.
lv_user_specific     = 'X'.
ENDIF.
CALL METHOD sender-&gt;get_frontend_fieldcatalog
IMPORTING
et_fieldcatalog = lt_fieldcat.

    CALL FUNCTION 'LVC_VARIANT_SELECT'
EXPORTING
i_dialog            = space
i_user_specific     = lv_user_specific
it_default_fieldcat = lt_fieldcat
IMPORTING
et_fieldcat         = lt_fieldcat
et_sort             = lt_sort
et_filter           = lt_filter
CHANGING
cs_variant          = ls_variant
EXCEPTIONS
wrong_input         = 1
fc_not_complete     = 2
not_found           = 3
program_error       = 4
data_missing        = 5
OTHERS              = 6.
IF sy-subrc = 0.
CALL METHOD sender-&gt;set_variant( ls_variant ).
CALL METHOD sender-&gt;set_frontend_fieldcatalog( lt_fieldcat ).
CALL METHOD sender-&gt;set_filter_criteria( lt_filter ).
CALL METHOD sender-&gt;set_sort_criteria( lt_sort ).
ls_stable = 'XX'.
CALL METHOD sender-&gt;refresh_table_display
EXPORTING
is_stable      = ls_stable
i_soft_refresh = space.
ENDIF.

  ENDMETHOD.                           "handle_user_command

  METHOD handle_menu_button.

DATA lv_fcode         TYPE ui_func.
DATA lv_text          TYPE gui_text.
DATA lv_disable       TYPE c.
DATA lv_checked       TYPE c.
DATA lv_username      TYPE syuname.

FIELD-SYMBOLS &lt;ltdx&gt;  TYPE ltdx.
FIELD-SYMBOLS &lt;ltdxt&gt; TYPE ltdxt.

CASE e_ucomm.
WHEN 'GLOBAL'.
lv_username = space.
WHEN 'USER'.
lv_username = sy-uname.
WHEN OTHERS.
EXIT.
ENDCASE.

*** Get actual variant
CALL METHOD sender-&gt;get_variant
IMPORTING
es_variant = ls_variant.

LOOP AT lt_ltdx ASSIGNING &lt;ltdx&gt; WHERE username = lv_username.
*... get variant text
READ TABLE lt_ltdxt ASSIGNING &lt;ltdxt&gt;
WITH KEY variant = &lt;ltdx&gt;-variant.

*... set menu entry
CLEAR ls_toolbar.
lv_fcode  = '$'.
lv_fcode+1 = &lt;ltdx&gt;-variant.

*... set text
      IF &lt;ltdxt&gt; IS ASSIGNED.
lv_text      = &lt;ltdxt&gt;-text.
ELSE.
lv_text      = &lt;ltdx&gt;-variant.
ENDIF.

*... mark and disable actual variant
IF ls_variant-variant = &lt;ltdx&gt;-variant.
lv_disable = 'X'.
lv_checked = 'X'.
ELSE.
lv_disable = space.
lv_checked = space.
ENDIF.

*... add menu entry to menu
CALL METHOD e_object-&gt;add_function
EXPORTING
disabled = lv_disable
checked  = lv_checked
fcode    = lv_fcode
text     = lv_text.
ENDLOOP.
ENDMETHOD.                    "lcl_my_event_handler

ENDCLASS.                    "lcl_event_receiver IMPLEMENTATION

*** _______________________________________________________ ***
***                                                         ***
***                 START OF PROGRAM
*** _______________________________________________________ ***
***                                                         ***

START-OF-SELECTION.

  SELECT * FROM mara INTO TABLE gt_mara UP TO 30 ROWS
WHERE matnr IN s_matnr.
SELECT * FROM marc INTO TABLE gt_marc UP TO 30 ROWS
WHERE matnr IN s_matnr.
SELECT * FROM mard INTO TABLE gt_mard UP TO 30 ROWS
WHERE matnr IN s_matnr.
SELECT * FROM mvke INTO TABLE gt_mvke UP TO 30 ROWS
WHERE matnr IN s_matnr.

CALL SCREEN 100.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  PBO  OUTPUT
*&amp;---------------------------------------------------------------------*
MODULE pbo OUTPUT.

  SET PF-STATUS '100'.
SET TITLEBAR '100'.
CLEAR sy-ucomm.

  IF gr_cc IS INITIAL.
CREATE OBJECT gr_cc
EXPORTING
container_name = 'CONTAINER'.
ENDIF.

  IF gr_splitter IS INITIAL.
CREATE OBJECT gr_splitter
EXPORTING
parent  = gr_cc
rows    = 4
columns = 1.

    CALL METHOD gr_splitter-&gt;get_container
EXPORTING
row       = 1
column    = 1
RECEIVING
container = gr_cont1.

    CALL METHOD gr_splitter-&gt;get_container
EXPORTING
row       = 2
column    = 1
RECEIVING
container = gr_cont2.

    CALL METHOD gr_splitter-&gt;get_container
EXPORTING
row       = 3
column    = 1
RECEIVING
container = gr_cont3.

    CALL METHOD gr_splitter-&gt;get_container
EXPORTING
row       = 4
column    = 1
RECEIVING
container = gr_cont4.
ENDIF.

IF gr_grid1 IS INITIAL.
CREATE OBJECT gr_grid1
EXPORTING
i_handle    = 'MARA'
i_container = gr_cont1
i_title     = 'Materialstamm'
i_table     = 'GT_MARA'.
ENDIF.

  IF gr_grid2 IS INITIAL.
CREATE OBJECT gr_grid2
EXPORTING
i_handle    = 'MARD'
i_container = gr_cont2
i_title     = 'Tabelle MARD'
i_table     = 'GT_MARD'.
ENDIF.

  IF gr_grid3 IS INITIAL.
CREATE OBJECT gr_grid3
EXPORTING
i_handle    = 'MARC'
i_container = gr_cont3
i_title     = 'Tabelle MARC'
i_table     = 'GT_MARC'.
ENDIF.

  IF gr_grid4 IS INITIAL.
CREATE OBJECT gr_grid4
EXPORTING
i_handle    = 'MVKE'
i_container = gr_cont4
i_title     = 'Tabelle MVKE'
i_table     = 'GT_MVKE'.
ENDIF.

ENDMODULE.                 " PBO  OUTPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  PAI  INPUT
*&amp;---------------------------------------------------------------------*
MODULE pai INPUT.

  CASE sy-ucomm.
WHEN 'BACK'.
SET SCREEN 0. LEAVE SCREEN.
ENDCASE.

ENDMODULE.                 " PAI  INPUT</pre>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/grid-mit-variantenschnellzugriff-menue/">Grid mit Variantenschnellzugriff (Menü)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Allgemeine Hilfen</title>
		<link>/blog/allgemeine-hilfen/</link>
					<comments>/blog/allgemeine-hilfen/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 10 Jul 2008 15:03:18 +0000</pubDate>
				<category><![CDATA[Business Warehouse]]></category>
		<category><![CDATA[BW]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=498</guid>

					<description><![CDATA[<p>Hilfetexte, Infos + Glossar, Weiterf&#252;hrende Doku...</p>
<p>Der Beitrag <a href="/blog/allgemeine-hilfen/">Allgemeine Hilfen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Hilfetexte, Infos + Glossar, Weiterf&uuml;hrende Doku&#8230;<br />Glossar BW-Begriffe: <A href="http://www.mb-dataconsult.de/glossarbw/index.html" Target="_blank">http://www.mb-dataconsult.de/glossarbw/index.html</A></p>
<p>Der Beitrag <a href="/blog/allgemeine-hilfen/">Allgemeine Hilfen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/allgemeine-hilfen/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Hilfreiches allgemein</title>
		<link>/blog/hilfreiches-allgemein/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 09 Jul 2008 16:57:29 +0000</pubDate>
				<category><![CDATA[Business Warehouse]]></category>
		<category><![CDATA[BW]]></category>
		<category><![CDATA[Daten lesen]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=497</guid>

					<description><![CDATA[<p>Hier finden Sie Hinweise, die Ihnen evtl. bei der Suche nach Daten, Sturkturen oder Funktionen helfen.</p>
<p>Der Beitrag <a href="/blog/hilfreiches-allgemein/">Hilfreiches allgemein</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Hier finden Sie Hinweise, die Ihnen evtl. bei der Suche nach Daten, Sturkturen oder Funktionen helfen.<br /><P class="head1">Transaktion RSCRM_BAPI</P><P class="text1">Query-Definitionen anzeigen</P><P class="head1">Programm WRITEQUERY</P><P class="text1">Ausgabe eines Queries testen</P><P class="head1">Programm WRITEQUERY_NEU</P><P class="text1">Ausgabe eines Queries testen allerdings mit neuem Web-Interface</P><P class="head1">Transaktion RSRT</P><P class="text1">Query-Monitor. Anzeige von technischer Info, Eigenschaften, Variablen und vielem mehr. Ruft z.B. WRITEQUERY zur Datenausgabe auf.</P><P class="head1">GENUNID ermitteln</P><P class="text1">Der Konvertierungsexit&nbsp;CONVERSION_EXIT_GENID_INPUT&nbsp;wandelt den Querynamen in die interne Uniqueid des Queries um.</P><P class="text1">Funktionsbaustein KAP_PSR_READ_QUERY_IDENTIFIERS macht das selbe, ist jedoch RFC-f&auml;hig&#8230;</P></p>
<p>Der Beitrag <a href="/blog/hilfreiches-allgemein/">Hilfreiches allgemein</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Daten aus Query lesen</title>
		<link>/blog/daten-aus-query-lesen/</link>
					<comments>/blog/daten-aus-query-lesen/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 09 Jul 2008 16:50:34 +0000</pubDate>
				<category><![CDATA[Business Warehouse]]></category>
		<category><![CDATA[Daten lesen]]></category>
		<category><![CDATA[BW]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=496</guid>

					<description><![CDATA[<p>Hier erfahren Sie, wie Sie mittels Funktionsbaustein auf die Daten eines Queries zugreifen k&#246;nnen.</p>
<p>Der Beitrag <a href="/blog/daten-aus-query-lesen/">Daten aus Query lesen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Hier erfahren Sie, wie Sie mittels Funktionsbaustein auf die Daten eines Queries zugreifen k&ouml;nnen.<br /><P>Um Daten aus einem Query zu lesen, k&ouml;nnen Sie den Funktionsbaustein RRW3_GET_QUERY_VIEW_DATA verwenden. Dieser kann remote aufgerufen werden.</P><P>Sie m&uuml;ssen den Infoprovider und den Querynamen &uuml;bergeben sowie notwendige Selektionsparameter (Select-Options, Intervalle oder Parameter).</P><P>Der Infoprovider wird automatisch eingbelndet, wenn Sie in Transaktion RSRT den Quernamen eingeben.</P><P>Bei der &Uuml;bergabe der Parameter m&uuml;ssen Sie den technischen Namen der Variablen verwenden.</P><P>Die technischen Namen stehen in der Tabelle GT_TEXT_SYMB, wenn Sie den Baustein einmal aufrufen. Es gibt jeweils eine Zeile f&uuml;r den Namen (VARIABLE_xyz) und eine f&uuml;r den Wert (VARVALUE_xyz).</P><P><U><STRONG>TIPP:</STRONG></U><BR>Der Funktionsbaustein UMK_BW_QUERY_VIEW_DATA ruft den gleichen Baustein auf, wandelt aber das Ergebnis in <STRONG>XML</STRONG> um.</P><P class="head1">Beschreibung</P><P class="text1">Das folgende Coding ruft eine Query im entfernten BW-System auf und gibt die Daten in einer Liste aus. Zudem werden die Daten in einer internen Tabelle gesammelt und erneut ausgegeben.</P><P class="text1">Falls der Query mehr als sechs Spalten hat, m&uuml;ssen Sie den Typen TY_BWDATA anpassen. Theoretisch k&ouml;nnte die erforderliche Tabelle auch dynamisch generiert werden. </P><P class="head1">Coding&nbsp;</P><P class="sap1">REPORT&nbsp; zz_call_bw_query LINE-SIZE 1000.</P><P class="sap1">DATA gv_dest&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE rfcdest VALUE &#8216;BW_REMOTE&#8217;.<BR>DATA gt_para&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE rrxw3tquery.<BR>DATA gs_para&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE w3query.</P><P class="sap1">DATA gt_axis_info&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE rrws_thx_axis_info.<BR>DATA gt_cell_data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE rrws_t_cell.<BR>DATA gt_axis_data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE rrws_thx_axis_data.<BR>DATA gs_axis_x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE rrws_sx_axis_data.<BR>DATA gs_axis_y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE rrws_sx_axis_data.<BR>DATA gt_text_symb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE rrws_t_text_symbols.</P><P class="sap1">DATA gs_var&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE rrx_var.</P><P class="sap1">DATA lv_index&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE i.<BR>DATA lv_exit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE c.<BR>DATA lv_field&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE numc2.</P><P class="sap1">FIELD-SYMBOLS &lt;value&gt;&nbsp;&nbsp; TYPE ANY.<BR>FIELD-SYMBOLS &lt;setx&gt;&nbsp;&nbsp;&nbsp; TYPE rrws_sx_tuple.<BR>FIELD-SYMBOLS &lt;sety&gt;&nbsp;&nbsp;&nbsp; TYPE rrws_sx_tuple.<BR>FIELD-SYMBOLS &lt;cell&gt;&nbsp;&nbsp;&nbsp; TYPE rrws_s_cell.</P><P class="sap1"><FONT color="#fb2412">*** define structure having maximum of six columns<BR></FONT>TYPES: BEGIN OF ty_bwdata,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE text80,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 01&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE f,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 02&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE f,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 03&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE f,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE f,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 05&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE f,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 06&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE f,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; unit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE meins,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; currency&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE waers,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END OF ty_bwdata.</P><P class="sap1">DATA gt_bwdata&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF ty_bwdata.<BR>FIELD-SYMBOLS &lt;bwdata&gt;&nbsp; TYPE ty_bwdata.</P><P class="sap1"><BR>START-OF-SELECTION.</P><P class="sap1"><FONT color="#fb2412">*** Set must-have parameters</FONT><BR>&nbsp; CLEAR gs_para.<BR>&nbsp; gs_para-name&nbsp;&nbsp; = &#8216;VAR_NAME_1&#8217;.<BR>&nbsp; gs_para-value&nbsp; = &#8216;SDATE&#8217;.<BR>&nbsp; APPEND gs_para TO gt_para.<BR>&nbsp; gs_para-name&nbsp;&nbsp; = &#8216;VAR_SIGN_1&#8217;.<BR>&nbsp; gs_para-value&nbsp; = &#8216;I&#8217;.<BR>&nbsp; APPEND gs_para TO gt_para.<BR>&nbsp; gs_para-name&nbsp;&nbsp; = &#8216;VAR_OPERATOR_1&#8217;.<BR>&nbsp; gs_para-value&nbsp; = &#8216;BT&#8217;.<BR>&nbsp; APPEND gs_para TO gt_para.<BR>&nbsp; gs_para-name&nbsp;&nbsp; = &#8216;VAR_VALUE_LOW_EXT_1&#8217;.<BR>&nbsp; gs_para-value&nbsp; = &#8216;04.2008&#8217;.<BR>&nbsp; APPEND gs_para TO gt_para.<BR>&nbsp; gs_para-name&nbsp;&nbsp; = &#8216;VAR_VALUE_HIGH_EXT_1&#8217;.<BR>&nbsp; gs_para-value&nbsp; = &#8216;06.2008&#8217;.<BR>&nbsp; APPEND gs_para TO gt_para.</P><P class="sap1"><FONT color="#fb2412">*** call query from remote bw system</FONT><BR>&nbsp; CALL FUNCTION &#8216;RRW3_GET_QUERY_VIEW_DATA&#8217;<BR>&nbsp;&nbsp;&nbsp; DESTINATION gv_dest<BR>&nbsp;&nbsp;&nbsp; EXPORTING<BR><FONT color="#fb2412">* Infoprovider Ist nicht zwingend erforderlich&#8230;<BR>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i_infoprovider&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;L_MMOG88&#8217; &#8220;<BR></FONT>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i_query&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;Z_MY_QUERY&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i_t_parameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = gt_para<BR>&nbsp;&nbsp;&nbsp; IMPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e_axis_info&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = gt_axis_info<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e_cell_data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = gt_cell_data<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e_axis_data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = gt_axis_data<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e_txt_symbols&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = gt_text_symb<BR>&nbsp;&nbsp;&nbsp; EXCEPTIONS<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; no_applicable_data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 1<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; invalid_variable_values = 2<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; no_authority&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 3<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; abort&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 4<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; invalid_input&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 5<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; invalid_view&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 6<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OTHERS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 7.<BR>&nbsp; IF sy-subrc &lt;&gt; 0.<BR>&nbsp;&nbsp;&nbsp; WRITE: / &#8216;RRW3_GET_QUERY_VIEW_DATA fehler&#8217;, sy-subrc.<BR>&nbsp; ELSE.<BR><FONT color="#fb2412">*** Read columns</FONT><BR>&nbsp;&nbsp;&nbsp; READ TABLE gt_axis_data INTO gs_axis_x WITH KEY axis = 0.<BR><FONT color="#fb2412">*** Read rows</FONT><BR>&nbsp;&nbsp;&nbsp; READ TABLE gt_axis_data INTO gs_axis_y WITH KEY axis = 1.</P><P class="sap1"><FONT color="#fb2412">*** print column Titles</FONT><BR>&nbsp;&nbsp;&nbsp; POSITION 74.<BR>&nbsp;&nbsp;&nbsp; LOOP AT gs_axis_x-set ASSIGNING &lt;setx&gt;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE: &lt;setx&gt;-caption(30).<BR>&nbsp;&nbsp;&nbsp; ENDLOOP.</P><P class="sap1">&nbsp;&nbsp;&nbsp; CLEAR lv_index.</P><P class="sap1"><FONT color="#fb2412">*** For each row&#8230;.</FONT><BR>&nbsp;&nbsp;&nbsp; LOOP AT gs_axis_y-set ASSIGNING &lt;sety&gt;.<BR><FONT color="#fb2412">*** write values name</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE: / &lt;sety&gt;-caption.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; APPEND INITIAL LINE TO gt_bwdata ASSIGNING &lt;bwdata&gt;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bwdata&gt;-name = &lt;sety&gt;-caption.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_field = 1.<BR><FONT color="#fb2412">*** &#8230;process all columns</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LOOP AT gs_axis_x-set ASSIGNING &lt;setx&gt;.<BR><FONT color="#fb2412">*** initialize counter values</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADD 1 TO lv_index.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADD 1 TO lv_field.</P><P class="sap1"><FONT color="#fb2412">*** get next data</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; READ TABLE gt_cell_data ASSIGNING &lt;cell&gt; INDEX lv_index.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IF sy-subrc = 0.<BR><FONT color="#fb2412">*** print value<BR></FONT>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;cell&gt;-formatted_value(30) RIGHT-JUSTIFIED.<BR><FONT color="#fb2412">*** assign column-field of internal table</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASSIGN COMPONENT lv_field OF STRUCTURE &lt;bwdata&gt; TO &lt;value&gt;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IF sy-subrc = 0.<BR><FONT color="#fb2412">*** set value to apropriate column in internal table</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;value&gt; = &lt;cell&gt;-value.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IF lv_field = 2.<BR><FONT color="#fb2412">*** setting units/ currency must be done only once</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE &lt;cell&gt;-mwkz.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHEN &#8216;M&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CASE &lt;cell&gt;-unit.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHEN &#8216;PCS&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bwdata&gt;-unit = &#8216;ST&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ENDCASE.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHEN &#8216;W&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bwdata&gt;-currency = &lt;cell&gt;-currency.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ENDCASE.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELSE.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_exit = &#8216;X&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IF lv_exit &lt;&gt; space. EXIT. ENDIF.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ENDLOOP.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IF lv_exit &lt;&gt; space. EXIT. ENDIF.<BR>&nbsp;&nbsp;&nbsp; ENDLOOP.<BR>&nbsp; ENDIF.</P><P class="sap1"><BR><FONT color="#fb2412">*** now print list again from internal table:</FONT><BR>&nbsp; ULINE.<BR>&nbsp; LOOP AT gt_bwdata ASSIGNING &lt;bwdata&gt;.<BR>&nbsp;&nbsp;&nbsp; WRITE: / &lt;bwdata&gt;-name.<BR>&nbsp;&nbsp;&nbsp; IF &lt;bwdata&gt;-unit &lt;&gt; space.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-unit.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-01 EXPONENT 0 UNIT&nbsp;&nbsp;&nbsp; &lt;bwdata&gt;-unit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-02 EXPONENT 0 UNIT&nbsp;&nbsp;&nbsp; &lt;bwdata&gt;-unit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-03 EXPONENT 0 UNIT&nbsp;&nbsp;&nbsp; &lt;bwdata&gt;-unit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-04 EXPONENT 0 UNIT&nbsp;&nbsp;&nbsp; &lt;bwdata&gt;-unit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-05 EXPONENT 0 UNIT&nbsp;&nbsp;&nbsp; &lt;bwdata&gt;-unit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-06 EXPONENT 0 UNIT&nbsp;&nbsp;&nbsp; &lt;bwdata&gt;-unit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NO-ZERO.<BR>&nbsp;&nbsp;&nbsp; ELSE.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-currency.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-01 EXPONENT 0 CURRENCY &lt;bwdata&gt;-currency NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-02 EXPONENT 0 CURRENCY &lt;bwdata&gt;-currency NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-03 EXPONENT 0 CURRENCY &lt;bwdata&gt;-currency NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-04 EXPONENT 0 CURRENCY &lt;bwdata&gt;-currency NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-05 EXPONENT 0 CURRENCY &lt;bwdata&gt;-currency NO-ZERO.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WRITE &lt;bwdata&gt;-06 EXPONENT 0 CURRENCY &lt;bwdata&gt;-currency NO-ZERO.<BR>&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp; ENDLOOP.</P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/daten-aus-query-lesen/">Daten aus Query lesen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/daten-aus-query-lesen/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Select-Options übernehmen</title>
		<link>/blog/select-options-uebernehmen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 09 Jul 2008 16:38:09 +0000</pubDate>
				<category><![CDATA[Business Warehouse]]></category>
		<category><![CDATA[BW]]></category>
		<category><![CDATA[Extraktor]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=495</guid>

					<description><![CDATA[<p>Bei einem Extraktor werden die Select-Options in einer generellen Ranges-Tabelle &#252;bergeben. Damit im Programm sinnvoll damit gearbeitet werden kann, m&#252;ssen die Daten in lokale Ranges-Tabellen &#252;berf&#252;hrt werden. ein kleines Makro erleichtert hierbei die Arbeit...</p>
<p>Der Beitrag <a href="/blog/select-options-uebernehmen/">Select-Options übernehmen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Bei einem Extraktor werden die Select-Options in einer generellen Ranges-Tabelle &uuml;bergeben. Damit im Programm sinnvoll damit gearbeitet werden kann, m&uuml;ssen die Daten in lokale Ranges-Tabellen &uuml;berf&uuml;hrt werden. ein kleines Makro erleichtert hierbei die Arbeit&#8230;<br /><P>In der Regel werden die Select-Options mit der Struktur RSSELECT &uuml;bergeben:</P><P class="sap1">FIELDNM Feldname<BR>SIGN&nbsp;&nbsp;&nbsp; Selektionskriterien: SIGN<BR>OPTION&nbsp; Selektionskriterien: OPTION<BR>LOW&nbsp;&nbsp;&nbsp;&nbsp; Selektionskriterien: Von-Wert<BR>HIGH&nbsp;&nbsp;&nbsp; Selektionskriterien: Bis-Wert</P><P>Ich verwende f&uuml;r das Kopieren in eine lokale Ranges-Tabelle gerne folgendes Makro:</P><P class="sap1">DEFINE _transfer_select_options.<BR><BR>*** Ranges-Tabelle l&ouml;schen<BR>&nbsp; refresh &amp;2.<BR>*** &Uuml;bernehmen<BR>&nbsp; loop at s_s_if-t_select into ls_select<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; where fieldnm = &amp;1.<BR>&nbsp;&nbsp;&nbsp; move-corresponding ls_select to &amp;2.<BR>&nbsp;&nbsp;&nbsp; append &amp;2.<BR>&nbsp; endloop.<BR><BR>END-OF-DEFINITION.</P><P>Das Makro kann einmal im TOP-Include der Funktionsgruppe definiert werden und steht dann allen Bausteinen der Gruppe zur Verf&uuml;gung.</P><P>Aufgerufen wird das Makro wie folgt:</P><P class="sap1">_transfer_select_options:<BR>&nbsp;&nbsp;&nbsp;&nbsp; &#8216;VKORG&#8217;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lr_vkorg,<BR>&nbsp;&nbsp;&nbsp;&nbsp; &#8216;VTWEG&#8217;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lr_vtweg.<BR></P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/select-options-uebernehmen/">Select-Options übernehmen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
