<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Selektionsbilder Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/selektionsbilder/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Thu, 17 Aug 2023 17:01:14 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Selektionsbilder Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Variante oder Layout?</title>
		<link>/blog/variante-oder-layout/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 18 Feb 2014 07:59:52 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Reports]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<category><![CDATA[variante]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4269</guid>

					<description><![CDATA[<p>Zwei Begriffe werden häufig verwechselt beziehungsweise fälschlicherweise synonym verwendet: Variante und Layout. Deswegen zuerst die korrekte Bedeutung der beiden Begriffe: Variante Eine Variante ist &#8211; programmtechnisch gesehen &#8211; immer die Speicherung der Daten eines Report-Selektionsbildes. Variante werden natürlich in einem SAP-System auch in anderen Zusammenhängen verwendet, allerdings ist dann die Verwechslung mit einem Layout in der Regel nicht gegeben. Layout Ein Layout gibt es in der Regel nur im Kontext von ALV (Advanced List Viewer)...</p>
<p>Der Beitrag <a href="/blog/variante-oder-layout/">Variante oder Layout?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Zwei Begriffe werden häufig verwechselt beziehungsweise fälschlicherweise synonym verwendet: Variante und Layout. Deswegen zuerst die korrekte Bedeutung der beiden Begriffe:</p>
<h2>Variante</h2>
<p>Eine Variante ist &#8211; programmtechnisch gesehen &#8211; immer die Speicherung der Daten eines Report-Selektionsbildes.</p>
<p><img fetchpriority="high" decoding="async" width="427" height="201" class="alignnone size-full wp-image-4270" alt="" src="https://tricktresor.com/wp-content/uploads/2014/01/img_52d802547249d.png" srcset="/wp-content/uploads/2014/01/img_52d802547249d.png 427w, /wp-content/uploads/2014/01/img_52d802547249d-300x141.png 300w" sizes="(max-width: 427px) 100vw, 427px" /></p>
<p>Variante werden natürlich in einem SAP-System auch in anderen Zusammenhängen verwendet, allerdings ist dann die Verwechslung mit einem Layout in der Regel nicht gegeben.</p>
<h2>Layout</h2>
<p>Ein Layout gibt es in der Regel nur im Kontext von ALV (Advanced List Viewer) und zwar gleichermaßen in der List-Variante als auch in der modernen Grid-Version. Für ein ALV können &#8211; sofern der Programmierer es vorgesehen hat &#8211; die Layout-Einstellungen, wie z. B. Spaltenbreite, Spaltenreihenfolge, Sortierung, Filter, Summenbildung usw.), gespeichert werden. Alle diese Einstellungen definieren das Layout.</p>
<p>Dieses <em>Layout</em> wird sehr häufig mit <em>Variante</em> verwechselt. Der Grund hierfür ist ziemlich klar, denn der intern verwendeten Methoden und Feldnamen beinhalten das Wort VARIANT&#8230;</p>
<p>Verwendete Struktur für die Übergabe von Layout-Daten:</p>
<p><img decoding="async" width="812" height="360" class="alignnone size-full wp-image-4271" alt="" src="https://tricktresor.com/wp-content/uploads/2014/01/img_52d8044e8bb38.png" srcset="/wp-content/uploads/2014/01/img_52d8044e8bb38.png 812w, /wp-content/uploads/2014/01/img_52d8044e8bb38-300x133.png 300w, /wp-content/uploads/2014/01/img_52d8044e8bb38-624x276.png 624w" sizes="(max-width: 812px) 100vw, 812px" /></p>
<p>Methode SET_VARIANT der Klasse CL_GUI_ALV_GRID</p>
<p><img decoding="async" width="547" height="239" class="alignnone size-full wp-image-4272" alt="" src="https://tricktresor.com/wp-content/uploads/2014/01/img_52d804a90e0ad.png" srcset="/wp-content/uploads/2014/01/img_52d804a90e0ad.png 547w, /wp-content/uploads/2014/01/img_52d804a90e0ad-300x131.png 300w" sizes="(max-width: 547px) 100vw, 547px" /></p>
<p>Der Beitrag <a href="/blog/variante-oder-layout/">Variante oder Layout?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Feld im Selektionsbild nur bei Anlage einer Variante sichtbar?</title>
		<link>/blog/feld-im-selektionsbild-nur-bei-anlage-einer-variante-sichtbar/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 14 Feb 2014 15:36:43 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[variante]]></category>
		<category><![CDATA[modify screen]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<category><![CDATA[Generell]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4393</guid>

					<description><![CDATA[<p>Eine von diesen Anforderungen, die mir einfach so über den Weg laufen: Ich wollte einen Parameter auf dem Selektionsbild ausblenden. Allerdings sollte es möglich sein, bei Anlage einer Variante, diesen Parameter zu ändern. </p>
<p>Der Beitrag <a href="/blog/feld-im-selektionsbild-nur-bei-anlage-einer-variante-sichtbar/">Feld im Selektionsbild nur bei Anlage einer Variante sichtbar?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ich bin gerade über die Aufgabe gestolpert, dass ein Feld im Selektionsbild generell ausgeblendet werden soll. Bei der Anlage einer Variante jedoch, muss das Feld sichtbar sein.</p>
<p>Die Lösung ist relativ einfach: Im PBO des Reports (AT SELECTION-SCREEN OUTPUT) fragen wir das Systemfeld SUBTY ab und steuern mittels MODIFY SCREEN die Sichtbarkeit der Felder.</p>
<h2>Coding</h2>
<pre>*== Parameter soll immer angezeigt werden
PARAMETERS p_diag TYPE char10.
*== Parameter soll nur in der Variantenansicht eingabebereit sein
PARAMETERS p_vari TYPE char10 MODIF ID var.

AT SELECTION-SCREEN OUTPUT.
  IF sy-subty = 20. "Hex:14, Bin:00010100"
    LOOP AT SCREEN.
      IF screen-group1 = 'VAR'.
        IF sy-slset = space.
*== Keine Variante geladen: Feld ausblenden
          screen-active = '0'.
        ELSE.
*== Variante ist geladen: Feld anzeigen (nicht eingabebereit)
          screen-input = '0'.
        ENDIF.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.</pre>
<h2>Hardcore</h2>
<p>Auf der Suche nach einer Lösung habe ich auch eine Alternative gefunden per Dirty-Assign im Systemprogramm RSDBRUNT eine Variable abzufragen:</p>
<pre>FIELD-SYMBOLS &lt;mode_Vari&gt; TYPE c.
ASSIGN ('(RSDBRUNT)SUBMIT_INFO-MODE_VARI') TO &lt;mode_vari&gt;.
IF &lt;mode_vari&gt; IS ASSIGNED AND &lt;mode_vari&gt; = 'X'.
  "Pflege der Variante
ENDIF.</pre>
<p>Die Variante muss in beiden Fällen über die Transaktion SE38 angelegt werden.</p>
<p>Der Beitrag <a href="/blog/feld-im-selektionsbild-nur-bei-anlage-einer-variante-sichtbar/">Feld im Selektionsbild nur bei Anlage einer Variante sichtbar?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Pfadauswahl mit DIRECTORY_BROWSE</title>
		<link>/blog/pfadauswahl-mit-directory-browse/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 06 Feb 2014 13:46:59 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[value-request]]></category>
		<category><![CDATA[browse]]></category>
		<category><![CDATA[directory]]></category>
		<category><![CDATA[Verzeichnis]]></category>
		<category><![CDATA[suchhilfe]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[suchhilfe-exit]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<category><![CDATA[Upload]]></category>
		<category><![CDATA[Download]]></category>
		<category><![CDATA[f4]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4372</guid>

					<description><![CDATA[<p>Hier demonstriere ich die Verwendung der Methode CL_GUI_FRONTEND_SERVICES=>DIRECTORY_BROWSE. Eigentlich einfach zu verwenden, aber für die F4-Hilfe ist ein kleiner Trick notwendig. Zudem zeige ich, wie die Methode in einem Suchhilfe-Exit verwendet werden kann.</p>
<p>Der Beitrag <a href="/blog/pfadauswahl-mit-directory-browse/">Pfadauswahl mit DIRECTORY_BROWSE</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Um einen Dateipfad auf dem Frontend auszuwählen, gibt es die Methode DIRECTORY_BROWSE der Klasse CL_GUI_FRONTEND_SERVICES. Um sie jedoch in der F4-Hilfe eines Reports sinnvoll verwenden zu können, muss man sich noch eines Tricks bedienen. Das Problem: Bei Aufruf der F4-Hilfe steht der Wert des Parameters für den die F4-Hilfe aufgerufen wurde, nicht zur Verfügung.</p>
<p>Aus diesem Grund muss der Feldinhalt explizit mit Hilfe des Funktionsbausteins DYNP_VALUES_READ gelesen werden.</p>
<p><img loading="lazy" decoding="async" width="675" height="422" class="alignnone size-full wp-image-4374" src="https://tricktresor.com/wp-content/uploads/2014/02/img_52f391e706cfb.png" alt="" srcset="/wp-content/uploads/2014/02/img_52f391e706cfb.png 675w, /wp-content/uploads/2014/02/img_52f391e706cfb-300x187.png 300w, /wp-content/uploads/2014/02/img_52f391e706cfb-624x390.png 624w" sizes="(max-width: 675px) 100vw, 675px" /></p>
<h2>Coding</h2>
<pre>REPORT z_test_browse_directory.

*== SELECTION SCREEN
PARAMETERS p_path  TYPE text200 OBLIGATORY LOWER CASE.

*== Help Value path
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  PERFORM f4_path.

*== init
INITIALIZATION.
  PERFORM get_download_path.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  get_download_path
*&amp;---------------------------------------------------------------------*
FORM get_download_path.

*== local data
  DATA lv_upload_path    TYPE string.
  DATA lv_download_path  TYPE string.

*== get current download path
  CALL METHOD cl_gui_frontend_services=&gt;get_upload_download_path
    CHANGING
      upload_path   = lv_upload_path
      download_path = lv_download_path.

*== set parameter
  p_path = lv_download_path.

ENDFORM.                    "get_download_path

*&amp;---------------------------------------------------------------------*
*&amp;      Form  f4_path
*&amp;---------------------------------------------------------------------*
FORM f4_path.

*== local data
  DATA lv_out    TYPE string.
  DATA lv_in     TYPE string.
  DATA lt_fields TYPE TABLE OF dynpread.
  DATA ls_field  TYPE dynpread.

*== get current value for path
  ls_field = 'P_PATH'.
  APPEND ls_field TO lt_fields.

  CALL FUNCTION 'DYNP_VALUES_READ'
    EXPORTING
      dyname     = sy-cprog
      dynumb     = sy-dynnr
    TABLES
      dynpfields = lt_fields
    EXCEPTIONS
      OTHERS     = 1.

  IF sy-subrc = 0.
    READ TABLE lt_fields INTO ls_field INDEX 1.
    lv_in = ls_field-fieldvalue.
  ENDIF.

*== call popup for directory selection
  CALL METHOD cl_gui_frontend_services=&gt;directory_browse
    EXPORTING
      initial_folder  = lv_in
    CHANGING
      selected_folder = lv_out
    EXCEPTIONS
      OTHERS          = 4.

  IF sy-subrc = 0 AND lv_out IS NOT INITIAL.
*== set selected path
    p_path = lv_out.
  ELSE.
*== set origin path
    p_path = lv_in.
  ENDIF.

ENDFORM.</pre>
<h1>Verwendung in einer Suchhilfe</h1>
<p>Einfacher und sinnvoller jedoch ist die Verwendung in einer Suchhilfe! Warum? Erstens kann die Suchhilfe an ein entsprechendes Feld einer Dictionarystruktur angebunden werden und zweitens lässt sich auch in einem Report eine Suchhilfe einfacher verwenden.</p>
<p>Das Programm reduziert sich so auf die folgende Angabe bei dem Parameter P_PATH:</p>
<pre>PARAMETERS p_path  TYPE string OBLIGATORY LOWER CASE <span style="color: #ff0000;">MATCHCODE OBJECT ZSH_DIRECTORY</span>.</pre>
<p>du ahnst es schon: Die Suchhilfe heißt in diesem Fall ZSH_DIRECTORY. Um diese zu erstellen musst du folgendes tun:</p>
<ol>
<li>Anlage der Suchhilfe in der SE11</li>
<li>Anlage eines Funktionsbausteins, der als Suchhilfe-Exit verwendet wird.</li>
</ol>
<p>Wir fangen bei 2. an:</p>
<h2>2. Anlage Suchhilfe-Exit</h2>
<p>Du benötigst eine Funktionsgruppe. Einfach in der SE80 eine anlegen. In diese Funktionsgruppe kopierst du den Baustein F4IF_SHLP_EXIT_EXAMPLE auf den Baustein Z_F4IF_SHLP_EXIT_DIRECTORY. Das Kopieren ist wichtig, da die Suchhilfe-Exit-Bausteine eine definierte Schnittstelle haben.</p>
<p>Im STEP SELECT fügst du das Coding ein, dessen Kern wir bereits aus dem vorherigen Coding kennen:</p>
<pre>  IF callcontrol-step = 'SELECT'.
*== data (please set data definitions to top of function module!)
    DATA lv_in TYPE string.
    DATA lv_out TYPE string.
    FIELD-SYMBOLS &lt;itf&gt; LIKE LINE OF shlp-interface.
    FIELD-SYMBOLS &lt;rec&gt; LIKE LINE OF record_tab.
*== get field value
    READ TABLE shlp-interface WITH KEY shlpfield = 'PATH' ASSIGNING &lt;itf&gt;.
    IF sy-subrc = 0.
*== use field value as start directory
      lv_in = &lt;itf&gt;-value.
*== call popup for directory selection
      CALL METHOD cl_gui_frontend_services=&gt;directory_browse
        EXPORTING
          initial_folder  = lv_in
        CHANGING
          selected_folder = lv_out
        EXCEPTIONS
          OTHERS          = 4.
      IF sy-subrc = 0 AND lv_out IS NOT INITIAL.
        APPEND INITIAL LINE TO record_tab ASSIGNING &lt;rec&gt;.
        &lt;rec&gt;-string = lv_out.
        callcontrol-step = 'RETURN'.
      ENDIF.
    ENDIF.
  ENDIF.</pre>
<p>Grob passiert folgendes:</p>
<ol>
<li>Wir lesen aus der Schnittstellenbeschreibung den Parameter PATH, den wir in der Suchhilfe definiert haben, aus und verwenden ihn als Startverzeichnis</li>
<li>Aufruf der Methode DIRECTORY_BROWSE</li>
<li>Füllen der Rückgabetabelle RECORD_TAB</li>
<li>Setzen des Folgeschrittes RETURN um die Anzeige des gefundenen Verzeichnisses im Popup zu verhindern</li>
</ol>
<p>[notice type=&#8217;info&#8217;]Eventuell kann es sein, dass in dem Beispiel das Startverzeichnis nicht in die Suchhilfe übernommen wird. In dem Fall muss gegebenenfalls ebenfalls der Funktionsbaustein DYNP_VALUES_READ eingesetzt werden. Das verwendete Parametername steht in der INTERFACE-Struktur im Feld VALFIELD.[/notice]</p>
<h2>1. Anlage der Suchhilfe</h2>
<p>Transaktion SE11: Suchhilfe Anlegen:</p>
<p><img loading="lazy" decoding="async" width="414" height="359" class="alignnone size-full wp-image-4377" src="https://tricktresor.com/wp-content/uploads/2014/02/img_52f395b7a234f.png" alt="" srcset="/wp-content/uploads/2014/02/img_52f395b7a234f.png 414w, /wp-content/uploads/2014/02/img_52f395b7a234f-300x260.png 300w" sizes="(max-width: 414px) 100vw, 414px" /></p>
<p>In der Suchhilfe muss der erstellte Funktionsbaustein als Suchhilfe-Exit eingetragen werden:</p>
<p><img loading="lazy" decoding="async" width="737" height="429" class="alignnone size-full wp-image-4378" src="https://tricktresor.com/wp-content/uploads/2014/02/img_52f3960b0c6f8.png" alt="" srcset="/wp-content/uploads/2014/02/img_52f3960b0c6f8.png 737w, /wp-content/uploads/2014/02/img_52f3960b0c6f8-300x174.png 300w, /wp-content/uploads/2014/02/img_52f3960b0c6f8-624x363.png 624w" sizes="(max-width: 737px) 100vw, 737px" /></p>
<p>Der Beitrag <a href="/blog/pfadauswahl-mit-directory-browse/">Pfadauswahl mit DIRECTORY_BROWSE</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Variantenwahl per Listbox</title>
		<link>/blog/variantenwahl-per-listbox/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Sun, 26 May 2013 14:30:16 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<category><![CDATA[dropdown]]></category>
		<category><![CDATA[listbox]]></category>
		<category><![CDATA[variante]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=673</guid>

					<description><![CDATA[<p>Wenn Anwender in einem Report häufig verschiedene Varianten verwenden müssen, so können Sie unsere Version der Variantenauswahl verwenden. Die Varianten werden in einer Listbox dargestellt und können einfach ausgewählt werden.</p>
<p>Der Beitrag <a href="/blog/variantenwahl-per-listbox/">Variantenwahl per Listbox</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Wenn Anwender in einem Report häufig verschiedene Varianten verwenden müssen, so können Sie unsere Version der Variantenauswahl verwenden. Die Varianten werden in einer Listbox dargestellt und können einfach ausgewählt werden.</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/abap/Auswahl_Variante.jpg" /><br />
Auswahl der Selektionsbildvariante per Listbox</td>
</tr>
</tbody>
</table>
<p>Vielen Dank an Ralf Wenzel!</p>
<p>Beachten Sie auch das Programm &#8220;<a href="/wp-content/index.php?aID=489" target="_self">Variantenschnellauswahl</a>&#8220;.</p>
<p class="head1">Coding</p>
<p class="sap1">REPORT ZZ_VARIANT_LISTBOX.</p>
<p class="sap1">PARAMETERS p1 TYPE char10.<br />
PARAMETERS p2 TYPE char10.</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;*<br />
* Listbox zur Auswahl der Selelektionsbild-Variante<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;*<br />
</span>SELECTION-SCREEN BEGIN OF BLOCK var WITH FRAME TITLE text-var.<br />
PARAMETERS pa_selva TYPE raldb_vari AS LISTBOX<br />
VISIBLE LENGTH 40<br />
USER-COMMAND variant.<br />
SELECTION-SCREEN END OF BLOCK var.</p>
<p class="sap1">INITIALIZATION.<br />
PERFORM set_values.</p>
<p class="sap1">AT SELECTION-SCREEN.<br />
PERFORM set_variant.</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  set_values<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
</span>FORM set_values.</p>
<p class="sap1">  DATA lt_varit         TYPE vrm_values.</p>
<p class="sap1"><span style="color: #fb2412;">*== Listbox mit Varianten füllen</span><br />
SELECT variant vtext<br />
FROM varit INTO TABLE lt_varit<br />
WHERE langu  = sy-langu<br />
AND report = sy-repid.</p>
<p class="sap1">  CALL FUNCTION &#8216;VRM_SET_VALUES&#8217;<br />
EXPORTING<br />
id              = &#8216;PA_SELVA&#8217;<br />
values          = lt_varit<br />
EXCEPTIONS<br />
id_illegal_name = 1<br />
OTHERS          = 2.<br />
ENDFORM.                    &#8220;set_values</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  set_variant<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*</span><br />
FORM set_variant.</p>
<p class="sap1">  DATA lv_selva         TYPE raldb_vari.<br />
DATA ls_rkey          TYPE rsvarkey.</p>
<p class="sap1">  CASE sy-ucomm.<br />
WHEN &#8216;VARIANT&#8217;.<br />
lv_selva        = pa_selva.<br />
ls_rkey-report  = sy-repid.<br />
ls_rkey-variant = lv_selva.<br />
IF pa_selva IS INITIAL.<br />
<span style="color: #fb2412;">*== An dieser Stelle kann man das Selektionsbild zurücksetzen,<br />
*== wenn man mag<br />
</span>      ENDIF.<br />
PERFORM %_import_vari_clnt<br />
USING    ls_rkey sy-subrc sy-mandt<br />
CHANGING sy-subrc.<br />
pa_selva = lv_selva.<br />
ENDCASE.</p>
<p class="sap1">ENDFORM.                    &#8220;set_variant</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/variantenwahl-per-listbox/">Variantenwahl per Listbox</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Aktueller Inhalt des Selektionsbildes</title>
		<link>/blog/aktueller-inhalt-des-selektionsbildes/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 06 Aug 2012 10:46:14 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=651</guid>

					<description><![CDATA[<p>Um herauszufinden, welche Selektionswerte aktuell in einem Selektionsbild erfasst wurden, k&#246;nnen Sie Funktionsbausteine verwenden.</p>
<p>Der Beitrag <a href="/blog/aktueller-inhalt-des-selektionsbildes/">Aktueller Inhalt des Selektionsbildes</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Um herauszufinden, welche Selektionswerte aktuell in einem Selektionsbild erfasst wurden, können Sie Funktionsbausteine verwenden.</p>
<p class="head1">RS_REFRESH_FROM_SELECTOPTIONS</p>
<p>Mit diesem Baustein erhalten Sie die aktuellen Werte für ein Selektionsbild.</p>
<p class="head1">RS_VARIANT_CONTENTS</p>
<p>Um an den Inhalt gespeicherter Reportvarianten zu kommen, können Sie diesen Baustein verwenden.</p>
<p>Der Beitrag <a href="/blog/aktueller-inhalt-des-selektionsbildes/">Aktueller Inhalt des Selektionsbildes</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Dynamischer Selektionstext</title>
		<link>/blog/dynamischer-selektionstext/</link>
					<comments>/blog/dynamischer-selektionstext/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 23 Apr 2008 10:19:54 +0000</pubDate>
				<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=474</guid>

					<description><![CDATA[<p>Mit folgendem kurzem Coding ist es möglich, den Selektionstext dynamisch zu ändern.</p>
<p>Der Beitrag <a href="/blog/dynamischer-selektionstext/">Dynamischer Selektionstext</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mit folgendem kurzem Coding ist es m&ouml;glich, den Selektionstext dynamisch zu &auml;ndern.<br /><P class="sap1">&nbsp;</P><P class="sap1">TABLES VBAK.<BR><BR>SELECT-OPTIONS:<BR>&nbsp; S_VBELN FOR VBAK-VBELN.<BR><BR>AT SELECTION-SCREEN OUTPUT.<BR>&nbsp;&nbsp;<BR>&nbsp; LOOP AT SCREEN.<BR>&nbsp;&nbsp;&nbsp; IF screen-name = &#8216;%_S_VBELN_%_APP_%-TEXT&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; %_S_VBELN_%_APP_%-TEXT = &#8216;anderer Text&#8217;.<BR>&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp; ENDLOOP. </P><P>Mithilfe der Funktionsbausteine <STRONG>SELECTION_TEXTS_MODIFY </STRONG>und <STRONG>SELECTION_TEXTS_MODIFY_DTEL</STRONG> kann den einzelnen Parametern ebenfalls ein anderer Text zugeordnet werden.</P></p>
<p>Der Beitrag <a href="/blog/dynamischer-selektionstext/">Dynamischer Selektionstext</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/dynamischer-selektionstext/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Eigener GUI-Status</title>
		<link>/blog/eigener-gui-status/</link>
					<comments>/blog/eigener-gui-status/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 31 Mar 2008 10:47:18 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=468</guid>

					<description><![CDATA[<p>Bei Reports mit Selektionsbild gibt es im Grunde nur einen Status. Je nachdem, ob Varianten oder eine Dokumentation vorhanden sind, werden zus&#228;tzlich Druckkn&#246;pfe eingeblendet. Sie k&#246;nnen jedoch auch einen eigenen GUI-Status verwenden oder Funktionen ausblenden.</p>
<p>Der Beitrag <a href="/blog/eigener-gui-status/">Eigener GUI-Status</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Bei Reports mit Selektionsbild gibt es im Grunde nur einen Status. Je nachdem, ob Varianten oder eine Dokumentation vorhanden sind, werden zusätzlich Druckknöpfe eingeblendet. Sie können jedoch auch einen eigenen GUI-Status verwenden oder Funktionen ausblenden.<br></p>



<p>Mithilfe des Funktionsbausteins RS_SET_SELSCREEN_STATUS kann ein anderer Status verwendet werden oder es können Funktionen des aktuellen Status ausgeblendet werden.</p>



<p>Folgender Beispielreport soll die Anwendung verdeutlichen. Die Funktion &#8220;Ausführen&#8221; wird so lange ausgeblendet, bis mindestens eins der drei Eingabefelder gefüllt wurde.</p>



<h2 class="wp-block-heading">Coding</h2>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">DATA gt_excl TYPE STANDARD TABLE OF syucomm.

PARAMETERS p1(1).
PARAMETERS p2(2).
PARAMETERS p3(3).

AT SELECTION-SCREEN OUTPUT.

  IF p1 IS INITIAL AND
     p2 IS INITIAL AND
     p3 IS INITIAL.
*** Keins der Felder ist ausgefüllt: Ausführen unterbinden
    IF gt_excl IS INITIAL.
      APPEND 'ONLI' TO gt_excl.
    ENDIF.
  ELSE.
*** mindestens ein Feld ist ausgefüllt: Ausführen wieder zulassen
    CLEAR gt_excl.
  ENDIF.

  CALL FUNCTION 'RS_SET_SELSCREEN_STATUS'
    EXPORTING
      p_status  = sy-pfkey
    TABLES
      p_exclude = gt_excl.

START-OF-SELECTION.
  CHECK p1 IS NOT INITIAL OR
        p2 IS NOT INITIAL OR
        p3 IS NOT INITIAL.
  WRITE: / 'Tricktresor.de'.</pre>
<p>Der Beitrag <a href="/blog/eigener-gui-status/">Eigener GUI-Status</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/eigener-gui-status/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Druckknöpfe und Listausgabe</title>
		<link>/blog/druckknoepfe-und-listausgabe/</link>
					<comments>/blog/druckknoepfe-und-listausgabe/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 20 Sep 2006 15:13:10 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=380</guid>

					<description><![CDATA[<p>Druckkn&#246;pfen auf einem Selektionsbild kann man dazu benutzen, um andere Programme oder Funktionen aufzurufen. Wenn Sie jedoch einzelne Listausgaben machen m&#246;chten, dann geht's nur mit einem kleinen Trick. Das folgende Programm zeigt, wie es funktioniert.</p>
<p>Der Beitrag <a href="/blog/druckknoepfe-und-listausgabe/">Druckknöpfe und Listausgabe</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Druckkn&ouml;pfen auf einem Selektionsbild kann man dazu benutzen, um andere Programme oder Funktionen aufzurufen. Wenn Sie jedoch einzelne Listausgaben machen m&ouml;chten, dann geht&#8217;s nur mit einem kleinen Trick. Das folgende Programm zeigt, wie es funktioniert.<br /><P class="head1">Coding</P><P class="sap1">REPORT zz_drucktaste.</P><P class="sap1">DATA:<BR>&nbsp; gv_field(30),<BR>&nbsp; gv_value(30),<BR>&nbsp; gt_exclude TYPE STANDARD TABLE OF syucomm.</P><P class="sap1"><FONT color="#fb2412">*** Drucktaste 1</FONT><BR>SELECTION-SCREEN PUSHBUTTON /1(20) text-pb1 USER-COMMAND pb1.<BR><FONT color="#fb2412">*** Drucktaste 2</FONT><BR>SELECTION-SCREEN PUSHBUTTON /3(20) text-pb2 USER-COMMAND pb2.<BR><FONT color="#fb2412">*** Drucktaste 3</FONT><BR>SELECTION-SCREEN PUSHBUTTON /6(20) text-pb3 USER-COMMAND pb3.</P><P class="sap1">INITIALIZATION.<BR><FONT color="#fb2412">*** &#8220;Ausf&uuml;hren&#8221; verbieten</FONT><BR>&nbsp; APPEND &#8216;ONLI&#8217; TO gt_exclude.<BR><FONT color="#fb2412">*** &#8220;Ausf&uuml;hren + Drucken&#8221; verbieten</FONT><BR>&nbsp; APPEND &#8216;PRIN&#8217; TO gt_exclude.<BR><FONT color="#fb2412">*** &#8220;Im Hintergrund ausf&uuml;hren&#8221; verbieten</FONT><BR>&nbsp; APPEND &#8216;SJOB&#8217; TO gt_exclude.<BR><FONT color="#fb2412">*** Aktuellen Status setzen und obige Funktionen verbieten</FONT><BR>&nbsp; CALL FUNCTION &#8216;RS_SET_SELSCREEN_STATUS&#8217;<BR>&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p_status&nbsp; = sy-pfkey<BR>&nbsp;&nbsp;&nbsp; TABLES<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p_exclude = gt_exclude.</P><P class="sap1"><FONT color="#fb2412">*** Selektionsbild (PAI)</FONT><BR>AT SELECTION-SCREEN.</P><P class="sap1">&nbsp; CASE sy-ucomm.<BR><FONT color="#fb2412">*** Drucktasten abfragen</FONT><BR>&nbsp;&nbsp;&nbsp; WHEN &#8216;PB1&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PERFORM pb.<BR>&nbsp;&nbsp;&nbsp; WHEN &#8216;PB2&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PERFORM pb.<BR>&nbsp;&nbsp;&nbsp; WHEN &#8216;PB3&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PERFORM pb.<BR>&nbsp; ENDCASE.</P><P class="sap1"><FONT color="#fb2412">*** Doppelklick-Ereignis</FONT><BR>AT LINE-SELECTION.</P><P class="sap1"><FONT color="#fb2412">*** Feld und Feldwert ermitteln</FONT><BR>&nbsp; GET CURSOR FIELD gv_field VALUE gv_value.<BR><FONT color="#fb2412">*** Nur weiter, wenn auf SY-UCOMM geklickt wurde</FONT><BR>&nbsp; CHECK gv_field = &#8216;SY-UCOMM&#8217;.<BR><FONT color="#fb2412">*** Meldung</FONT><BR>&nbsp; MESSAGE i000(vz) WITH &#8216;Knopf:&#8217; gv_value.</P><P class="sap1">START-OF-SELECTION.</P><P class="sap1"><FONT color="#fb2412">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<BR>*&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form&nbsp; pb<BR>*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*</FONT><BR>FORM pb.</P><P class="sap1"><FONT color="#fb2412">*** Listverarbeitung</FONT><BR>&nbsp; LEAVE TO LIST-PROCESSING.<BR><FONT color="#fb2412">*** Programm-Titel unterdr&uuml;cken</FONT><BR>&nbsp; NEW-PAGE NO-TITLE.<BR><FONT color="#fb2412">*** Status setzen</FONT><BR>&nbsp; SET PF-STATUS &#8216;PICK&#8217; OF PROGRAM &#8216;SAPMSSY0&#8217;.<BR><FONT color="#fb2412">*** Ausgabe</FONT><BR>&nbsp; WRITE: / &#8216;Es wurde gedr&uuml;ckt:&#8217;,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sy-ucomm(4) COLOR COL_TOTAL HOTSPOT ON.</P><P class="sap1">ENDFORM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;pb</P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/druckknoepfe-und-listausgabe/">Druckknöpfe und Listausgabe</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/druckknoepfe-und-listausgabe/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Status-Icon</title>
		<link>/blog/status-icon/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 09 Feb 2006 10:39:10 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<category><![CDATA[ABAP eigene Programme]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=368</guid>

					<description><![CDATA[<p>Mit Ankreuzfeldern k&#246;nnen die Zust&#228;nde "An" und "Aus" dargestellt werden. M&#246;chte man mehr Zust&#228;nde darstellen, ben&#246;tigt man Radiobuttons oder eine Listbox. Eine andere M&#246;glichkeit besteht darin, Druckkn&#246;pfe mit unterschiedlichen Symbolen zu verwenden.</p>
<p>Der Beitrag <a href="/blog/status-icon/">Status-Icon</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mit Ankreuzfeldern k&ouml;nnen die Zust&auml;nde &#8220;An&#8221; und &#8220;Aus&#8221; dargestellt werden. M&ouml;chte man mehr Zust&auml;nde darstellen, ben&ouml;tigt man Radiobuttons oder eine Listbox. Eine andere M&ouml;glichkeit besteht darin, Druckkn&ouml;pfe mit unterschiedlichen Symbolen zu verwenden.<br /><P class="text1">Das hier&nbsp;vorgestellte Programm zeigt M&ouml;glichkeiten auf, Druckkn&ouml;pfe zur einfachen Zustandsanzeige zu verwenden.</P><P><TABLE class="tblimg" cellPadding="0" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/statusicons.JPG"><BR>Beispiel zur Statusanzeige</P></TD></TR></TBODY></TABLE></P><P class="text1">Coding</P><P class="sap1">REPORT ZZSTATUSICON.<BR>INCLUDE &lt;ICON&gt;.</P><P class="sap1"><FONT color="#fb2412">*** Selektionsbild mit drei Status-Drucktasten</FONT><BR>SELECTION-SCREEN PUSHBUTTON /1(8) PUSH01 USER-COMMAND P01.<BR>SELECTION-SCREEN PUSHBUTTON /1(8) PUSH02 USER-COMMAND P02.<BR>SELECTION-SCREEN PUSHBUTTON /1(8) PUSH03 USER-COMMAND P03.</P><P class="sap1">INITIALIZATION.<BR><FONT color="#fb2412">*** Drucktasten Vorbelegen</FONT><BR>&nbsp; PERFORM SWITCH USING PUSH01.<BR>&nbsp; PERFORM SWITCH USING PUSH02.<BR>&nbsp; PERFORM SWITCH USING PUSH03.</P><P class="sap1">AT SELECTION-SCREEN.<BR><FONT color="#fb2412">*** Drucktasten auswerten</FONT><BR>&nbsp; CHECK SY-UCOMM(1) = &#8216;P&#8217;.<BR>&nbsp; CASE SY-UCOMM.<BR>&nbsp;&nbsp;&nbsp; WHEN &#8216;P01&#8217;.<BR><FONT color="#fb2412">*** Drucktaste 1</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PERFORM SWITCH USING PUSH01.<BR>&nbsp;&nbsp;&nbsp; WHEN &#8216;P02&#8217;.<BR><FONT color="#fb2412">*** Drucktaste 2</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PERFORM SWITCH USING PUSH02.<BR>&nbsp;&nbsp;&nbsp; WHEN &#8216;P03&#8217;.<BR><FONT color="#fb2412">*** Drucktaste 3</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PERFORM SWITCH USING PUSH03.<BR>&nbsp; ENDCASE.</P><P class="sap1"><FONT color="#fb2412">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<BR>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FORM SWITCH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *<BR>*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<BR>* Umschalten des Status: Ja &#8211; Nein &#8211; Egal<BR>*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*</FONT><BR>FORM SWITCH USING PUSH TYPE ANY.</P><P class="sap1">&nbsp; DATA LPUSH(4).<BR>&nbsp; LPUSH = PUSH.<BR>&nbsp; CASE LPUSH.<BR>&nbsp;&nbsp;&nbsp; WHEN ICON_LED_GREEN.<BR><FONT color="#fb2412">*** Status GR&Uuml;N -&gt; ROT</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PUSH = ICON_LED_RED.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CONCATENATE PUSH &#8216;Nein&#8217; INTO PUSH.<BR>&nbsp;&nbsp;&nbsp; WHEN ICON_LED_RED OR SPACE.<BR><FONT color="#fb2412">*** Status ROT -&gt; GELB</FONT><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PUSH = ICON_LED_YELLOW.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CONCATENATE PUSH &#8216;Egal&#8217; INTO PUSH.<BR>&nbsp;&nbsp;&nbsp; WHEN ICON_LED_YELLOW.<BR><FONT color="#fb2412">*** Status GELB -&gt; GR&Uuml;N<BR></FONT>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PUSH = ICON_LED_GREEN.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CONCATENATE PUSH &#8216;Ja&#8217; INTO PUSH.<BR>&nbsp; ENDCASE.</P><P class="sap1">ENDFORM.<BR></P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/status-icon/">Status-Icon</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Radiobuttons und zugehörige Felder</title>
		<link>/blog/radiobuttons-und-zugehoerige-felder/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 17 Mar 2005 15:48:22 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=322</guid>

					<description><![CDATA[<p>Oftmals m&#246;chte man durch Radiobuttons bestimmte Felder ein- oder ausblenden, so dass es nicht zu unsinnigen Eingaben kommen kann. Hier ein Beispiel.</p>
<p>Der Beitrag <a href="/blog/radiobuttons-und-zugehoerige-felder/">Radiobuttons und zugehörige Felder</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Oftmals m&ouml;chte man durch Radiobuttons bestimmte Felder ein- oder ausblenden, so dass es nicht zu unsinnigen Eingaben kommen kann. Hier ein Beispiel.<br /><P>Im folgenden Beispiel kann der Anwender einen Namen oder einen Sortierbegriff eingeben. Je nachdem, welchen Radiobutton der Anwender bet&auml;tigt, soll das andere Feld auf nicht eingabebereit gesetzt werden.</P><P class="sap1">PARAMETERS:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; p_rb_nam RADIOBUTTON GROUP a DEFAULT &#8216;X&#8217; USER-COMMAND radio,<BR>&nbsp;&nbsp; p_name(40),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; p_rb_srt RADIOBUTTON GROUP a,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp; p_sort(20).&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>AT SELECTION-SCREEN OUTPUT.<BR>&nbsp; LOOP AT SCREEN.<BR><FONT color="#fb2412">*** Radiobutton &#8220;Name&#8221; gedr&uuml;ckt: Feld &#8220;Sort&#8221; ausblenden</FONT><BR>&nbsp;&nbsp;&nbsp; IF screen-name = &#8216;P_SORT&#8217; AND p_rb_nam = &#8216;X&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; screen-input = &#8216;0&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MODIFY SCREEN.<BR>&nbsp;&nbsp;&nbsp; ENDIF.<BR><FONT color="#fb2412">*** Radiobutton &#8220;Sort&#8221; gedr&uuml;ckt: Feld &#8220;Name&#8221; ausblenden</FONT><BR>&nbsp;&nbsp;&nbsp; IF screen-name = &#8216;P_NAME&#8217; AND p_rb_srt = &#8216;X&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; screen-input = &#8216;0&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MODIFY SCREEN.<BR>&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp; ENDLOOP.</P></p>
<p>Der Beitrag <a href="/blog/radiobuttons-und-zugehoerige-felder/">Radiobuttons und zugehörige Felder</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
