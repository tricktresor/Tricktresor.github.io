<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>HTML Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/html/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Jun 2018 23:07:16 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>HTML Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Pimp My Message [5] &#8211; Masterpiece</title>
		<link>/blog/pimp-my-message-5-masterpiece/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 12 Jun 2018 23:05:32 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[W3CSS]]></category>
		<category><![CDATA[cl_gui_html_viewer]]></category>
		<category><![CDATA[Hilfe]]></category>
		<category><![CDATA[F1]]></category>
		<category><![CDATA[HTML]]></category>
		<category><![CDATA[ITF]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=1018837</guid>

					<description><![CDATA[<p>Zu Guter Letzt in der Serie Nachrichten anzeigen, wollte ich die Möglichkeiten, die W3CSS bietet so gut wie möglich ausnutzen. Die Überschriften des Langtextes sollen bei Bedarf aufgeklappt werden. Der Anwender hat so eine perfekte Übersicht über alle Bestandteile der Meldung und kann diese aufklappen. Die aufgeklappten Bestandteile der Meldung sehen dann so aus: Wie dir vielleicht aufgefallen ist, habe ich die einzelnen unterschiedlichen Absatzformate ebenfalls angepasst. Die Überschrift U2 wird ebenfalls farbig dargestellt und...</p>
<p>Der Beitrag <a href="/blog/pimp-my-message-5-masterpiece/">Pimp My Message [5] &#8211; Masterpiece</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Zu Guter Letzt in der Serie Nachrichten anzeigen, wollte ich die Möglichkeiten, die W3CSS bietet so gut wie möglich ausnutzen. Die Überschriften des Langtextes sollen bei Bedarf aufgeklappt werden. Der Anwender hat so eine perfekte Übersicht über alle Bestandteile der Meldung und kann diese aufklappen.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/06/m2.png"><img fetchpriority="high" decoding="async" class="alignnone size-full wp-image-1018818" src="https://tricktresor.com/wp-content/uploads/2018/06/m2.png" alt="" width="900" height="750" srcset="/wp-content/uploads/2018/06/m2.png 900w, /wp-content/uploads/2018/06/m2-300x250.png 300w, /wp-content/uploads/2018/06/m2-768x640.png 768w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p>Die aufgeklappten Bestandteile der Meldung sehen dann so aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/06/m4.png"><img decoding="async" class="alignnone size-full wp-image-1018816" src="https://tricktresor.com/wp-content/uploads/2018/06/m4.png" alt="" width="900" height="750" srcset="/wp-content/uploads/2018/06/m4.png 900w, /wp-content/uploads/2018/06/m4-300x250.png 300w, /wp-content/uploads/2018/06/m4-768x640.png 768w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p>Wie dir vielleicht aufgefallen ist, habe ich die einzelnen unterschiedlichen Absatzformate ebenfalls angepasst. Die Überschrift U2 wird ebenfalls farbig dargestellt und die Aufzählungen werden in einem grauen Rahmen dargestellt.</p>
<h2>Absatzvielfalt</h2>
<p>Für die Langtexte werden eine Vielzahl an Absatzformaten verwendet. Eine fehlerhafte Darstellung ist jedoch nicht schlimm, kann aber nach und nach in einer zentralen Umwandlungsfunktion angepasst werden.</p>
<p>Wenn man einmal weiß, wie Absatzformate besonders hervorgehoben werden können, lassen sich auch leicht eigene Absatzformate definieren, die dann eine besondere Farbe oder Darstellung bekommen.</p>
<h2>Container</h2>
<p>Die Darstellung der Meldung erfolgt in allen Beispielen in einem HTML-Container der in einer amodalen Dialogbox eingebettet ist. Dies habe ich gemacht, weil der Programmcode hierfür sehr einfach zu erzeugen ist. Wenn du eine eigene Darstellung bastelst, dann solltest du ein Dynpro verwenden. Hier kann der angepasste HTML-Texte angezeigt werden. Zusätzlich können aber auch entsprechende Icons oder Bilder dargestellt werden. Die Meldung kann auf diese Weise wirklich schick angezeigt werden und erregt so hoffentlich die Aufmerksamkeit des Anwenders.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/06/m3.png"><img decoding="async" class="alignnone size-full wp-image-1018817" src="https://tricktresor.com/wp-content/uploads/2018/06/m3.png" alt="" width="900" height="750" srcset="/wp-content/uploads/2018/06/m3.png 900w, /wp-content/uploads/2018/06/m3-300x250.png 300w, /wp-content/uploads/2018/06/m3-768x640.png 768w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<h2>Code</h2>
<pre class="lang:abap decode:true">REPORT.

PARAMETERS p_msgno TYPE symsgno DEFAULT '313'.

CLASS lcl_info DEFINITION.
  PUBLIC SECTION.
    METHODS show.
    METHODS get_message_short RETURNING VALUE(rv_message) TYPE string.
    METHODS get_accordion_long RETURNING VALUE(rt_html) TYPE htmltable.
  PROTECTED SECTION.
    CLASS-METHODS build_box.
    CLASS-DATA mo_box TYPE REF TO cl_gui_dialogbox_container.
    CLASS-DATA mo_html TYPE REF TO cl_gui_html_viewer.
    DATA mv_short TYPE string.
    DATA mt_long  TYPE htmltable.
    CLASS-METHODS handle_close FOR EVENT close OF cl_gui_dialogbox_container.
    METHODS show_message.
ENDCLASS.

CLASS lcl_info IMPLEMENTATION.

  METHOD show.
    build_box( ).
    mv_short = get_message_short( ).
    mt_long  = get_accordion_long( ).
    show_message( ).
  ENDMETHOD.
  METHOD get_message_short.

    MESSAGE ID sy-msgid
          TYPE sy-msgty
        NUMBER sy-msgno
          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
          INTO rv_message.
  ENDMETHOD.

  METHOD build_box.
    IF mo_box IS INITIAL.
      mo_box  = NEW #( width = 900 height = 400 top = 20 left = 400 ).
      mo_html = NEW #( parent = mo_box ).
      SET HANDLER handle_close FOR mo_box.
    ENDIF.
    mo_box-&gt;set_caption( sy-title ).
  ENDMETHOD.

  METHOD show_message.
    DATA lv_url TYPE c LENGTH 1000.
    mo_html-&gt;load_data( EXPORTING encoding = 'utf-8'
                        IMPORTING assigned_url = lv_url
                        CHANGING data_table = mt_long ).
    mo_html-&gt;show_data( url = lv_url ).
  ENDMETHOD.

  METHOD handle_close.
    mo_box-&gt;set_visible( space ).
  ENDMETHOD.


  METHOD get_accordion_long.

    DATA ls_header           TYPE thead.

    DATA lt_itf_text         TYPE STANDARD TABLE OF tline.
    DATA lt_html_text        TYPE STANDARD TABLE OF htmlline.

    DATA lv_object                 TYPE dokhl-object.


    CALL FUNCTION 'DOCU_OBJECT_NAME_CONCATENATE'
      EXPORTING
        docu_id  = 'NA'
        element  = sy-msgid
        addition = sy-msgno
      IMPORTING
        object   = lv_object.


    CALL FUNCTION 'DOCU_GET'
      EXPORTING
        id     = 'NA'
        langu  = sy-langu
        object = lv_object
      IMPORTING
        head   = ls_header
      TABLES
        line   = lt_itf_text
      EXCEPTIONS
        OTHERS = 5.

    DATA(lt_conv_parformats) = VALUE tline_t(
             ( tdformat = 'U1' tdline = '&lt;h2&gt;&lt;div class="w3-panel w3-blue"&gt;' )
             ( tdformat = 'U2' tdline = '&lt;h3&gt;&lt;div class="w3-panel w3-light-blue"&gt;' )
             ( tdformat = 'U3' tdline = '&lt;h3&gt;&lt;div class="w3-panel w3-sand"&gt;' )
             ( tdformat = 'AS' tdline = '&lt;div class="w3-margin"&gt;' )
             ( tdformat = '*' tdline = '&lt;div class="w3-margin"&gt;' )
             ( tdformat = 'PE' tdline = '&lt;div class="w3-margin w3-light-grey"&gt;' )
             ( tdformat = 'B1' tdline = '&lt;div class="w3-container w3-margin"&gt;' ) ).

    CALL FUNCTION 'CONVERT_ITF_TO_HTML'
      EXPORTING
        i_header          = ls_header
        i_html_header     = abap_false
      TABLES
        t_itf_text        = lt_itf_text
        t_html_text       = rt_html
        t_conv_parformats = lt_conv_parformats
      EXCEPTIONS
        OTHERS            = 4.

    DATA(lt_header) = VALUE htmltable(
             ( tdline = '&lt;html&gt;&lt;head&gt;' )
             ( tdline = '&lt;meta http-equiv="content-type" content="text/html; charset=utf-8"&gt;' )
             ( tdline = '&lt;link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"&gt;' )
             ( tdline = '&lt;title&gt;test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;' )
             ( tdline = |&lt;h1&gt;&lt;div class="w3-panel w3-red"&gt;{ mv_short }&lt;/div&gt;&lt;/h1&gt;| ) ).
    INSERT LINES OF lt_header INTO rt_html INDEX 1.

    DATA(lt_script) = VALUE htmltable(
             ( tdline = '    &lt;script&gt; ' )
             ( tdline = 'function myFunction(id) {' )
             ( tdline = '    var x = document.getElementById(id);' )
             ( tdline = '    if (x.className.indexOf("w3-show") == -1) {' )
             ( tdline = '        x.className += " w3-show";' )
             ( tdline = '    } else { ' )
             ( tdline = '        x.className = x.className.replace(" w3-show", "");' )
             ( tdline = '    }' )
             ( tdline = '}' )
             ( tdline = '&lt;/script&gt;' )  ).
    APPEND LINES OF lt_script TO rt_html.

    DATA(lt_style) = VALUE htmltable(
                         ( tdline = '&lt;style type="text/css"&gt;body { overflow: hidden; }&lt;/style&gt;' ) ).

    APPEND LINES OF lt_style TO rt_html.

    APPEND '&lt;/body&gt;&lt;/html&gt;' TO rt_html.

    DATA id TYPE n LENGTH 2.
    LOOP AT rt_html ASSIGNING FIELD-SYMBOL(&lt;html&gt;).
      IF &lt;html&gt;(4) = '&lt;h2&gt;'.
        IF id IS NOT INITIAL.
          APPEND '&lt;/div&gt;' TO lt_html_text.
        ENDIF.
        ADD 1 TO id.
        APPEND |&lt;button onclick="myFunction('{ id }')" class="w3-btn w3-block w3-light-blue w3-left-align"&gt;| TO lt_html_text.
        APPEND &lt;html&gt; TO lt_html_text.
        APPEND |&lt;/button&gt;| TO lt_html_text.
        APPEND |&lt;div id="{ id }" class="w3-container w3-hide"&gt;| TO lt_html_text.
      ELSE.
        APPEND &lt;html&gt; TO lt_html_text.
      ENDIF.
    ENDLOOP.

    rt_html = lt_html_text.

  ENDMETHOD.

ENDCLASS.

AT SELECTION-SCREEN.

  MESSAGE ID 'BRAIN'
         TYPE 'E'
        NUMBER p_msgno
         WITH 'EINS' 'ZWEI' 'DREI' 'VIER' INTO sy-title.
  NEW lcl_info( )-&gt;show( ) .</pre>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/pimp-my-message-5-masterpiece/">Pimp My Message [5] &#8211; Masterpiece</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Nachrichten]]></series:name>
	</item>
		<item>
		<title>Pimp My Message [4] &#8211; W3CSS</title>
		<link>/blog/pimp-my-message-4-w3css/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 12 Jun 2018 22:50:57 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[ITF]]></category>
		<category><![CDATA[W3CSS]]></category>
		<category><![CDATA[CSS]]></category>
		<category><![CDATA[Hilfe]]></category>
		<category><![CDATA[F1]]></category>
		<category><![CDATA[HTML]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=1018830</guid>

					<description><![CDATA[<p>Die Darstellung ist immer noch langweilig. das will ich jetzt ändern. Mit W3CSS&#8230; W3CSS Um die Darstellung von Langtexten generell (hier nur am Beispiel einer Nachricht) schöner und besser sichtbar zu machen, habe ich W3CSS entdeckt. W3CSS ist ein Framework, mit dem man mit einfachen Befehlen die Darstellung von HTML-Seiten besser machen kann, ohne dass man detaillierte CSS-Definitionen vornehmen muss. Es lassen sich zum Beispiel einfach Badges darstellen: &#60;p&#62;Updates &#60;span class="w3-badge"&#62;9&#60;/span&#62;&#60;/p&#62; HTML Um die Darstellung im HTML-Format mit W3CSS...</p>
<p>Der Beitrag <a href="/blog/pimp-my-message-4-w3css/">Pimp My Message [4] &#8211; W3CSS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Die Darstellung ist immer noch langweilig. das will ich jetzt ändern. Mit W3CSS&#8230;</p>
<h2>W3CSS</h2>
<p>Um die Darstellung von Langtexten generell (hier nur am Beispiel einer Nachricht) schöner und besser sichtbar zu machen, habe ich <a href="https://www.w3schools.com/w3css/default.asp">W3CSS</a> entdeckt. W3CSS ist ein Framework, mit dem man mit einfachen Befehlen die Darstellung von HTML-Seiten besser machen kann, ohne dass man detaillierte CSS-Definitionen vornehmen muss.</p>
<p>Es lassen sich zum Beispiel einfach <a href="https://www.w3schools.com/w3css/w3css_badges.asp">Badges</a> darstellen:</p>
<pre class="lang:css decode:true" style="font-size: 12.8px;">&lt;p&gt;Updates &lt;span class="w3-badge"&gt;9&lt;/span&gt;&lt;/p&gt;</pre>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/06/badge9.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018828" src="https://tricktresor.com/wp-content/uploads/2018/06/badge9.png" alt="" width="112" height="33" /></a></p>
<h2>HTML</h2>
<p>Um die Darstellung im HTML-Format mit W3CSS aufzuhübschen, müssen ein paar Definitionen in den HTML-Text eingebaut werden. Die Umwandlung erfolgt mit Funktionsbaustein CONVERT_ITF_TO_HTML.</p>
<h3>Absatzformate anpassen</h3>
<p>Mit der automatischen Umsetzung der Absatzformate können auch W3CSS-Definitionen eingebaut werden:</p>
<pre class="lang:abap decode:true ">    DATA(lt_conv_parformats) = VALUE tline_t(
                   ( tdformat = 'U1' tdline = '&lt;h2&gt;&lt;div class="w3-panel w3-blue"&gt;' )
                   ( tdformat = 'U2' tdline = '&lt;h3&gt;&lt;div class="w3-panel w3-light-blue"&gt;' )
                   ( tdformat = 'AS' tdline = '&lt;div class="w3-margin"&gt;' ) ).
</pre>
<h3>META-Information für W3CSS</h3>
<p>Nachdem die Umwandlung mit Hilfe des Funktionsbausteins erfolgt ist, muss der Link zur W3CSS-Definition eingebaut werden:</p>
<pre class="lang:abap decode:true ">    INSERT '&lt;link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"&gt;' INTO rt_html INDEX 1.</pre>
<h2>Ausgabe</h2>
<p>Die Darstellung sieht nun schon etwas schöner aus, aber es geht noch besser&#8230;</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/06/m-brain-006.png"><img loading="lazy" decoding="async" class="alignnone size-large wp-image-1018834" src="https://tricktresor.com/wp-content/uploads/2018/06/m-brain-006.png" alt="" width="640" height="275" srcset="/wp-content/uploads/2018/06/m-brain-006.png 900w, /wp-content/uploads/2018/06/m-brain-006-300x129.png 300w, /wp-content/uploads/2018/06/m-brain-006-768x330.png 768w" sizes="(max-width: 640px) 100vw, 640px" /></a></p>
<h2>Mehr Informationen</h2>
<p>Zum Ende dieses Artikels möchte ich noch die Meldung selber am Anfang der Meldung darstellen und darunter den Langtext anzeigen.</p>
<p>So sieht es dann aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/06/m-brain-006-2.png"><img loading="lazy" decoding="async" class="alignnone wp-image-1018835 size-full" src="https://tricktresor.com/wp-content/uploads/2018/06/m-brain-006-2-e1528843686173.png" alt="" width="900" height="519" srcset="/wp-content/uploads/2018/06/m-brain-006-2-e1528843686173.png 900w, /wp-content/uploads/2018/06/m-brain-006-2-e1528843686173-300x173.png 300w, /wp-content/uploads/2018/06/m-brain-006-2-e1528843686173-768x443.png 768w, /wp-content/uploads/2018/06/m-brain-006-2-e1528843686173-265x153.png 265w, /wp-content/uploads/2018/06/m-brain-006-2-e1528843686173-148x85.png 148w, /wp-content/uploads/2018/06/m-brain-006-2-e1528843686173-193x112.png 193w, /wp-content/uploads/2018/06/m-brain-006-2-e1528843686173-71x40.png 71w" sizes="(max-width: 900px) 100vw, 900px" /></a></p>
<p>Je nachdem, ob es sich um eine Info-, Warn- oder Fehlermeldung handelt, kann die Farbe oben entsprechend angepasst werden.</p>
<p>Das HTML baue ich in diesem Fall selber auf. Nur der BODY wird vom Funktionsbaustein erzeugt.</p>
<h2>Code</h2>
<pre class="lang:abap decode:true ">REPORT.

PARAMETERS p_msgno TYPE symsgno DEFAULT '313'.

CLASS lcl_info DEFINITION.
  PUBLIC SECTION.
    METHODS show.
    METHODS get_message_short RETURNING VALUE(rv_message) TYPE string.
    METHODS get_message_long RETURNING VALUE(rt_html) TYPE htmltable.
  PROTECTED SECTION.
    CLASS-METHODS build_box.
    CLASS-DATA mo_box TYPE REF TO cl_gui_dialogbox_container.
    CLASS-DATA mo_html TYPE REF TO cl_gui_html_viewer.
    DATA mv_short TYPE string.
    DATA mt_long  TYPE htmltable.
    CLASS-METHODS handle_close FOR EVENT close OF cl_gui_dialogbox_container.
    METHODS show_message.
ENDCLASS.

CLASS lcl_info IMPLEMENTATION.

  METHOD show.
    build_box( ).
    mv_short = get_message_short( ).
    mt_long  = get_message_long( ).
    show_message( ).
  ENDMETHOD.
  METHOD get_message_short.

    MESSAGE ID sy-msgid
          TYPE sy-msgty
        NUMBER sy-msgno
          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
          INTO rv_message.
  ENDMETHOD.

  METHOD build_box.
    IF mo_box IS INITIAL.
      mo_box  = NEW #( width = 900 height = 400 top = 20 left = 400 ).
      mo_html = NEW #( parent = mo_box ).
      SET HANDLER handle_close FOR mo_box.
    ENDIF.
    mo_box-&gt;set_caption( sy-title ).
  ENDMETHOD.

  METHOD show_message.
    DATA lv_url TYPE c LENGTH 1000.
    mo_html-&gt;load_data( EXPORTING encoding = 'utf-8'
                        IMPORTING assigned_url = lv_url
                        CHANGING data_table = mt_long ).
    mo_html-&gt;show_data( url = lv_url ).
  ENDMETHOD.

  METHOD handle_close.
    mo_box-&gt;set_visible( space ).
  ENDMETHOD.

  METHOD get_message_long.

    DATA ls_header           TYPE thead.

    DATA lt_itf_text         TYPE STANDARD TABLE OF tline.
    DATA lt_html_text        TYPE STANDARD TABLE OF htmlline.
    DATA lv_object                 TYPE dokhl-object.

    CALL FUNCTION 'DOCU_OBJECT_NAME_CONCATENATE'
      EXPORTING
        docu_id  = 'NA'
        element  = sy-msgid
        addition = sy-msgno
      IMPORTING
        object   = lv_object.


    CALL FUNCTION 'DOCU_GET'
      EXPORTING
        id     = 'NA'
        langu  = sy-langu
        object = lv_object
      IMPORTING
        head   = ls_header
      TABLES
        line   = lt_itf_text
      EXCEPTIONS
        OTHERS = 5.

    DATA(lt_conv_parformats) = VALUE tline_t(
                   ( tdformat = 'U1' tdline = '&lt;h2&gt;&lt;div class="w3-panel w3-blue"&gt;' )
                   ( tdformat = 'U2' tdline = '&lt;h3&gt;&lt;div class="w3-panel w3-light-blue"&gt;' )
                   ( tdformat = 'AS' tdline = '&lt;div class="w3-margin"&gt;' ) ).

    CALL FUNCTION 'CONVERT_ITF_TO_HTML'
      EXPORTING
        i_header          = ls_header
        i_html_header     = abap_true
      TABLES
        t_itf_text        = lt_itf_text
        t_html_text       = rt_html
        t_conv_parformats = lt_conv_parformats
      EXCEPTIONS
        OTHERS            = 4.
    INSERT '&lt;html&gt;&lt;head&gt;' INTO rt_html INDEX 1.
    INSERT '&lt;meta http-equiv="content-type" content="text/html; charset=utf-8"&gt;' INTO rt_html INDEX 2.
    INSERT '&lt;link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"&gt;' INTO rt_html INDEX 3.
    INSERT '&lt;title&gt;test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;' INTO rt_html INDEX 4.
    INSERT |&lt;h1&gt;&lt;div class="w3-container w3-red"&gt;{ mv_short }&lt;/div&gt;&lt;/h1&gt;| INTO rt_html INDEX 5.

    APPEND '&lt;/body&gt;&lt;/html&gt;' TO rt_html.

  ENDMETHOD.

ENDCLASS.

AT SELECTION-SCREEN.

  MESSAGE ID 'BRAIN'
         TYPE 'E'
        NUMBER p_msgno
         WITH 'EINS' 'ZWEI' 'DREI' 'VIER' INTO sy-title.
  NEW lcl_info( )-&gt;show( ) .</pre>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/pimp-my-message-4-w3css/">Pimp My Message [4] &#8211; W3CSS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Nachrichten]]></series:name>
	</item>
		<item>
		<title>Pimp My Message [3] &#8211; HTML-Darstellung</title>
		<link>/blog/pimp-my-message-3-html-darstellung/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 12 Jun 2018 22:34:44 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Langtext]]></category>
		<category><![CDATA[Hilfe]]></category>
		<category><![CDATA[F1]]></category>
		<category><![CDATA[HTML]]></category>
		<category><![CDATA[Help]]></category>
		<category><![CDATA[ITF]]></category>
		<category><![CDATA[Nachricht]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=1018826</guid>

					<description><![CDATA[<p>So, nach den Grundlagen zu Meldungen und deren Langtexte, jetzt endlich mal wieder Sourcecode. Ich möchte dir zeigen, wie du den Meldungslangtext in einer Dialogbox darstellen kannst. Die Meldung soll dabei mit HTML etwas aufbereitet werden. ITF in HTML umwandeln Die Langtexte werden intern im ITF-Format gespeichert. Das bedeutet, dass das Absatzformat in der Spalte TDFORMAT und die Zeile selbst in der Spalte TDLINE gespeichert wird. Die zu Grunde liegende Struktur ist TLINE. Zu den...</p>
<p>Der Beitrag <a href="/blog/pimp-my-message-3-html-darstellung/">Pimp My Message [3] &#8211; HTML-Darstellung</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>So, nach den Grundlagen zu <a href="https://tricktresor.com/blog/pimp-my-message-1/">Meldungen</a> und deren <a href="https://tricktresor.com/blog/pimp-my-message-2-langtext-anzeigen/">Langtexte</a>, jetzt endlich mal wieder Sourcecode. Ich möchte dir zeigen, wie du den Meldungslangtext in einer Dialogbox darstellen kannst. Die Meldung soll dabei mit HTML etwas aufbereitet werden.</p>
<h2>ITF in HTML umwandeln</h2>
<p>Die Langtexte werden intern im ITF-Format gespeichert. Das bedeutet, dass das Absatzformat in der Spalte TDFORMAT und die Zeile selbst in der Spalte TDLINE gespeichert wird. Die zu Grunde liegende Struktur ist TLINE.</p>
<p>Zu den Zeilen der Struktur TLINE gehören auch Kopfinformationen, die in der Struktur THEAD gehalten werden. Hier stehen zum Beispiel der Name und der Titel eines Langtextes.</p>
<h3>Header oder nicht?</h3>
<p>Um die interne ITF-Darstellung in HTML umzuwandeln, kann der Funktionsbaustein <!--StartFragment --> CONVERT_ITF_TO_HTML verwendet werden. Dem Baustein kann ein Flag übergeben werden, in dem ein kompletter HTML-Text erstellt wird (I_HTML_HEADER = X) oder nur der Body (I_HTML_HEADER = space). Die Verwendung zeige ich im Coding.</p>
<h3>Umwandlung von Absatzformaten</h3>
<p>Die intern verwendeten Absatzformate können in eigene HTML-Tags umgesetzt werden. U1 ist im ITF-Format eine Überschrift der Kategorie 1. Die Entsprechung im HTML ist das Tag h1. In der Tabelle T_CONV_PARFORMATS kann die Übersetzung definiert werden. Das Ende-Tag, zum Beispiel &lt;/h1&gt; für den Abschluss des h1-Tags, wird automatisch für das Ende der Zeile gesetzt.</p>
<h2>Das Programm</h2>
<p>Das hier vorgestellte Programm liest eine Nachricht sowie den Langtext der Nachricht. Das interne ITF-Format wird in HTML umgewandelt. Dabei werden die Absatzformate entsprechend umgesetzt. Die Ausgabe sieht aus wie folgt:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/06/m-einfach1.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018831" src="https://tricktresor.com/wp-content/uploads/2018/06/m-einfach1.png" alt="" width="457" height="348" srcset="/wp-content/uploads/2018/06/m-einfach1.png 457w, /wp-content/uploads/2018/06/m-einfach1-300x228.png 300w" sizes="(max-width: 457px) 100vw, 457px" /></a></p>
<p>Die Darstellung ist immer noch langweilig. Aber immerhin.</p>
<h2>Code</h2>
<pre class="lang:abap decode:true">REPORT.

PARAMETERS p_msgno TYPE symsgno DEFAULT '313'.

CLASS lcl_info DEFINITION.
  PUBLIC SECTION.
    METHODS show.
    METHODS get_message_short RETURNING VALUE(rv_message) TYPE string.
    METHODS get_message_long RETURNING VALUE(rt_html) TYPE htmltable.
  PROTECTED SECTION.
    CLASS-METHODS build_box.
    CLASS-DATA mo_box TYPE REF TO cl_gui_dialogbox_container.
    CLASS-DATA mo_html TYPE REF TO cl_gui_html_viewer.
    DATA mv_short TYPE string.
    DATA mt_long  TYPE htmltable.
    CLASS-METHODS handle_close FOR EVENT close OF cl_gui_dialogbox_container.
    METHODS show_message.
ENDCLASS.

CLASS lcl_info IMPLEMENTATION.

  METHOD show.
    build_box( ).
    mv_short = get_message_short( ).
    mt_long  = get_message_long( ).
    show_message( ).
  ENDMETHOD.
  METHOD get_message_short.
    MESSAGE ID sy-msgid
          TYPE sy-msgty
        NUMBER sy-msgno
          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
          INTO rv_message.
  ENDMETHOD.

  METHOD build_box.
    IF mo_box IS INITIAL.
      mo_box  = NEW #( width = 900 height = 400 top = 20 left = 400 ).
      mo_html = NEW #( parent = mo_box ).
      SET HANDLER handle_close FOR mo_box.
    ENDIF.
    mo_box-&gt;set_caption( sy-title ).
  ENDMETHOD.

  METHOD show_message.
    DATA lv_url TYPE c LENGTH 1000.
    mo_html-&gt;load_data( EXPORTING encoding = 'utf-8'
                        IMPORTING assigned_url = lv_url
                        CHANGING data_table = mt_long ).
    mo_html-&gt;show_data( url = lv_url ).
  ENDMETHOD.

  METHOD handle_close.
    mo_box-&gt;set_visible( space ).
  ENDMETHOD.

  METHOD get_message_long.

    DATA ls_header           TYPE thead.

    DATA lt_itf_text         TYPE STANDARD TABLE OF tline.
    DATA lt_html_text        TYPE STANDARD TABLE OF htmlline.
    DATA lv_object           TYPE dokhl-object.
    
    "Namen der Nachricht erstellen
    CALL FUNCTION 'DOCU_OBJECT_NAME_CONCATENATE'
      EXPORTING
        docu_id  = 'NA'
        element  = sy-msgid
        addition = sy-msgno
      IMPORTING
        object   = lv_object.

    "Langtext zur Doku lesen
    CALL FUNCTION 'DOCU_GET'
      EXPORTING
        id     = 'NA'
        langu  = sy-langu
        object = lv_object
      IMPORTING
        head   = ls_header
      TABLES
        line   = lt_itf_text
      EXCEPTIONS
        OTHERS = 5.

    "Absatzformate umwandeln
    DATA(lt_conv_parformats) = VALUE tline_t(
                   ( tdformat = 'U1' tdline = '&lt;h1&gt;' )
                   ( tdformat = 'U2' tdline = '&lt;h2&gt;' )
                   ( tdformat = 'AS'  tdline = '&lt;p&gt;' ) ).

    CALL FUNCTION 'CONVERT_ITF_TO_HTML'
      EXPORTING
        i_header          = ls_header
        i_html_header     = abap_true
      TABLES
        t_itf_text        = lt_itf_text
        t_html_text       = rt_html
        t_conv_parformats = lt_conv_parformats
      EXCEPTIONS
        OTHERS            = 4.

  ENDMETHOD.


ENDCLASS.

AT SELECTION-SCREEN.

  NEW lcl_info( )-&gt;show( ) .</pre>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/pimp-my-message-3-html-darstellung/">Pimp My Message [3] &#8211; HTML-Darstellung</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Nachrichten]]></series:name>
	</item>
		<item>
		<title>Pimp My Message [2] &#8211; Langtext anzeigen</title>
		<link>/blog/pimp-my-message-2-langtext-anzeigen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 12 Jun 2018 22:09:14 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Nachricht]]></category>
		<category><![CDATA[Langtext]]></category>
		<category><![CDATA[HTML]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=1018823</guid>

					<description><![CDATA[<p>Im Beitrag Pimp My Message [1] habe ich kurz erklärt, wie eine Meldung aufgebaut ist und warum eine schnöde Meldung oft vom Anwender nicht als wichtig wahrgenommen wird. Der Langtext ist eine wichtige Information, die man vielleicht ebenfalls direkt mit anzeigen kann...</p>
<p>Der Beitrag <a href="/blog/pimp-my-message-2-langtext-anzeigen/">Pimp My Message [2] &#8211; Langtext anzeigen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Im Beitrag <a href="https://tricktresor.com/blog/pimp-my-message-1/">Pimp My Message [1]</a> habe ich kurz erklärt, wie eine Meldung aufgebaut ist und warum eine schnöde Meldung oft vom Anwender nicht als wichtig wahrgenommen wird. Der Langtext ist eine wichtige Information, die man vielleicht ebenfalls direkt mit anzeigen kann&#8230;</p>
<h2>Langtext anzeigen</h2>
<p>Die einfachste Möglichkeit, den Anwender von Anfang an besser zu informieren ist, gleich den Langtext anzuzeigen, sofern einer vorhanden ist. Eine einfache Möglichkeit, den Langtext der Meldung anzuzeigen, ist die folgende:</p>
<pre class="lang:abap decode:true ">CALL FUNCTION 'HELP_OBJECT_SHOW'
  EXPORTING
    dokclass          = 'NA'
    doklangu          = sy-langu
    dokname           = 'B!011'
    doktitle          = 'test'
    msg_var_1         = 'RFC_DEST_DUMMY'
    msg_var_2         = ''
    msg_var_3         = ''
    msg_var_4         = ''
    short_text        = ' '
    classic_sapscript = ' '
  TABLES
    links             = links
  EXCEPTIONS
    object_not_found  = 1
    sapscript_error   = 2
    OTHERS            = 3.</pre>
<h2>Langtext im HTML-Format</h2>
<p>Etwas schicker ist die Darstellung im HTML-Format:</p>
<pre class="lang:abap decode:true">DATA header       TYPE thead.
DATA LINES        TYPE STANDARD TABLE OF tline.

CALL FUNCTION 'DOCU_GET'
  EXPORTING
    ID     = 'NA'
    langu  = sy-langu
    object = 'BRAIN313'
  IMPORTING
    head   = header
  TABLES
    LINE   = LINES
  EXCEPTIONS
    OTHERS = 5.
IF sy-subrc = 0.

  CALL FUNCTION 'HELP_DOCULINES_SHOW_HTML'
    EXPORTING
      header       = header
      popup        = 'X'
      startx       = 2
      starty       = 2
      endx         = 120
      endy         = 22
      links_enable = 'X'
    TABLES
      LINES        = LINES.
ENDIF.</pre>
<p>Die Ausgabe sieht wie folgt aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/06/m-langtext.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018824" src="https://tricktresor.com/wp-content/uploads/2018/06/m-langtext.png" alt="" width="968" height="538" srcset="/wp-content/uploads/2018/06/m-langtext.png 968w, /wp-content/uploads/2018/06/m-langtext-300x167.png 300w, /wp-content/uploads/2018/06/m-langtext-768x427.png 768w, /wp-content/uploads/2018/06/m-langtext-71x40.png 71w" sizes="(max-width: 968px) 100vw, 968px" /></a></p>
<p>Leider ist die Darstellung SAP-typisch immer noch sehr farblos.</p>
<h2>Name der Dokumentation</h2>
<p>Um die Dokumentation für eine Nachricht zu lesen, sollte der Funktionsbaustein DOCU_OBJECT_NAME_CONCATENATE verwendet werden. Die Docu-ID ist &#8220;NA&#8221; für Nachricht, das ELEMENT ist die Nachrichtenklasse und ADDITION ist die Meldungsnummer.</p>
<p>So ergibt sich aus</p>
<p>DOCU_ID=NA<br />
ELEMENT=BRAIN<br />
ADDITION=313</p>
<p>Der Name: BRAIN313</p>
<p>Der Beitrag <a href="/blog/pimp-my-message-2-langtext-anzeigen/">Pimp My Message [2] &#8211; Langtext anzeigen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Nachrichten]]></series:name>
	</item>
	</channel>
</rss>
