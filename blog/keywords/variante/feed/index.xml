<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>variante Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/variante/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Fri, 15 Jun 2018 07:54:36 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>variante Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Variante oder Layout?</title>
		<link>/blog/variante-oder-layout/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 18 Feb 2014 07:59:52 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Reports]]></category>
		<category><![CDATA[variante]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4269</guid>

					<description><![CDATA[<p>Zwei Begriffe werden häufig verwechselt beziehungsweise fälschlicherweise synonym verwendet: Variante und Layout. Deswegen zuerst die korrekte Bedeutung der beiden Begriffe: Variante Eine Variante ist &#8211; programmtechnisch gesehen &#8211; immer die Speicherung der Daten eines Report-Selektionsbildes. Variante werden natürlich in einem SAP-System auch in anderen Zusammenhängen verwendet, allerdings ist dann die Verwechslung mit einem Layout in der Regel nicht gegeben. Layout Ein Layout gibt es in der Regel nur im Kontext von ALV (Advanced List Viewer)...</p>
<p>Der Beitrag <a href="/blog/variante-oder-layout/">Variante oder Layout?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Zwei Begriffe werden häufig verwechselt beziehungsweise fälschlicherweise synonym verwendet: Variante und Layout. Deswegen zuerst die korrekte Bedeutung der beiden Begriffe:</p>
<h2>Variante</h2>
<p>Eine Variante ist &#8211; programmtechnisch gesehen &#8211; immer die Speicherung der Daten eines Report-Selektionsbildes.</p>
<p><img fetchpriority="high" decoding="async" width="427" height="201" class="alignnone size-full wp-image-4270" alt="" src="https://tricktresor.com/wp-content/uploads/2014/01/img_52d802547249d.png" srcset="/wp-content/uploads/2014/01/img_52d802547249d.png 427w, /wp-content/uploads/2014/01/img_52d802547249d-300x141.png 300w" sizes="(max-width: 427px) 100vw, 427px" /></p>
<p>Variante werden natürlich in einem SAP-System auch in anderen Zusammenhängen verwendet, allerdings ist dann die Verwechslung mit einem Layout in der Regel nicht gegeben.</p>
<h2>Layout</h2>
<p>Ein Layout gibt es in der Regel nur im Kontext von ALV (Advanced List Viewer) und zwar gleichermaßen in der List-Variante als auch in der modernen Grid-Version. Für ein ALV können &#8211; sofern der Programmierer es vorgesehen hat &#8211; die Layout-Einstellungen, wie z. B. Spaltenbreite, Spaltenreihenfolge, Sortierung, Filter, Summenbildung usw.), gespeichert werden. Alle diese Einstellungen definieren das Layout.</p>
<p>Dieses <em>Layout</em> wird sehr häufig mit <em>Variante</em> verwechselt. Der Grund hierfür ist ziemlich klar, denn der intern verwendeten Methoden und Feldnamen beinhalten das Wort VARIANT&#8230;</p>
<p>Verwendete Struktur für die Übergabe von Layout-Daten:</p>
<p><img decoding="async" width="812" height="360" class="alignnone size-full wp-image-4271" alt="" src="https://tricktresor.com/wp-content/uploads/2014/01/img_52d8044e8bb38.png" srcset="/wp-content/uploads/2014/01/img_52d8044e8bb38.png 812w, /wp-content/uploads/2014/01/img_52d8044e8bb38-300x133.png 300w, /wp-content/uploads/2014/01/img_52d8044e8bb38-624x276.png 624w" sizes="(max-width: 812px) 100vw, 812px" /></p>
<p>Methode SET_VARIANT der Klasse CL_GUI_ALV_GRID</p>
<p><img decoding="async" width="547" height="239" class="alignnone size-full wp-image-4272" alt="" src="https://tricktresor.com/wp-content/uploads/2014/01/img_52d804a90e0ad.png" srcset="/wp-content/uploads/2014/01/img_52d804a90e0ad.png 547w, /wp-content/uploads/2014/01/img_52d804a90e0ad-300x131.png 300w" sizes="(max-width: 547px) 100vw, 547px" /></p>
<p>Der Beitrag <a href="/blog/variante-oder-layout/">Variante oder Layout?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Feld im Selektionsbild nur bei Anlage einer Variante sichtbar?</title>
		<link>/blog/feld-im-selektionsbild-nur-bei-anlage-einer-variante-sichtbar/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 14 Feb 2014 15:36:43 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<category><![CDATA[Generell]]></category>
		<category><![CDATA[variante]]></category>
		<category><![CDATA[modify screen]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4393</guid>

					<description><![CDATA[<p>Eine von diesen Anforderungen, die mir einfach so über den Weg laufen: Ich wollte einen Parameter auf dem Selektionsbild ausblenden. Allerdings sollte es möglich sein, bei Anlage einer Variante, diesen Parameter zu ändern. </p>
<p>Der Beitrag <a href="/blog/feld-im-selektionsbild-nur-bei-anlage-einer-variante-sichtbar/">Feld im Selektionsbild nur bei Anlage einer Variante sichtbar?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ich bin gerade über die Aufgabe gestolpert, dass ein Feld im Selektionsbild generell ausgeblendet werden soll. Bei der Anlage einer Variante jedoch, muss das Feld sichtbar sein.</p>
<p>Die Lösung ist relativ einfach: Im PBO des Reports (AT SELECTION-SCREEN OUTPUT) fragen wir das Systemfeld SUBTY ab und steuern mittels MODIFY SCREEN die Sichtbarkeit der Felder.</p>
<h2>Coding</h2>
<pre>*== Parameter soll immer angezeigt werden
PARAMETERS p_diag TYPE char10.
*== Parameter soll nur in der Variantenansicht eingabebereit sein
PARAMETERS p_vari TYPE char10 MODIF ID var.

AT SELECTION-SCREEN OUTPUT.
  IF sy-subty = 20. "Hex:14, Bin:00010100"
    LOOP AT SCREEN.
      IF screen-group1 = 'VAR'.
        IF sy-slset = space.
*== Keine Variante geladen: Feld ausblenden
          screen-active = '0'.
        ELSE.
*== Variante ist geladen: Feld anzeigen (nicht eingabebereit)
          screen-input = '0'.
        ENDIF.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.</pre>
<h2>Hardcore</h2>
<p>Auf der Suche nach einer Lösung habe ich auch eine Alternative gefunden per Dirty-Assign im Systemprogramm RSDBRUNT eine Variable abzufragen:</p>
<pre>FIELD-SYMBOLS &lt;mode_Vari&gt; TYPE c.
ASSIGN ('(RSDBRUNT)SUBMIT_INFO-MODE_VARI') TO &lt;mode_vari&gt;.
IF &lt;mode_vari&gt; IS ASSIGNED AND &lt;mode_vari&gt; = 'X'.
  "Pflege der Variante
ENDIF.</pre>
<p>Die Variante muss in beiden Fällen über die Transaktion SE38 angelegt werden.</p>
<p>Der Beitrag <a href="/blog/feld-im-selektionsbild-nur-bei-anlage-einer-variante-sichtbar/">Feld im Selektionsbild nur bei Anlage einer Variante sichtbar?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Variantenwahl per Listbox</title>
		<link>/blog/variantenwahl-per-listbox/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Sun, 26 May 2013 14:30:16 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<category><![CDATA[dropdown]]></category>
		<category><![CDATA[listbox]]></category>
		<category><![CDATA[variante]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=673</guid>

					<description><![CDATA[<p>Wenn Anwender in einem Report häufig verschiedene Varianten verwenden müssen, so können Sie unsere Version der Variantenauswahl verwenden. Die Varianten werden in einer Listbox dargestellt und können einfach ausgewählt werden.</p>
<p>Der Beitrag <a href="/blog/variantenwahl-per-listbox/">Variantenwahl per Listbox</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Wenn Anwender in einem Report häufig verschiedene Varianten verwenden müssen, so können Sie unsere Version der Variantenauswahl verwenden. Die Varianten werden in einer Listbox dargestellt und können einfach ausgewählt werden.</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/abap/Auswahl_Variante.jpg" /><br />
Auswahl der Selektionsbildvariante per Listbox</td>
</tr>
</tbody>
</table>
<p>Vielen Dank an Ralf Wenzel!</p>
<p>Beachten Sie auch das Programm &#8220;<a href="/wp-content/index.php?aID=489" target="_self">Variantenschnellauswahl</a>&#8220;.</p>
<p class="head1">Coding</p>
<p class="sap1">REPORT ZZ_VARIANT_LISTBOX.</p>
<p class="sap1">PARAMETERS p1 TYPE char10.<br />
PARAMETERS p2 TYPE char10.</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;*<br />
* Listbox zur Auswahl der Selelektionsbild-Variante<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;*<br />
</span>SELECTION-SCREEN BEGIN OF BLOCK var WITH FRAME TITLE text-var.<br />
PARAMETERS pa_selva TYPE raldb_vari AS LISTBOX<br />
VISIBLE LENGTH 40<br />
USER-COMMAND variant.<br />
SELECTION-SCREEN END OF BLOCK var.</p>
<p class="sap1">INITIALIZATION.<br />
PERFORM set_values.</p>
<p class="sap1">AT SELECTION-SCREEN.<br />
PERFORM set_variant.</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  set_values<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
</span>FORM set_values.</p>
<p class="sap1">  DATA lt_varit         TYPE vrm_values.</p>
<p class="sap1"><span style="color: #fb2412;">*== Listbox mit Varianten füllen</span><br />
SELECT variant vtext<br />
FROM varit INTO TABLE lt_varit<br />
WHERE langu  = sy-langu<br />
AND report = sy-repid.</p>
<p class="sap1">  CALL FUNCTION &#8216;VRM_SET_VALUES&#8217;<br />
EXPORTING<br />
id              = &#8216;PA_SELVA&#8217;<br />
values          = lt_varit<br />
EXCEPTIONS<br />
id_illegal_name = 1<br />
OTHERS          = 2.<br />
ENDFORM.                    &#8220;set_values</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  set_variant<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*</span><br />
FORM set_variant.</p>
<p class="sap1">  DATA lv_selva         TYPE raldb_vari.<br />
DATA ls_rkey          TYPE rsvarkey.</p>
<p class="sap1">  CASE sy-ucomm.<br />
WHEN &#8216;VARIANT&#8217;.<br />
lv_selva        = pa_selva.<br />
ls_rkey-report  = sy-repid.<br />
ls_rkey-variant = lv_selva.<br />
IF pa_selva IS INITIAL.<br />
<span style="color: #fb2412;">*== An dieser Stelle kann man das Selektionsbild zurücksetzen,<br />
*== wenn man mag<br />
</span>      ENDIF.<br />
PERFORM %_import_vari_clnt<br />
USING    ls_rkey sy-subrc sy-mandt<br />
CHANGING sy-subrc.<br />
pa_selva = lv_selva.<br />
ENDCASE.</p>
<p class="sap1">ENDFORM.                    &#8220;set_variant</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/variantenwahl-per-listbox/">Variantenwahl per Listbox</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Variantenschnellzugriff</title>
		<link>/blog/variantenschnellzugriff/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 13 Jun 2008 19:51:46 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[variante]]></category>
		<category><![CDATA[toolbar]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Layout]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=487</guid>

					<description><![CDATA[<p>Layout-Varianten lassen sich im ALV-Grid komfortabel verwalten. Manchmal w&#228;re es jedoch sch&#246;n, wenn man einen schnelleren Zugriff auf die einzelnen Varianten h&#228;tte. Mit diesem Programm zeigen wir Ihnen, wie das einfach m&#246;glich ist.</p>
<p>Der Beitrag <a href="/blog/variantenschnellzugriff/">Variantenschnellzugriff</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<figure style="width: 392px" class="wp-caption alignnone"><img loading="lazy" decoding="async" src="/wp-content/uploads/tt_images/ALV/alvgrid_var.jpg" alt="" width="392" height="372" /><figcaption class="wp-caption-text">Zwei globale Varianten und eine Benutzervariante im Schnellzugriff</figcaption></figure>
<p>Layout-Varianten lassen sich im ALV-Grid komfortabel verwalten. Manchmal wäre es jedoch schön, wenn man einen schnelleren Zugriff auf die einzelnen Varianten hätte. Mit diesem Programm zeige ich die, wie das einfach möglich ist.</p>
<h2 class="head1">Vorbereitungen</h2>
<ol>
<li>Dynpro 100 muss angelegt und mit einem Customcontainer bestückt werden (Name: CONTAINER).</li>
<li>Status 100 anlegen; F3, SHIFT-F3 und F12 mit Funktionscode BACK belegen.</li>
</ol>
<h2 class="head1">Vorgehen</h2>
<p class="text1">Wenn du das Programm gestartet hast, definierst du dir zwei oder drei Varianten. du wirst sehen, dass diese Varianten dann in der Toolbar auftauchen. So kann wirklich schnell und komfortabel zwischen verschiedenen Sichten hin- und hergewechselt werden.</p>
<h2 class="head1">Coding</h2>
<pre class="lang:abap decode:true  ">*&amp;---------------------------------------------------------------------*
*&amp; Report  ZZ_GRID_VARIANT
*&amp;---------------------------------------------------------------------*

REPORT zz_grid_variant.

*** Class for event receiver
CLASS lcl_event_receiver DEFINITION DEFERRED.

*** global data
DATA gr_grid    TYPE REF TO            cl_gui_alv_grid.
DATA gr_cont    TYPE REF TO            cl_gui_custom_container.
DATA gr_evth    TYPE REF TO            lcl_event_receiver.
DATA gt_vbak    TYPE STANDARD TABLE OF vbak.
DATA gs_variant TYPE                   disvariant.

*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver DEFINITION.

  PUBLIC SECTION.

    CLASS-METHODS:
*** event for adding buttons to toolbar
handle_toolbar
FOR EVENT toolbar OF cl_gui_alv_grid
IMPORTING e_object e_interactive sender,

*** event for pressed buttons
handle_user_command
FOR EVENT user_command OF cl_gui_alv_grid
IMPORTING e_ucomm sender.

ENDCLASS.                    "lcl_event_receiver DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver IMPLEMENTATION.

  METHOD handle_toolbar.

    DATA ls_toolbar       TYPE stb_button.
DATA ls_variant       TYPE disvariant.

*** Variants
DATA lt_ltdx          TYPE STANDARD TABLE OF ltdx.
FIELD-SYMBOLS &lt;ltdx&gt;  TYPE ltdx.
*** Variant texts
DATA lt_ltdxt         TYPE STANDARD TABLE OF ltdxt.
FIELD-SYMBOLS &lt;ltdxt&gt; TYPE ltdxt.

*** Set buttons for variants
SELECT * FROM ltdx INTO TABLE lt_ltdx UP TO 10 ROWS
WHERE relid  = 'LT'
AND report = gs_variant-report
AND handle = gs_variant-handle
AND srtf2  = 0
AND ( username = space
OR  username = sy-uname )
ORDER BY username variant.

    IF sy-subrc = 0.

*** add Seperator to toolbar
ls_toolbar-function  = 'DUMMY'.
ls_toolbar-butn_type = '3'. "TYPE TB_BTYPE =&gt; Domain values!
APPEND ls_toolbar TO e_object-&gt;mt_toolbar.

*** Get variant texts
SELECT * FROM ltdxt INTO TABLE lt_ltdxt
FOR ALL ENTRIES IN lt_ltdx
WHERE relid  = 'LT'
AND report = gs_variant-report
AND handle = gs_variant-handle
AND variant = lt_ltdx-variant
AND langu = sy-langu.

*** Get actual variant
CALL METHOD sender-&gt;get_variant
IMPORTING
es_variant = ls_variant.

      LOOP AT lt_ltdx ASSIGNING &lt;ltdx&gt;.
*** get variant text
        READ TABLE lt_ltdxt ASSIGNING &lt;ltdxt&gt;
WITH KEY variant = &lt;ltdx&gt;-variant.

*** Button to create customer order with template
CLEAR ls_toolbar.
ls_toolbar-function  = '$'.
ls_toolbar-function+1 = &lt;ltdx&gt;-variant.
IF &lt;ltdx&gt;-variant(1) = '/'.
*** global variant
ls_toolbar-icon      = icon_alv_variant_choose.
ELSE.
*** user specific variant
ls_toolbar-icon      = icon_usergroup.
ENDIF.
ls_toolbar-butn_type = '0'.
ls_toolbar-disabled  = space.
IF &lt;ltdxt&gt; IS ASSIGNED.
ls_toolbar-text      = &lt;ltdxt&gt;-text.
ELSE.
ls_toolbar-text      = &lt;ltdx&gt;-variant.
ENDIF.
ls_toolbar-quickinfo = space.
IF ls_variant-variant = &lt;ltdx&gt;-variant.
ls_toolbar-checked   = 'X'.
ELSE.
ls_toolbar-checked   = space.
ENDIF.
APPEND ls_toolbar TO e_object-&gt;mt_toolbar.

      ENDLOOP.
ENDIF. "Variants exist?

  ENDMETHOD.                    "handle_toolbar

  METHOD handle_user_command.

*** data
DATA lv_user_specific TYPE c.
DATA ls_variant       TYPE disvariant.
DATA ls_stable        TYPE lvc_s_stbl.
DATA lt_fieldcat      TYPE  lvc_t_fcat.
DATA lt_sort          TYPE  lvc_t_sort.
DATA lt_filter        TYPE  lvc_t_filt.
DATA ls_layout        TYPE  lvc_s_layo.

*** Variant
CLEAR ls_variant.
ls_variant-variant = e_ucomm.
SHIFT ls_variant-variant LEFT BY 1 PLACES.
ls_variant-report    = gs_variant-report.
ls_variant-handle    = gs_variant-handle.
IF ls_variant-variant(1) &lt;&gt; '/'.
ls_variant-username  = sy-uname.
lv_user_specific     = 'X'.
ENDIF.
CALL METHOD sender-&gt;get_frontend_fieldcatalog
IMPORTING
et_fieldcatalog = lt_fieldcat.

    CALL FUNCTION 'LVC_VARIANT_SELECT'
EXPORTING
i_dialog            = space
i_user_specific     = lv_user_specific
it_default_fieldcat = lt_fieldcat
IMPORTING
et_fieldcat         = lt_fieldcat
et_sort             = lt_sort
et_filter           = lt_filter
CHANGING
cs_variant          = ls_variant
EXCEPTIONS
OTHERS              = 6.
IF sy-subrc = 0.
*** set all neccessary objects of chosen variant
      CALL METHOD sender-&gt;set_variant( ls_variant ).
CALL METHOD sender-&gt;set_frontend_fieldcatalog( lt_fieldcat ).
CALL METHOD sender-&gt;set_filter_criteria( lt_filter ).
CALL METHOD sender-&gt;set_sort_criteria( lt_sort ).
ls_stable = 'XX'.
CALL METHOD sender-&gt;refresh_table_display
EXPORTING
is_stable      = ls_stable
i_soft_refresh = space.
ENDIF.

  ENDMETHOD.                           "handle_user_command

ENDCLASS.                    "lcl_event_receiver IMPLEMENTATION

*** _______________________________________________________ ***
***                                                         ***
***                 START OF PROGRAM
*** _______________________________________________________ ***
***                                                         ***

START-OF-SELECTION.

  SELECT * FROM vbak INTO TABLE gt_vbak UP TO 30 ROWS.

  CALL SCREEN 100.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  PBO  OUTPUT
*&amp;---------------------------------------------------------------------*
MODULE pbo OUTPUT.

  SET PF-STATUS '100'.
  SET TITLEBAR '100'.
  CLEAR sy-ucomm.
  PERFORM init_grid.

ENDMODULE.                 " PBO  OUTPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  PAI  INPUT
*&amp;---------------------------------------------------------------------*
MODULE pai INPUT.

  CASE sy-ucomm.
WHEN 'BACK'.
SET SCREEN 0. LEAVE SCREEN.
ENDCASE.

ENDMODULE.                 " PAI  INPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Form  init_grid
*&amp;---------------------------------------------------------------------*
FORM init_grid.

  IF gr_grid IS INITIAL.
*** create custom container
CREATE OBJECT gr_cont
EXPORTING
container_name = 'CONTAINER'.

*** Create ALV Grid
CREATE OBJECT gr_grid
EXPORTING
i_parent = gr_cont.

*** Set variant
CLEAR gs_variant.
gs_variant-report   = sy-repid.
gs_variant-handle   = 'GRID'.
gs_variant-username = sy-uname.

*** Set display
CALL METHOD gr_grid-&gt;set_table_for_first_display
EXPORTING
i_structure_name = 'VBAK'
is_variant       = gs_variant
i_save           = 'A'
i_default        = 'X'
CHANGING
it_outtab        = gt_vbak
EXCEPTIONS
OTHERS           = 4.

*** Create event handler for grid
CREATE OBJECT gr_evth.
SET HANDLER gr_evth-&gt;handle_user_command
gr_evth-&gt;handle_toolbar
FOR gr_grid.

*** set toolbar interactive
    gr_grid-&gt;set_toolbar_interactive( ).

  ENDIF.

ENDFORM.                    "init_grid</pre>
<h2 class="head1">Button types</h2>
<p>0 Button (normal)<br />
1 Menü + Defaultbutton<br />
2 Menü<br />
3 Separator<br />
4 Radiobutton<br />
5 Auswahlknopf (Checkbox)<br />
6 Menüeintrag</p>
<p>Der Beitrag <a href="/blog/variantenschnellzugriff/">Variantenschnellzugriff</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
