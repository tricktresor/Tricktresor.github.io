<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Workshop: Viewcluster Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/workshop-viewcluster/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Mon, 28 Jan 2019 15:22:04 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Workshop: Viewcluster Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Pflege-Dynpros anpassen</title>
		<link>/blog/pflege-dynpros-anpassen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 03 May 2016 09:54:05 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Workshop: Viewcluster]]></category>
		<category><![CDATA[Pflegeview & Viewcluster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=415</guid>

					<description><![CDATA[<p>Die Pflege-Dynpros werden zwar mit jedem Generieren des Tabellenpflegedialogs neu generiert, trotzdem k&#246;nnen Sie kleine Anpassungen vornehmen. In diesem Teil des Workshops zeigen wir Ihnen, was Sie &#228;ndern k&#246;nnen und wie Sie die &#196;nderungen auch nach einer Neugenerierung rekonstruieren k&#246;nnen.</p>
<p>Der Beitrag <a href="/blog/pflege-dynpros-anpassen/">Pflege-Dynpros anpassen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Die Pflege-Dynpros werden zwar mit jedem Generieren des Tabellenpflegedialogs neu generiert, trotzdem können Sie kleine Anpassungen vornehmen. In diesem Teil des Workshops zeigen wir Ihnen, was Sie ändern können und wie Sie die Änderungen auch nach einer Neugenerierung rekonstruieren können.</p>
<p>Um Anpassungen vorzunehmen, sollten Sie Erfahrung mit dem Screen-Painter haben.</p>
<p class="head1">Allgemein</p>
<p>Anpassungen können schnell notwendig werden, wenn z.B. Texte aus dem Dictionary nicht ganz richtig zur Verwendung des Feldes passen.</p>
<p>Ebenso können Feldattribute angepasst werden. Auch &#8220;Verschönerungen&#8221; durch Icons sind schnell gemacht.</p>
<p>Wir zeigen Ihnen eine kurze Auswahl einfacher Anpassungen.</p>
<p>Um die Dynpros zu ändern, gehen Sie im Menü im Generierungsdialog über &#8220;<em>Umfeld &#8211; Modifikation &#8211; Pflegebilder</em>&#8221; zum Layout-Editor. Wählen Sie in dem Popup das zu ändernde Dynpro. Haben Sie den Pflegetyp &#8220;einstufig&#8221; gewählt, erscheint nur das Übersichtsdynpro.</p>
<p class="head1">Attribute des TableControls</p>
<p class="text1">Ein Manko der Tabellepflegedialoge ist, dass die SAP es nicht geschafft hat, die Dynprogröße und den TableControl mit den größtmöglichen Werten anzulegen. Das hat zur Folge, dass der TableControl nur etwa die Hälfte eines heute üblichen Bildschirms ausfüllt.</p>
<p class="text1">Sie können das jedoch einfach nachholen, indem Sie inden Dynproattributen die Dynprogröße anpassen. Tragen Sie in dem Feld &#8220;Zeilen/ Spalten &#8211; Pflege&#8221; einfach einen größeren Wert ein.</p>
<p class="text1"><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/tpd_view_mod02.jpg" alt="" /></p>
<p>Nun müssen Sie noch im Layout-Editor den TableControl am kleinen Anfasser in der Mitte desselben an den rechten Rand ziehen:</p>
<p><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/tpd_view_mod03.jpg" alt="" /></p>
<p>Und um das lästige Scrollen der Nicht-Schlüssel-Felder zu verhindern, können Sie noch in den Attributen des TableControls die Anzahl der fixen Spalten auf die Anzahl der Felder setzen. Sie müssen dazu den TableControl im Layout-Editor mit einem Doppelklick auf den oberen &#8220;Anfasser&#8221; auswählen. Im Attribute-Fenster können Sie dann den Wert für &#8220;Fixe Spalten&#8221; überschreiben.</p>
<p><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/tpd_view_mod04.jpg" alt="" /></p>
<p><strong><span style="text-decoration: underline;">Achtung!</span></strong><br />
Vergessen Sie bei allen Anpassungen nicht, das Dynpro hinterher zu aktivieren!!!</p>
<p class="head1">Feldattribute anpassen</p>
<p>In unserem Beispiel ist das FELD2 so groß, dass die anderen Felder nicht richtig sichtbar sind. In diesem Fall können wir das Feld einfach kleiner ziehen.</p>
<p>Die eigentliche Feldlänge wird dabei nicht geändert. Das System markiert automatisch das Attribut &#8220;Rollbalken&#8221; für das nun kleinere Feld.</p>
<p>Sie können auch eine eigene Suchhilfe in den Attributen für das Feld eintragen.</p>
<p>Überschriften können ebenso einfach verändert werden. Tragen Sie eine neue Überschrift ein oder legen Sie ein Icon mit entsprechendem Tooltip fest.</p>
<p class="head1">Änderungen sichern</p>
<p>Wie schln erwähnt, werden die hier gemachten Änderungen zerstört, sobald das Dynpro für den Pflegeview erneut generiert wird.</p>
<p><strong>Sie sollten die Änderungen also möglichst erst dann vornehmen, wenn die Struktur der Tabelle bzw. des Views endgültig fest steht.</strong></p>
<p>Sie können aber die Änderungen einfach sichern: Springen Sie dazu in die &#8220;Ablauflogik&#8221; des Dynpros und drücken Sie den Knopf [_Anderes Objekt_] (SHIFT-F5). Das aktuelle Dynpro wird vorgeblendet und Sie können nun durch drücken von STRG-F5 &#8220;Kopieren&#8221; das Dynpro kopieren. Wählen Sie dazu einfach die nächst höhere Dynpronummer.</p>
<p>Das kopierte Dynpro wird angezeigt; es ist noch inaktiv. Springen Sie auf die &#8220;Eigenschaften&#8221; des Dynpros und tragen Sie vor der kopierten Bezeichnung den Text &#8220;KOPIE&#8221; ein.</p>
<p>Zusätzlich können Sie noch den Haken bei &#8220;Vorlage &#8211; nicht ausführbar&#8221; setzen.</p>
<p>Aktivieren Sie das Dynpro bitte, auch wenn es nicht benötigt wird.</p>
<p class="head1">Änderungen rekonstruieren</p>
<p>Wenn der Tabellenpflegedialg neu generiert wurde, können Sie die Änderungen anhand der Kopie einfach nachvollziehen. Sie können komplette Objekte per Copy &amp; Paste zwischen den Dynpros kopieren.</p>
<p>Achten Sie jedoch darauf, dass Sie nicht den kompletten TableControl wieder auf das generierte Dynpro kopieren, denn hier sind wahrscheinlich Unterschiede zu Ihrer Kopie!</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/pflege-dynpros-anpassen/">Pflege-Dynpros anpassen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Tabellenpflegedialoge &amp; Viewcluster]]></series:name>
	</item>
		<item>
		<title>Nachwort</title>
		<link>/blog/nachwort/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2007 20:33:19 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Workshop: Viewcluster]]></category>
		<category><![CDATA[Pflegeview & Viewcluster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=419</guid>

					<description><![CDATA[<p>Ein paar Schlussworte zu diesem Workshop und den Tabellenpflegedialogen</p>
<p>Der Beitrag <a href="/blog/nachwort/">Nachwort</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ein paar Schlussworte zu diesem Workshop und den Tabellenpflegedialogen</p>
<p>Sie haben nun Pflegedialoge und Viewcluster kennengelernt und die Möglichkeiten gesehen, die sich damit bieten.</p>
<p>Es lohnt sich, am Ball zu bleiben, denn es gibt viele Tricks, die man bei den Pflegedialogen anwenden kann.</p>
<p>Im Tricktresor wurde bereits dieser hier vorgestellt: <a href="https://tricktresor.com/content/index.php?aID=395" target="_self">Wichtige Tabellenfelder</a></p>
<p>Es werden sicherlich noch einige weitere folgen.</p>
<p>Wenn Sie ebenfalls eine Anwendungsmöglichkeit haben, die sich super mit Tabellenpflegedialogen realisieren lassen, dann freuen wir uns auf eine Rückmeldung.</p>
<p>Ebenfalls würden wir gerne wissen, wie Ihnen der Workshop gefallen hat. Haben Sie andere Themen, über die Sie gerne in einem ähnlichen Workshop mehr erfahren würden? Dann her damit!</p>
<p>Wir wünschen Ihnen Viel Erfolg und ein tolles Feedback über Ihren nächsten Viewcluster!</p>
<p>Ihr<br />
Enno Wulff</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/nachwort/">Nachwort</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Tabellenpflegedialoge &amp; Viewcluster]]></series:name>
	</item>
		<item>
		<title>Viewcluster erstellen</title>
		<link>/blog/viewcluster-erstellen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2007 19:37:17 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Workshop: Viewcluster]]></category>
		<category><![CDATA[Pflegeview & Viewcluster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=418</guid>

					<description><![CDATA[<p>In diesem Kapiteln zeigen wir Ihnen im Schnelldurchlauf, wie Sie einen Viewcluster mit einer Basistabelle und einem abh&#228;ngigen View erstellen. </p>
<p>Der Beitrag <a href="/blog/viewcluster-erstellen/">Viewcluster erstellen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>In diesem Kapiteln zeigen wir Ihnen im Schnelldurchlauf, wie Sie einen Viewcluster mit einer Basistabelle und einem abhängigen View erstellen.</p>
<p>In diesem Schritt sollten Sie die Generierung der Tabellenpflegedialoge begriffen haben.<br />
Zudem sollten Sie mit der Thematik &#8220;Fremdschlüssel&#8221; vertraut sein.</p>
<p class="head1">Beispiel</p>
<p>In diesem Beispiel sollen zwei Tabellen erstellt werden:</p>
<ol>
<li>Die Basistabelle ZTTK: Vertriebsbereich + Einstellungen</li>
<li>Die abhängige Tabelle ZTTP: Vertriebsbereich + Kundennummer</li>
</ol>
<p class="head2">Kopftabelle ZTTK</p>
<p>&nbsp;</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/workshop/Viewcluster/zttk.jpg" /><br />
Tabelle ZTTK</td>
</tr>
</tbody>
</table>
<p><span style="text-decoration: underline;"><strong>TIPP:<br />
</strong></span>Für die Fremdschlüsselprüfung der Felder VTWEG und SPART haben wir nicht die Vorschlagswerte genommen, sondern die jeweiligen Zuordnungstabellen. Damit werden nach Eingabe einer Verkaufsorganisation automatisch die nur die Vertriebswege angezeigt, die der Verkaufsorganisation zugeordnet sind!</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/zttk02.jpg" /></p>
<p class="head2">Abhängige Tabelle ZTTP</p>
<p>&nbsp;</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/workshop/Viewcluster/zttp.jpg" /><br />
Tabelle ZTTP</td>
</tr>
</tbody>
</table>
<p class="head2">Tabellenview für abhängige Tabelle</p>
<p>Für die Tabelle ZTTP haben wir noch den View ZTTPV angelegt, der alle Felder der Tabelle enthält.</p>
<p>Hier müssen Sie die Feldeigenschaft &#8220;Subset&#8221; setzen, damit die Keyfelder der abhängigen Tabelle später entsprechend angezeigt werden:</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/zttpv_s.jpg" /></p>
<p class="head2">Tabellenpflegedialog generieren</p>
<p>Für die Tabelle ZTTK und den abhängigen View ZTTPV haben wir jeweils einen Tabellenpflegedialog generiert.</p>
<p class="head1">Viewcluster definieren</p>
<p>Springen Sie mit der Transaktion SE54 um den Viewcluster &#8220;ZTTVCL&#8221; anzulegen. Sie müssen den Knopf [_Bearb. Viewcluster_] drücken und dann den Namen eintragen.</p>
<p>Mit [_Anlegen/ Ändern_] erstellen Sie den Viewcluster. Tragen Sie einen Namen ein und klicken Sie links im Baum auf &#8220;Objektstruktur&#8221;.</p>
<p>Über [_Neue Einträge_] erfassen Sie die Tabelle ZTTK und den View ZTTPV:</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/zttvcl_01.jpg" /></p>
<p>Nun kommt der wichtige Schritt: die Feldverknüpfung. Für den obersten Eintrag können Sie [_Feldabhängigkeit_generieren_] wählen:</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/zttvcl_02.jpg" /></p>
<p>Den abhängigen Eintrag müssen wir per Hand nachtragen. Hier funktioniert die Feldgenerierung nicht automatisch:</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/zttvcl_03.jpg" /></p>
<p>Nachdem Sie nun die Feldabhängigkeiten definiert haben, können Sie auf der obersten Ebene &#8220;Kopfeintrag&#8221; den Viewcluster generieren.</p>
<p>Wenn Sie alles richtig gemacht haben, werden Sie gefragt:</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/zttvcl_04.jpg" /></p>
<p>Die Frage beantworten Sie mit &#8220;Ja&#8221; und nun können Sie mit der Transaktion SM34 den Viewcluster bearbeiten und mit Daten füllen:</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/zttvcl_05.jpg" /></p>
<p>Der Beitrag <a href="/blog/viewcluster-erstellen/">Viewcluster erstellen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Tabellenpflegedialoge &amp; Viewcluster]]></series:name>
	</item>
		<item>
		<title>Viewcluster Vorbereitungen</title>
		<link>/blog/viewcluster-vorbereitungen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2007 19:15:58 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Pflegeview & Viewcluster]]></category>
		<category><![CDATA[Workshop: Viewcluster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=417</guid>

					<description><![CDATA[<p>Richtig Spa&#223; machen Tabellenpflegedialoge erst richtig, wenn mehrere Tabellen zu einem Viewcluster zusammengefasst werden. Hierbei kann die Dateneingabe einfacher und deutlicher gemacht werden, indem der Anwender nur noch Daten zu einem Teilbereich eingeben muss, aber nicht mehr den gesamten Schl&#252;ssel.</p>
<p>Der Beitrag <a href="/blog/viewcluster-vorbereitungen/">Viewcluster Vorbereitungen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Richtig Spaß machen Tabellenpflegedialoge erst richtig, wenn mehrere Tabellen zu einem Viewcluster zusammengefasst werden. Hierbei kann die Dateneingabe einfacher und deutlicher gemacht werden, indem der Anwender nur noch Daten zu einem Teilbereich eingeben muss, aber nicht mehr den gesamten Schlüssel.</p>
<p>Viewcluster werden aus mehreren Tabellen gebildet. Die Tabellen können dabei einfach nur gruppiert werden, ohne dass ein Schlüssel-Zusammenhang zwischen ihnen besteht oder sie können miteinander hierarchisch verknüpft sein.</p>
<p class="head1">Anwendungsbeispiel &#8220;Gruppierung&#8221;</p>
<p>Die einfachste Variante eines Viewclusters ist die Gruppierung mehrerer Tabellen oder Views.</p>
<p>Dies ist dann sinnvoll, wenn Sie zu einer Anwendung oder zu einem Bereich mehrere Tabellen haben, bei denen es Sinn macht, dass sie zusammen überblickt werden.</p>
<p>&nbsp;</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_02.jpg" /><br />
Gruppierte Tabellen: Gefahrgut-Texte im SAP-Standard</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Zu einer Anwendungstransaktion könnten z.B. bestimmte Materialien, Kunden und Vertriebsbereiche bestimmt werden, für die Einstellungen für die Transaktion vorgenommen werden müssen.</p>
<p class="head1">Anwendungsbeispiel &#8220;Verknüpfung&#8221;</p>
<p>Interessanter wird es, wenn abhängige Tabellen miteinander verknüpft werden sollen.</p>
<p>Die abhängigen Tabellen müssen die selben Schlüsselfelder besitzen, wie die Basistabelle.</p>
<p>Die Beziehungen werden über Fremdschlüssel definiert.</p>
<p>&nbsp;</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_01.jpg" /><br />
Ein Viewcluster im SAP-Standard: Nachrichtenarten</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Stellen Sie sich vor, Sie müssen für &#8220;Ihren&#8221; Vertriebsbereich Kunden pflegen, für die bestimmte Regeln gelten sollen.</p>
<p>Normalerweise haben Sie dann eine Tabelle mit dem folgenden Schlüssel: <em>Verkaufsorganisation &#8211; Vertriebsweg &#8211; Sparte &#8211; Kundennummer</em>.</p>
<p>Sie würden sich nun &#8211; da sie ja nur für einen Vertriebsbereich zuständig sind &#8211; darüber ärgern, dass Sie jedesmal den gleichen Vertriebsbereich eintragen müssen. Das lässt sich zwar relativ einfach mit &#8220;Copy &amp; Paste&#8221; erledigen, aber ein Viewcluster wäre eleganter: Sie würden &#8220;Ihren&#8221; Vertriebsbereich auswählen und müssten dann nur noch die Kundennummern eintragen.</p>
<p>Zudem ist die Darstellung auch übersichtlicher.</p>
<p>Der Viewcluster ist sicherlich nicht immer die beste Methode, denn bei vielen verschiedenen Vertriebsbereichen kann es genau so enervierend sein, jeweils die einzelnen Vertriebsbereiche auswählen zu müssen.</p>
<p>Zudem ist dann auch ein &#8220;Copy &amp; Paste&#8221; mehrerer verschiedener Schlüsseleinträge aus z.B. Excel nicht mehr möglich.</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/viewcluster-vorbereitungen/">Viewcluster Vorbereitungen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Tabellenpflegedialoge &amp; Viewcluster]]></series:name>
	</item>
		<item>
		<title>Zeitpunkte</title>
		<link>/blog/zeitpunkte/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2007 18:39:53 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Workshop: Viewcluster]]></category>
		<category><![CDATA[Pflegeview & Viewcluster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=416</guid>

					<description><![CDATA[<p>Zeitpunkte sind ein m&#228;chtiges Werkzeug des Tabellepflegedialoges. Hier k&#246;nnen Anpassungen vorgenommen werden, ohne den SAP-Quellcode modifzieren zu m&#252;ssen. Wir werden nicht auf alle Zeitpunkte eingehen, zeigen Ihnen aber anhand eines Beispiels, wie Sie die Zeitpunkte nutzen k&#246;nnen.</p>
<p>Der Beitrag <a href="/blog/zeitpunkte/">Zeitpunkte</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Zeitpunkte sind ein mächtiges Werkzeug des Tabellepflegedialoges. Hier können Anpassungen vorgenommen werden, ohne den SAP-Quellcode modifzieren zu müssen. Wir werden nicht auf alle Zeitpunkte eingehen, zeigen Ihnen aber anhand eines Beispiels, wie Sie die Zeitpunkte nutzen können.</p>
<p align="center">Um mit Zeitpunkten zu arbeiten, benötigen Sie ABAP-Erfahrung.</p>
<h2 class="head1">Was sind Zeitpunkte?</h2>
<p>Zeitpunkte sind Userexits, in die während der Verarbeitung des Pflegeviews verzweigt wird. Hierbei gibt es Zeitpunkte, die zusätzlich durchlaufen werden als auch Zeitpunkte, die Standard-Routinen ersetzen.</p>
<p>Zu den gewünschten Zeitpunkten wird eine Unterroutine in der Funktionsgruppe des Pflegeviews angelegt.</p>
<p>Welche Zeitpunkte durchlaufen werden, stellen Sie zu jedem View ein. die Zeitpunkte sind in der Online-Hilfe ausführlich erklärt.</p>
<h2 class="head1">Beispiel: Versorgen von verborgenen Feldern</h2>
<p>Eine häufig gewünschte Funktion ist es, Die Änderung von Tabelleneinträgen zu protokollieren.</p>
<p>Eine einfache Methode ist, die Felder &#8220;Änderungsdatum&#8221;, &#8220;Änderungszeit&#8221; und &#8220;Änderer&#8221; in die zu pflegende Tabelle aufzunehmen.</p>
<p>Legen Sie dann einen View für diese Tabelle an, auch wenn Sie die Tabelle nicht mit einer anderen Tabelle verknüpfen möchten.</p>
<p>Sie können dann in dem View die genannten Felder auf &#8220;Read-Only&#8221; oder sogar &#8220;hidden&#8221; setzen.</p>
<p>Um die Felder zu füllen, bedienen wir uns des Zeitpunktes &#8220;Versorgen von verborgenen Feldern&#8221;.</p>
<p>Auf der Übersicht des Tabellenpflegegenerators zu dem View springen Sie bitte im Menü &#8220;<em>Umfeld &#8211; Modifikationen &#8211; Zeitpunkte</em>&#8221; in die Pflege der Zeitpunkte.</p>
<p>Die Meldung &#8220;<em>Bitte keine Änderungen (Daten gehören SAP)</em>&#8221; können Sie getrost ignorieren.</p>
<p>Durch [_Neue Einträge_] können Sie den Zeitpunkt &#8220;21&#8221; hinzufügen. Als Routinennamen geben Sie z.B. &#8220;ZZ_AENDERUNGSINFO&#8221; ein. Nach drücken von &#8220;Enter&#8221; können Sie den Button &#8220;Editor&#8221; anklicken um das Coding zu erfassen. Ist es die erste Unterroutine, so müssen Sie ein Include auswählen, in welches das Coding kommen soll:</p>
<p><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/tpd_view_zp_02.jpg" alt="" /></p>
<p>Sie können dann das Coding erfassen. Es ist denkbar einfach:</p>
<h2>Code</h2>
<pre class="lang:abap decode:true">*----------------------------------------------------------------------*
***INCLUDE LZTT1F01 .
*----------------------------------------------------------------------*
FORM zz_aenderungsinfo.

ztt1v-aenam = sy-uname.
ztt1v-aedat = sy-datum.
ztt1v-aetim = sy-uzeit.

ENDFORM.</pre>
<p class="text1"><strong>Alle Coding-Änderungen müssen aktiviert werden!<br />
Alle Tabelleneinträge der Zeitpunkte müssen gesichert werden!!</strong></p>
<p class="text1">Der Zeitpunkt &#8220;21&#8221; wird lediglich bei der <strong>Anlage</strong> und beim <strong>Ändern</strong> eines Eintrags durchlaufen! Beim Kopieren eines Eintrags und bei der Anzeige ist dieser Zeitpunkt nicht aktiv!</p>
<h2 class="head1">Beispiel: Eigene Einlese-Routine</h2>
<p>Eine eigene Einlese-Routine eignet sich besonders dann, wenn der Benutzer nur einen Teil der Daten sehen darf.</p>
<p>Wir können die Standard-Einlese-Routine des Pflegedialoges verwenden und dann die Einträge löschen, die der Anwender nicht sehen darf.</p>
<p>Legen Sie, wie zuvor auch, einen Zeitpunkt an. Diesmal nehmen wir<br />
&#8220;AA &#8211; Anstelle der Standardroutine für das Einlesen der Daten&#8221;.</p>
<p>Das Coding könnte so aussehen, um dem Anwender nur den Eintrag &#8220;DE&#8221; anzuzeigen.</p>
<pre class="lang:abap decode:true ">FORM zz_daten_einlesen.

*** Einlesen der Daten 
PERFORM get_data_ztt1v.

*** Alle Einträge ausser "DE" löschen
LOOP AT total INTO ztt1v.
IF ztt1v-land1 &lt;&gt; 'DE'.
DELETE total.
ENDIF.
ENDLOOP.

ENDFORM.</pre>
<p>Hier könnten natürlich weitere Customizingtabellen abgefragt werden, welcher Anwender für welche Länder zuständig ist.</p>
<p><strong><span style="text-decoration: underline;">Hinweis:<br />
</span></strong>Um diese Form der Berechtigungsprüfung zu vervollständigen, sollte auch der Zeitpunkt &#8220;05 beim Hinzufügen eines neuen Eintrags&#8221; aktiviert werden, damit der Anwender auch nur Daten <strong>eingeben </strong>darf, für die er zuständig ist.</p>
<h2 class="head1">Andere Zeitpunkte</h2>
<p>Schauen Sie sich die anderen Zeitpunkte an und lesen Sie sich die Hilfe zu den Zeitpunkten durch. Mit den Suchwörtern &#8220;zeitpunkte pflegeview&#8221; finden Sie unter help.sap.com leicht die Hilfe für Ihr Release.</p>
<p>Sie werden bestimmt Anwendungsgebiete für Ihre Projekte finden&#8230;!</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/zeitpunkte/">Zeitpunkte</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Tabellenpflegedialoge &amp; Viewcluster]]></series:name>
	</item>
		<item>
		<title>Einen Pflegeview verwenden</title>
		<link>/blog/einen-pflegeview-verwenden/</link>
					<comments>/blog/einen-pflegeview-verwenden/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 15 May 2007 20:15:33 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Pflegeview & Viewcluster]]></category>
		<category><![CDATA[Workshop: Viewcluster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=414</guid>

					<description><![CDATA[<p>Nachdem wir den Tabellenpflegegenerator f&#252;r einen Tabelle benutzt haben, wollen wir nun einen View verwenden und sehen, was sich hier f&#252;r M&#246;glichkeiten bieten.</p>
<p>Der Beitrag <a href="/blog/einen-pflegeview-verwenden/">Einen Pflegeview verwenden</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Nachdem wir den Tabellenpflegegenerator für einen Tabelle benutzt haben, wollen wir nun einen View verwenden und sehen, was sich hier für Möglichkeiten bieten.</p>
<p>Im vorherigen Schritt haben wir einen Tabellenpflegedialog zu einer Tabelle angelegt. Wenn wir einen Pflege-View verwenden, haben wir gleich ganz andere Möglichkeiten:</p>
<ul>
<li>Verknüpfung der Daten zu einer Texttabelle</li>
<li>Felder auf &#8220;nicht eingabebereit&#8221; setzen</li>
<li>Selektion der Tabelle einschränken</li>
<li>Vereinfachung der Dateneingabe bei Verwendung in Viewclustern</li>
</ul>
<p class="head1">Pflegeview anlegen</p>
<p>Den Pflegeview legen wir ebenfalls in der Transaktion SE11 an. Als Typ muss natürlich &#8220;Pflege-View&#8221; gewählt werden.</p>
<p>Geben Sie eine Bezeichnung ein und Tragen Sie die Tabelle ZTT1 als Basistabelle ein:</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/tpd_view_ztt1_01.jpg" /></p>
<p class="head1">Beziehungen</p>
<p>Wir wollen zu unserer einfachen Tabelle nun zusätzliche Informationen zur Anzeige bringen. In diesem Fall soll angezeigt werden, ob es sich bei dem Land um ein EU-Mitglied handelt. Ebenso soll die Bezeichnung des Landes angezeigt werden.</p>
<p>Um dies tun zu können, müssen Sie in der Basistabelle ZTT1 einen Fremdschlüssel zum Feld <strong>LAND1</strong> anlegen.</p>
<p>Danach können Sie die Tabelle mit der Ländertabelle verknüpfen. Klicken Sie dazu auf den Button [_Beziehungen_]. Es erscheint eine Auswahl der möglichen Beziehungen, die das System anhand der vorhandenen Fremdschlüssel ermittelt.</p>
<p>Markieren Sie die Tabelle T005 und klicken Sie auf den Knopf [_Übernehmen_].</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/tpd_view_ztt1_02.jpg" /></p>
<p>Die Tabelle T005 wird nun ebenfalls angezeigt. Zudem hat das System die notwendige Join-Bedingung eingetragen.</p>
<p>Wiederholen Sie das ganze nun mit der Tabelle T005 um die Texttabelle einzubinden. Hier gibt es ein paar Beziehungen&#8230;</p>
<p>Scrollen Sie runter bis zu dem Eintrag T005T &#8211; T005, markieren Sie ihn und klicken Sie wieder auf [_Übernehmen_].</p>
<p class="head1">Felder</p>
<p>Wir haben nun die Möglichkeit, auf die Felder dieser Basistabellen zuzugreifen.</p>
<p>Klicken Sie auf den Reiter &#8220;Viewfelder&#8221; und dann auf den Knopf [_Tabellenfelder_], um die gewünschten Felder in den View aufzunehmen.</p>
<p>Wählen Sie aus der Tabelle T005 das Feld XEGLD aus und aus T005T das Feld LANDX.</p>
<p><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/tpd_view_ztt1_03.jpg" /></p>
<p class="head1">Feldeigenschaften</p>
<p class="text1">Wenn Sie die Felder in den View aufgenommen haben, können wir die Feldeigenschaften verändern. In diesem Fall wollen wir die Eigenschaft &#8220;Read-Only&#8221; für die Felder der Standardtabellen setzen:</p>
<p><strong><span style="text-decoration: underline;"><img decoding="async" alt="" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/tpd_view_ztt1_04.jpg" /></span></strong></p>
<p><strong><span style="text-decoration: underline;">Hinweis:</span><br />
</strong>Da es sich hier um Standardtabellen handelt, sollten Sie nur die Anzeige dieser Felder erlauben.</p>
<p>Sie können nun den View aktivieren und einen Pflegedialog hierfür erzeugen. Sie können die selbe Funktionsgruppe verwenden, die Sie bereits für die Tabelle ZTT1 verwendet haben.</p>
<p><strong><span style="text-decoration: underline;">Achtung:</span></strong><br />
Eine Funktionsgruppe kann Pflegedialoge zu mehreren Tabellen und Views enthalten. Fassen Sie möglichst thematisch zusammengehörige Tabellen in eine Funktionsgruppe. Bei zu vielen Pflegebausteinen in einer Funktionsgruppe besteht die Gefahr, dass bei fehlerhaften Dialogen keine der enthaltenen Tabellen mehr pflegbar ist! Eine Inkonsistenz entsteht z.B. dadurch, dass ein Feld einer Tabelle gelöscht wird, aber der Pflegedialog nicht angepasst wird. Dadurch hat die gesamte Funktionsgruppe einen Syntaxfehler.</p>
<p>Mit der Transaktion SM30 können Sie dann die Einträge pflegen.</p>
<p>Die Felder aus den Standardtabellen werden zur Information angezeigt.</p>
<p><span style="text-decoration: underline;"><strong>TIPP:<br />
</strong></span>In den Selektionsbedingungen können Sie die Selektion der Daten beschränken.</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/einen-pflegeview-verwenden/">Einen Pflegeview verwenden</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/einen-pflegeview-verwenden/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		
		<series:name><![CDATA[Tabellenpflegedialoge &amp; Viewcluster]]></series:name>
	</item>
		<item>
		<title>Ziel des Workshops</title>
		<link>/blog/ziel-des-workshops/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 15 May 2007 21:50:46 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Workshop: Viewcluster]]></category>
		<category><![CDATA[Pflegeview & Viewcluster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=413</guid>

					<description><![CDATA[<p>Eine kurze &#220;bersicht &#252;ber die Aktionen in diesem Workshop.</p>
<p>Der Beitrag <a href="/blog/ziel-des-workshops/">Ziel des Workshops</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Eine kurze Übersicht über die Aktionen in diesem Workshop.</p>
<p>In diesem Workshop geht es darum, Tabellepflegedialoge zu generieren. Nach dem Workshop können Sie dies. Zudem dient der Workshop dazu, zu erkennen, wie Sie das mächtige Tool in Ihren Projekten gewinnbringend und zeitsparend einsetzen können.</p>
<p class="head1">Themenübersicht</p>
<p>In der Einleitung  erfahren Sie, was Pflegedialoge sind, wozu man sie braucht und was die Alternativen sind.</p>
<p>Im zweiten Schritt legen wir zu einer einfachen Tabellen einen Pflegedialog an.</p>
<p>Danach legen wir einen View an zu dem wir einen Pflegedialog generieren. Bei einem View haben Sie die Möglichkeit, Daten aus anderen Tabellen mit anzuzeigen und Felder zur Information als Anzeigefeld mit auszugeben.</p>
<p>Es werden verschiedene Möglichkeiten gezeigt, die alleine die Manipulation des zugrunde liegenden Views aufzeigt.</p>
<p>&#8220;Zeitpunkte&#8221; ist das Zauberwort für Anpassungsfähigkeit und Variabilität der Tabellenpflegedialoge. Wir zeigen Ihnen, wie sie Zeitpunkte nutzen, um Daten gefiltert einzulesen, Anzeigefelder zu füllen und spezielle Berechtigungsprüfungen durchzuführen.</p>
<p>Die Dynpros der Dialoge werden generiert. Sie können jedoch nachträglich geändert werden. Mit dem nötigen Wissen können Sie die Änderungen nach einer erneute Generierung leicht wieder herstellen.</p>
<p>Mehrere Pflegetabellen können in Viewclustern zusammengefasst und gemeinsam bearbeitet werden. Zudem kann durch Auswahl eines übergeordneten Eintrags die Anzeige der darunter liegenden Einträge eingeschränkt werden.</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/ziel-des-workshops/">Ziel des Workshops</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Tabellenpflegedialoge &amp; Viewcluster]]></series:name>
	</item>
		<item>
		<title>Pflegedialog erzeugen</title>
		<link>/blog/pflegedialog-erzeugen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 15 May 2007 19:46:48 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Pflegeview & Viewcluster]]></category>
		<category><![CDATA[Workshop: Viewcluster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=412</guid>

					<description><![CDATA[<p>Hier zeigen wir Ihnen den einfachsten Weg, zu einem Tabellenpflegedialog zu kommen. Wir legen eine Tabelle an und starten den Generator.</p>
<p>Der Beitrag <a href="/blog/pflegedialog-erzeugen/">Pflegedialog erzeugen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Hier zeigen wir Ihnen den einfachsten Weg, zu einem Tabellenpflegedialog zu kommen. Wir legen eine Tabelle an und starten den Generator.</p>
<p class="head1">Anlage einer Tabelle</p>
<p>Mit der Tabellenanlage halten wir uns nur kurz auf; das sollte allgemein bekannt sein. Wir geben hier nur kurze Eckdaten bekannt, damit Sie das Beispiel nachvollziehen können.</p>
<p class="head1">Tabelle ZTT1</p>
<p>Wir legen die transparente Tabelle ZTT1 in der SE11 an. Wir klassifizieren die Tabelle als &#8220;Anwendungstabelle&#8221; und erlauben die Anzeige und Pflege.</p>
<p><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_tab_anlegen.jpg" alt="" /></p>
<p>Die Felder sollen sein:</p>
<p><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_tab_felder.jpg" alt="" /></p>
<p>Pflegen Sie die technischen Einstellungen zur Tabelle und aktivieren Sie sie.</p>
<p>Nachdem das geschehen ist, können wir mittels Menüauswahl &#8220;<em>Hilfsmittel &#8211; Tabelleninhalt &#8211; Einträge erfassen</em>&#8221; bereits mit der SE16 die ersten Einträge einfügen.</p>
<p class="head1">Pflegedialog generieren</p>
<p>Mit &#8220;Hilfsmittel &#8211; Tabellenpflegegenerator&#8221; erzeugen wir den Tabellenpflegedialog:</p>
<p><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_generator.jpg" alt="" /></p>
<p>Wählen Sie Pflegetyp &#8220;einstufig&#8221;, wenn die Tabelle so schmal ist, dass sie gut auf eine Bildschirmseite passt.</p>
<p>Wählen Sie &#8220;zweistufig&#8221; um mit einem Doppelklick auf einen Eintrag in die Detailsicht springen zu können.</p>
<p><strong>Hinweis:<br />
</strong>Bei einem &#8220;zweistufigen View&#8221; müssen Sie neue Einträge immer in der Detailsicht erfassen.<br />
<strong>Blockweises Einfügen aus einer Exceltabelle ist damit dann nicht mehr möglich!!</strong></p>
<p class="head1">Test des Pflegedialoges</p>
<p>Nachdem Sie mit &#8220;Anlegen (F6)&#8221; den Dialog generiert haben, können Sie ihn mit der Transaktion SM30 testen:</p>
<p><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_sm30_einstieg.jpg" alt="" /></p>
<p class="head1"><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_sm30_pflege.jpg" alt="" /></p>
<p class="head1">Transaktion zuordnen</p>
<p>Damit der Pflegedialog auch einfach aufgerufen werden kann, legen wir am besten eine Transaktion dafür an.</p>
<p>Starten Sie dazu die Transaktion SE93 und vergeben Sie den Transaktionsnamen, z.B. ZTT1.</p>
<p>Wählen Sie &#8220;Anlegen&#8221; und markieren Sie die Option &#8220;Transaktion mit Parametern (Parametertransaktion)&#8221;</p>
<p>füllen Sie die Felder wie folgt:</p>
<p><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_se93_1.jpg" alt="" /></p>
<p><img decoding="async" src="https://tricktresor.com/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_se93_2.jpg" alt="" /></p>
<p>Sie können als Parameter auch &#8220;UPDATE&#8221; wählen, aber in der Praxis hat es sich bewährt, die Daten erst einmal anzuzeigen.</p>
<p>Wenn die Daten geändert werden sollen, dann können Sie immer noch den [_Ändern-Stift_] drücken, um in den Änderungsmodus zu wechseln.</p>
<p>Durch das Anzeigen der Daten wird in Systemen, in denen nicht gecustomized werden darf, die Meldung &#8220;<strong>System ist &#8220;nicht änderbar&#8221;. Nur Anzeige möglich</strong>&#8221; unterdrückt.</p>
<p>Der Beitrag <a href="/blog/pflegedialog-erzeugen/">Pflegedialog erzeugen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
		
		<series:name><![CDATA[Tabellenpflegedialoge &amp; Viewcluster]]></series:name>
	</item>
		<item>
		<title>Einleitung Pflegeview</title>
		<link>/blog/einleitung-pflegeview/</link>
					<comments>/blog/einleitung-pflegeview/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 15 May 2007 19:15:10 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Workshop: Viewcluster]]></category>
		<category><![CDATA[Pflegeview & Viewcluster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=411</guid>

					<description><![CDATA[<p>Hier erfahren Sie, was ein Pflegeview ist, wozu man ihn braucht und was f&#252;r Alternativen es gibt. </p>
<p>Der Beitrag <a href="/blog/einleitung-pflegeview/">Einleitung Pflegeview</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Hier erfahren Sie, was ein Pflegeview ist, wozu man ihn braucht und was für Alternativen es gibt.</p>
<p class="text1" align="center">In diesem Kapitel sollten Sie sich rudimentär mit dem Data Dictionary auskennen.</p>
<p class="head1">Wozu benötigt man einen Pflegeview?</p>
<p>Ein Pflegeview wird aus einer oder mehreren Tabellen zusammengebaut mit dem Zweck, Daten in dieser Form anzuzeigen und zu editieren.</p>
<p>&nbsp;</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_einleitung_pflview.jpg" /><br />
Der Pflegedialog bietet vielfältige Möglichkeiten</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Zu einer Tabelle oder auch einem speziellen Pflegeview kann mithilfe des &#8220;Tabellenpflegegenerators&#8221; eine kleine Anwendung zur Pflege einer Tabelle erzeugt werden.</p>
<p>Nahezu alle Customizing-Aktivitäten sind durch Tabellenpflegedialoge abgebildet. Wenn Sie also möchten, dass Ihre Anwendung einen professionellen Eindruck macht, dann sollten Sie für Ihre Parametertabellen ebenfalls diese Funktionalität nutzen.</p>
<p>Die Möglichkeiten, die sich bieten sind vielfältig. Es gibt zwar auch Einschränkungen &#8211; ein Tabellenpflegedialog ersetzt eben keine &#8220;richtige&#8221; Anwendung &#8211; aber es lassen sich viele Funktionalitäten damit verwirklichen.</p>
<p class="head1">Alternativen</p>
<p>Die Generierung eines Tabellenpflegeviews ist schnell, einfach und für den Anwender sehr komfortabel.</p>
<p>Es ist allerdings nicht immer nötig, zur Pflege einer Tabelle, einen Tabellenpflegedialog zu erzeugen.</p>
<p class="head2">SE16 für die Informatik</p>
<p>Wenn Sie eine Tabelle erzeugt haben, in die nur sehr wenige Einträge kommen sollen und die praktisch nicht mehr geändert wird, sobald Daten vorhanden sind, dann reicht wahrscheinlich die Kennzeichnung der Tabelle als &#8220;Anwendungstabelle&#8221; zu klassifizieren und die Pflege von Einträgen zu erlauben.</p>
<p>Die Tabelle kann dann mithilfe der SE16 gepflegt werden. Einträge können hinzugefügt, geändert, gelöscht und sogar transportiert werden.</p>
<p>&nbsp;</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/workshop/Viewcluster/vcl_einleitung_se16.jpg" /><br />
Das Pflegen von Einträgen funktioniert auch mit der SE16</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Die Nachteile sind:</p>
<ul>
<li>SE16 ist kein Tool für Anwender</li>
<li>Die SE16 bietet keine erweiterte Funktionalität (Zeitpunkte)</li>
<li>Es können keine &#8220;Anzeige-Felder&#8221; eingebunden werden</li>
<li>Die Berechtigungsprüfung erfolgt über eine Entwickler-Berechtigung (S_DEVELOP)</li>
<li>Kein Sytemabgleich möglich</li>
</ul>
<p class="head2">SE16n für die Informatik</p>
<p class="text1">Hier gelten im Grunde die gleichen Pro&#8217;s und Kontra&#8217;s wie für die SE16.</p>
<p class="head2">Eigene Applikation</p>
<p>Eine eigene Pflege-Applikation für eine Tabelle zu schreiben ist in den meisten Fällen schlichtweg überflüssig. Die Entwicklung so einer Transaktion dauert mindestens einen Tag und ist nicht annähernd so komfortabel, wie der SAP-Standard-Tabellenpflegedialog.</p>
<p>Selbst wenn spezielle Berechtigungsprüfungen eingebaut werden müssen und Funktionalitäten zum Absprung in andere Funktionen vorhanden sein sollen, ist dies mithilfe des Tabellenpflegedialogs deutlich einfacher.</p>
<p>Wenn Sie daran zweifeln, dann schauen Sie sich bitte den Workshop an, um zu sehen, was für vielfältige Möglichkeiten der Tabellenpflegedialog bietet.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/einleitung-pflegeview/">Einleitung Pflegeview</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/einleitung-pflegeview/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		
		<series:name><![CDATA[Tabellenpflegedialoge &amp; Viewcluster]]></series:name>
	</item>
	</channel>
</rss>
