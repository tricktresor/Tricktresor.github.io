<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>feldkatalog Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/feldkatalog/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Thu, 15 Mar 2018 15:46:16 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>feldkatalog Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Flexible Erzeugung des Feldkataloges</title>
		<link>/blog/flexible-erzeugung-des-feldkataloges/</link>
		
		<dc:creator><![CDATA[stefan]]></dc:creator>
		<pubDate>Mon, 23 Jun 2014 16:56:06 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[create data]]></category>
		<category><![CDATA[assign]]></category>
		<category><![CDATA[cl_abap_structdescr]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_abap_typedescr]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<category><![CDATA[feldkatalog]]></category>
		<category><![CDATA[style]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4862</guid>

					<description><![CDATA[<p>In dem Artikel DATA ... RENAMING WITH SUFFIX wurde die Aussage gemacht: "Die ALVs haben Probleme mit komplexen Strukturen". Das stimmt so nicht. NatÃ¼rlich ist es kein Problem des ALV sondern ein Problem bei der Erzeugung des Feldkatalogs. Ich habe mich darauf hin des Problems um die Erzeugung des Feldkatalogs zu einer komplexen Struktur angenommen und ein Programm entwickelt. Das Programm analysiert die komplexe Datenstruktur einer internen Tabelle und baut den Feldkatalog so auf, dass der ALV ihn zur Anzeige der Daten verwenden kann.</p>
<p>Der Beitrag <a href="/blog/flexible-erzeugung-des-feldkataloges/">Flexible Erzeugung des Feldkataloges</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>InÂ dem Artikel <a title="DATA â€¦ RENAMING WITH SUFFIX" href="https://tricktresor.com/blog/data-renaming-with-suffix/">DATA &#8230; RENAMING WITH SUFFIX</a>Â macht Enno die Aussage &#8220;Die ALVs haben Probleme mit komplexen Strukturen&#8221;. Das stimmt so nicht. NatÃ¼rlich ist es kein Problem des ALV sondern ein Problem bei der Erzeugung des Feldkatalogs. Ich habe mich deswegen einmalÂ um die Erzeugung des Feldkatalogs zu einer komplexen Struktur gekÃ¼mmertÂ und einÂ Programm entwickelt, dass einen Feldkatalog zu einer tiefen Struktur aufbauen kann.</p>
<h2>Arbeitsweise</h2>
<p>Das Programm analysiert die komplexe Datenstruktur einer internen Tabelle und baut den Feldkatalog so auf, dass der ALV ihn zur Anzeige der Daten verwenden kann.</p>
<p>Die Anzeige ist etwas bunter ausgefallen&#8230; <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png" alt="ðŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180623.jpg"><img fetchpriority="high" decoding="async" class="alignnone wp-image-4863 size-full" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180623.jpg" alt="Bild_2014_06_23_180623" width="572" height="286" srcset="/wp-content/uploads/2014/06/Bild_2014_06_23_180623.jpg 572w, /wp-content/uploads/2014/06/Bild_2014_06_23_180623-300x150.jpg 300w" sizes="(max-width: 572px) 100vw, 572px" /></a></p>
<h2>Coding</h2>
<pre>REPORT .

TYPES: BEGIN OF gts_data,
*         mara TYPE mara,
*         marc TYPE marc,
         t005  TYPE t005,
         t005t TYPE t005t,
       END OF gts_data.


DATA gt_data     TYPE STANDARD TABLE OF gts_data WITH NON-UNIQUE DEFAULT KEY.
DATA gt_fieldcat TYPE lvc_t_fcat.
DATA go_grid     TYPE REF TO cl_gui_alv_grid.
DATA gv_style    TYPE i.

*----------------------------------------------------------------------*
*       CLASS lcx_general_exceptions DEFINITION
*----------------------------------------------------------------------*
CLASS lcx_general_exceptions DEFINITION INHERITING FROM cx_static_check.
ENDCLASS.                    "lcx_general_exceptions DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_alv_utilities DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_alv_utilities DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS create_fieldcat_lvc  IMPORTING i_data TYPE  any
                                       RETURNING value(et_fieldcat) TYPE lvc_t_fcat
                                       RAISING lcx_general_exceptions.
  PRIVATE SECTION.
    CLASS-METHODS create_fieldcat_line IMPORTING i_data TYPE  any
                                       RETURNING value(et_fieldcat) TYPE lvc_t_fcat.
ENDCLASS.                    "lcl_alv_utilities DEFINITION


START-OF-SELECTION.
  WRITE '.'.

  SELECT * UP TO 100 ROWS
    INTO TABLE gt_data
*    FROM mara JOIN marc ON mara~matnr = marc~matnr.
    FROM t005 JOIN t005t ON t005~land1 = t005t~land1.

  CREATE OBJECT go_grid
    EXPORTING
      i_parent = cl_gui_container=&gt;screen0.
  gt_fieldcat = lcl_alv_utilities=&gt;create_fieldcat_lvc( gt_data ).
  go_grid-&gt;set_table_for_first_display( CHANGING
                                          it_outtab       = gt_data
                                          it_fieldcatalog = gt_fieldcat ).

*----------------------------------------------------------------------*
*       CLASS lcl_alv_utilities IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_alv_utilities IMPLEMENTATION.

  METHOD create_fieldcat_lvc.

    FIELD-SYMBOLS: &lt;lt_data&gt; TYPE ANY TABLE,
                   &lt;ls_line&gt; TYPE any,
                   &lt;ls_dref&gt; TYPE any.

    DATA lr_dref                 TYPE REF TO data.
    data lo_descr                TYPE REF TO cl_abap_typedescr.
    data lo_structdescr          TYPE REF TO cl_abap_structdescr.
    DATA lt_components           TYPE cl_abap_structdescr=&gt;component_table.
    FIELD-SYMBOLS &lt;ls_component&gt; LIKE LINE OF lt_components.

    lo_descr = cl_abap_typedescr=&gt;describe_by_data( i_data ).

    CASE lo_descr-&gt;kind.

      WHEN cl_abap_typedescr=&gt;kind_elem.                   
" Special case.  We see this when we have something like 
"... type standard table of syucomm.
* Tried various things but Grid won't show anything - 
" no matter what I try to provide a faked fieldcat
        RAISE EXCEPTION TYPE lcx_general_exceptions.       " Not foreseen yet

      WHEN cl_abap_typedescr=&gt;kind_struct.                 
        " Structure is fine --&gt; create fieldcat from this
        et_fieldcat = create_fieldcat_line( i_data ).

      WHEN cl_abap_typedescr=&gt;kind_table.                  
        " Table --&gt; restart with linetype of table
        ASSIGN i_data TO &lt;lt_data&gt;.
        CREATE DATA lr_dref LIKE LINE OF &lt;lt_data&gt;.
        ASSIGN lr_dref-&gt;* TO &lt;ls_line&gt;.
        et_fieldcat = create_fieldcat_lvc( &lt;ls_line&gt; ).

      WHEN cl_abap_typedescr=&gt;kind_ref.                    
        " Reference --&gt; restart with dereferenced value
        ASSIGN i_data-&gt;* TO &lt;ls_dref&gt;.
        et_fieldcat = create_fieldcat_lvc( &lt;ls_dref&gt; ).

*    when cl_abap_typedescr=&gt;KIND_CLASS.
*    when cl_abap_typedescr=&gt;KIND_INTF  .
      WHEN OTHERS.
        BREAK-POINT.  " Ich will das vorher sehen
        RAISE EXCEPTION TYPE lcx_general_exceptions.       " Not foreseen yet

    ENDCASE.

  ENDMETHOD.                                               "create_fieldcat_lvc


  METHOD create_fieldcat_line.

    DATA lr_dref               TYPE REF TO data.
    data lo_salv               TYPE REF TO cl_salv_table.
    data lo_salv_columns_table TYPE REF TO cl_salv_columns_table.
    data lo_salv_aggregations  TYPE REF TO cl_salv_aggregations.
    data lv_help_id            TYPE string.

    FIELD-SYMBOLS &lt;ls_fc&gt;      LIKE LINE OF et_fieldcat.
    FIELD-SYMBOLS &lt;lv_field&gt;   TYPE any.

    FIELD-SYMBOLS &lt;lt_data&gt;    TYPE STANDARD TABLE.

*--------------------------------------------------------------------*
* Create standard table of input
*--------------------------------------------------------------------*
    CREATE DATA lr_dref LIKE STANDARD TABLE OF i_data.
    ASSIGN lr_dref-&gt;* TO &lt;lt_data&gt;.
    TRY.
        cl_salv_table=&gt;factory( IMPORTING
                                  r_salv_table   = lo_salv
                                CHANGING
                                  t_table        = &lt;lt_data&gt; ).
        lo_salv_columns_table = lo_salv-&gt;get_columns( ).
        lo_salv_aggregations  = lo_salv-&gt;get_aggregations( ).

        et_fieldcat = cl_salv_controller_metadata=&gt;get_lvc_fieldcatalog(
                            r_columns      = lo_salv_columns_table
                            r_aggregations = lo_salv_aggregations ).
*--------------------------------------------------------------------*
* Internal fields w/o descriptions --&gt; set fieldname into header line
*--------------------------------------------------------------------*
        LOOP AT et_fieldcat ASSIGNING &lt;ls_fc&gt; WHERE scrtext_s = space
                                                AND scrtext_m = space
                                                AND scrtext_l = space.
          &lt;ls_fc&gt;-scrtext_m = &lt;ls_fc&gt;-fieldname.
        ENDLOOP.

*--------------------------------------------------------------------*
* Add F1 and F4-Help
* Idea from http://wiki.scn.sap.com/wiki/display/Snippets/ALV+fieldcatalog+-+create+for+ANY+table
*--------------------------------------------------------------------*
        LOOP AT et_fieldcat ASSIGNING &lt;ls_fc&gt;.

          ASSIGN COMPONENT &lt;ls_fc&gt;-fieldname OF STRUCTURE i_data TO &lt;lv_field&gt;.
          CHECK sy-subrc = 0.
          &lt;ls_fc&gt;-style     = gv_style.
          ADD 1 TO gv_style.

        TRY.
          CLEAR lv_help_id.
          DESCRIBE FIELD &lt;lv_field&gt; HELP-ID lv_help_id.
          IF lv_help_id CA '-'.
            SPLIT lv_help_id AT '-' INTO &lt;ls_fc&gt;-ref_table &lt;ls_fc&gt;-ref_field.
          ENDIF.
          CATCH cx_root.
        ENDTRY.

        ENDLOOP.

      CATCH cx_salv_msg .
    ENDTRY.

  ENDMETHOD.                                               "create_fieldcat_line
ENDCLASS.                    "lcl_alv_utilities IMPLEMENTATION</pre>
<p>Der Beitrag <a href="/blog/flexible-erzeugung-des-feldkataloges/">Flexible Erzeugung des Feldkataloges</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Interne Tabelle zur Laufzeit generieren</title>
		<link>/blog/interne-tabelle-zur-laufzeit-generieren/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 23 Aug 2007 13:27:37 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[create_dynamic_table]]></category>
		<category><![CDATA[dynamische Tabelle]]></category>
		<category><![CDATA[interne Tabelle]]></category>
		<category><![CDATA[Generierung]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[feldkatalog]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=426</guid>

					<description><![CDATA[<p>Manchmal ist es notwendig und sinnvoll, eine interne Tabelle erst zur Laufzeit zu generieren. Wenn beispielsweise Berichtsdaten aus verschiedenen Jahren gegliedert ausgegeben werden sollen und f&#252;r jedes Jahr eine eigene Spalte ben&#246;tigt wird. </p>
<p>Der Beitrag <a href="/blog/interne-tabelle-zur-laufzeit-generieren/">Interne Tabelle zur Laufzeit generieren</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Manchmal ist es notwendig und sinnvoll, eine interne Tabelle erst zur Laufzeit zu generieren. Wenn beispielsweise Berichtsdaten aus verschiedenen Jahren gegliedert ausgegeben werden sollen und fÃ¼r jedes Jahr eine eigene Spalte benÃ¶tigt wird.</p>
<p>Sicherlich kann man eine bestimmte Anzahl von Spalten vorsehen und nicht benÃ¶tigte Spalten bei der Ausgabe ausblenden&#8230; Eleganter ist jedoch die Verwendung der Methode<span class="Apple-converted-space">Â </span><span style="color: #fb2412;"><strong>cl_alv_table_create=&gt;create_dynamic_table</strong></span>.</p>
<p>Mit ihre kann man anhand eines Feldkataloges eine interne Tabelle aufbauen:</p>
<pre class="lang:abap decode:true sap1 ">CALL METHOD cl_alv_table_create=&gt;create_dynamic_tableÂ 
Â Â Â Â  EXPORTINGÂ 
Â Â Â Â Â Â Â  it_fieldcatalogÂ Â Â Â Â Â Â Â Â Â Â = gt_fieldcatalogÂ 
Â Â Â Â  IMPORTINGÂ 
Â Â Â Â Â Â Â  ep_tableÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  = gz_tableÂ 
Â Â Â Â  EXCEPTIONSÂ 
Â Â Â Â Â Â Â  generate_subpool_dir_full = 1Â 
Â Â Â Â Â Â Â  OTHERS                    = 2.</pre>
<p>Die Bearbeitung der Tabelle ist hinterher allerdings nicht mehr ganz einfach, da nicht mit Spaltennamen gearbeitet werden kann, denn die dynamisch zu generierenden Tabellenspalten kennt der Compiler ja noch nicht.</p>
<p>Es muss hier mit Feldsymbolen gearbeitet werden. Die einzelnen Felder des Arbeitsbereiches werden Ã¼ber den Index (ASSIGN COMPONENT &lt;index&gt;&#8230;) des Feldes oder Ã¼ber den Namen (ASSIGN COMPONENT &#8216;fieldname&#8217;&#8230;) angesprochen.</p>
<h2 class="head1">Beispiel-Coding</h2>
<pre class="lang:abap decode:true sap1">*** Feldkatalog
DATA gt_fcatÂ Â Â Â Â Â Â Â Â Â Â Â  TYPE lvc_t_fcat.
*** Datenreferenz fÃ¼r interne Tabelle
DATA gz_tableÂ Â Â Â Â Â Â Â Â Â Â  TYPE REF TO data.
*** Feld-Symbole fÃ¼r:
*&gt;&gt; Zeile des Feldkatalogs
FIELD-SYMBOLS &lt;fcat&gt;Â Â Â Â  TYPE lvc_s_fcat.
*&gt;&gt; interne Tabelle
FIELD-SYMBOLS &lt;table&gt;Â Â Â  TYPE STANDARD TABLE.
*&gt;&gt; Arbeitsbereich der internen Tabelle
FIELD-SYMBOLS &lt;workarea&gt; TYPE ANY.
*&gt;&gt; Feld des Arbeitsbereiches
FIELD-SYMBOLS &lt;field&gt;Â Â Â  TYPE ANY.

*** Feldkatalog der internen Tabelle aufbauen:
*1* VBELN
APPEND INITIAL LINE TO gt_fcat ASSIGNING &lt;fcat&gt;.
&lt;fcat&gt;-fieldname = 'VBELN'.
&lt;fcat&gt;-tabnameÂ Â  = 'GZ_TABLE'.
&lt;fcat&gt;-ref_field = 'VBELN'.
&lt;fcat&gt;-ref_table = 'VBAK'.

*2* ERDAT
APPEND INITIAL LINE TO gt_fcat ASSIGNING &lt;fcat&gt;.
&lt;fcat&gt;-fieldname = 'ERDAT'.
&lt;fcat&gt;-tabnameÂ Â  = 'GZ_TABLE'.
&lt;fcat&gt;-ref_field = 'ERDAT'.
&lt;fcat&gt;-ref_table = 'VBAK'.

START-OF-SELECTION.
*** Interne Tabelle aus Feldkatalog generieren
Â  CALL METHOD cl_alv_table_create=&gt;create_dynamic_table
Â Â Â  EXPORTING
Â Â Â Â Â  it_fieldcatalogÂ Â Â Â Â Â Â Â Â Â  = gt_fcat
Â Â Â  IMPORTING
Â Â Â Â Â  ep_tableÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  = gz_table
Â Â Â  EXCEPTIONS
Â Â Â Â Â  generate_subpool_dir_full = 1
Â Â Â Â Â  OTHERSÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  = 2.

*** Datenreferenz dem Feldsymbol &lt;TABLE&gt; zuweisen
Â  ASSIGN gz_table-&gt;* TO &lt;table&gt;.

*** Testdaten in interne Tabelle einfÃ¼gen
Â  APPEND '000001234520070107' TO &lt;table&gt;.
Â  APPEND '112233445520050608' TO &lt;table&gt;.

*** Testdaten auslesen und als Liste ausgeben:
Â  LOOPÂ  AT &lt;table&gt; ASSIGNING &lt;workarea&gt;.

*** Neue Zeile fÃ¼r jeden Tabelleneintrag
Â Â Â  NEW-LINE.

*** Felder des Arbeitsbereiches ausgeben
Â Â Â  DO.
Â Â Â Â Â  ASSIGN COMPONENT sy-index OF STRUCTURE &lt;workarea&gt; TO &lt;field&gt;.
Â Â Â Â Â  IF sy-subrc &gt; 0.
*** Kein Feld mehr vorhanden
Â Â Â Â Â Â Â  EXIT. "from do
Â Â Â Â Â  ELSE.
*** Feldwert ausgeben
Â Â Â Â Â Â Â  WRITE: &lt;field&gt; COLOR COL_TOTAL.
Â Â Â Â Â  ENDIF.
Â Â Â  ENDDO.

Â  ENDLOOP.</pre>
<p>Der Beitrag <a href="/blog/interne-tabelle-zur-laufzeit-generieren/">Interne Tabelle zur Laufzeit generieren</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
