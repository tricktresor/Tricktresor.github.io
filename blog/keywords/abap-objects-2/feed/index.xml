<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>ABAP-Objects Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/abap-objects-2/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Thu, 04 Apr 2019 10:51:39 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>ABAP-Objects Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>SAP-Demoprogramme</title>
		<link>/blog/sap-demoprogramme/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 31 May 2016 08:26:29 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Workshop]]></category>
		<category><![CDATA[Dynamische Dokumente]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[Demo-Programme]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Container]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=431</guid>

					<description><![CDATA[<p>Demoprogramme der SAP. CALENDAR_CONTROL CONTEXT_MENU_DYNPR CONTEXT_MENU_LIST CUSTOM_CONTROL DIALOGBOX_CONTROL DOCKING_CONTROL DRAG_DROP_EDIT_TREE DRAG_DROP_TREE_MULTI  DROPDOWN_LISTBOX HTML_VIEWER HTML_VIEWER_WORKSHOP PICTURE_CONTROL SAP_LIST_TREE SPLITTER_CONTROL SUBSCREEN TABLE_CONTROL TOOLBAR_DIALOGBOX</p>
<p>Der Beitrag <a href="/blog/sap-demoprogramme/">SAP-Demoprogramme</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Demoprogramme der SAP. CALENDAR_CONTROL CONTEXT_MENU_DYNPR CONTEXT_MENU_LIST CUSTOM_CONTROL DIALOGBOX_CONTROL DOCKING_CONTROL DRAG_DROP_EDIT_TREE DRAG_DROP_TREE_MULTI DROPDOWN_LISTBOX HTML_VIEWER HTML_VIEWER_WORKSHOP PICTURE_CONTROL SAP_LIST_TREE SPLITTER_CONTROL SUBSCREEN TABLE_CONTROL TOOLBAR_DIALOGBOX</p>
<p>[notice type=&#8217;info&#8217;]Viele DEMO-Programme finden sich im Paket SLIS!</p>
<p>Demoprogramme beginnen häufig mit DEMO* oder RSDEMO* [/notice]</p>
<h2 class="head1">Toolbar</h2>
<ul>
<li>
<div class="text1">RSDEMO_TOOLBAR_DIALOGBOX</div>
</li>
<li>SAPTOOLBAR_IN_SPLITTER</li>
<li>SAPTOOLBAR_DEMO1</li>
<li>BCALV_GRID_07</li>
</ul>
<h2 class="head1">ALV-Grid</h2>
<ul>
<li>BCALV*</li>
<li><span style="color: #fb2412;"><strong>BCALV_VERIFY_DATATYPES</strong></span><br />
Das Mega-Test-Programm für jegliche Optionen des ALV-Grid</li>
<li><span style="color: #fb2412;"><strong>BCALV_TEST_SUITE</strong><br />
</span>Viele Funktionen in einem Programm</li>
</ul>
<h2 class="head1">ALV-Tree</h2>
<ul>
<li>SAPSIMPLE_TREE_CONTROL_DEMO</li>
<li>R_ALV_TREE_TOOLBAR_MANAGER</li>
<li>BCALV_GRID_DND_TREE</li>
<li>BCALV_GRID_DND_TREE_SIMPLE</li>
<li>BCALV_TEST_COLUMN_TREE</li>
<li>BCALV_TEST_SIMPLE_TREE</li>
<li>BCALV_TREE_01</li>
<li>BCALV_TREE_02</li>
<li>BCALV_TREE_03</li>
<li>BCALV_TREE_04</li>
<li>BCALV_TREE_05</li>
<li>BCALV_TREE_06</li>
<li>BCALV_TREE_DEMO</li>
<li>BCALV_TREE_DND</li>
<li>BCALV_TREE_DND_MULTIPLE</li>
<li>BCALV_TREE_EVENT_RECEIVER</li>
<li>BCALV_TREE_EVENT_RECEIVER01</li>
<li>BCALV_TREE_ITEMLAYOUT</li>
<li>BCALV_TREE_MOVE_NODE_TEST</li>
<li>BCALV_TREE_SIMPLE_DEMO</li>
<li>Doku:<br />
<a href="http://help.sap.com/printdocu/core/print46b/de/data/de/pdf/BCCITREE.pdf" target="_blank" rel="noopener noreferrer">http://help.sap.com/printdocu/core/print46b/de/<br />
data/de/pdf/BCCITREE.pdf</a></li>
</ul>
<h2 class="head1">Dialogbox</h2>
<ul>
<li>
<div class="text1">RSDEMO_DIALOGBOX_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_TOOLBAR_DIALOGBOX</div>
</li>
</ul>
<h2 class="head1">Drawer (Vertikales Tabstrip)</h2>
<ul>
<li>
<div class="text1">RSBPT_CONTAINER_BAR_3</div>
</li>
</ul>
<h2 class="head1">Context Menu</h2>
<ul>
<li>RSDEMO_CONTEXT_MENU_DYNPR</li>
<li>
<div class="text1">RSDEMO_CONTEXT_MENU_LIST</div>
</li>
<li>
<div class="text1">R_ALV_TREE_TOOLBAR_MANAGER</div>
</li>
</ul>
<h2 class="head1">Grafik</h2>
<ul>
<li>
<div class="text1">GRAPHICS_GUI_CE_DEMO</div>
</li>
</ul>
<h2 class="head1">Drag and Drop</h2>
<ul>
<li>
<div class="text1">RSDEMO_DRAG_DROP_EDIT_TREE</div>
</li>
<li>
<div class="text1">RSDEMO_DRAG_DROP_TREE_MULTI</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_DRAGDROP</div>
</li>
<li>
<div class="text1">BCALV_GRID_DND_TREE</div>
</li>
<li>
<div class="text1">BCALV_GRID_DND_TREE_SIMPLE</div>
</li>
<li>
<div class="text1">SAPCALENDAR_DRAG_DROP</div>
</li>
<li>
<div class="text1">BCALV_TEST_DRAG_DROP_02</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_EVENTS</div>
</li>
</ul>
<h2 class="head1">Textedit</h2>
<ul>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_1</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_3</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_DRAGDROP</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_1</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_2</div>
</li>
<li>
<div class="text1"><span style="line-height: 1.5em;">SAPTEXTEDIT_TEST_EVENTS</span></div>
</li>
<li>SAPBTFEDITOR_DEMO Demonstriert die Verwendung des BTF-Editors</li>
<li>SAPBTFFRAMEWORK_DEMO</li>
</ul>
<h2 class="head2">HTML</h2>
<ul>
<li>
<div class="text1">SAPHTML_SCRIPT_DEMO</div>
<div class="text1"></div>
</li>
<li>
<div class="text1">RSDEMO_HTML_VIEWER</div>
</li>
<li>
<div class="text1">RSDEMO_HTML_VIEWER_WORKSHOP</div>
</li>
<li>RSTXHTML</li>
<li>SAPHTML_DEMO_CN</li>
<li>SAPHTML_DEMO1</li>
<li>SAPHTML_EVENTS_DEMO</li>
<li>SAPHTML_LONGTEXT_DEMO</li>
<li>SAPHTML_R3HTTP_DEMO</li>
<li>SAPHTML_R3HTTP_XML</li>
<li>SAPHTML_SCRIPT_DEMO</li>
<li>SAPHTML_SET_GUI_CHARSET</li>
<li>SAPHTML_SSO_DEMO</li>
<li>SAPHTML_UI_DEMO</li>
<li>SAPHTML_USE_DEFAULT_CHARSET</li>
<li>SAPHTMLPAGEEDITOR_DEMO1</li>
</ul>
<h2 class="head1">Dynamische Dokumente/ ABAP-Renderer</h2>
<table style="height: 115px;" width="665">
<tbody>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_FLOW</span></li>
</ul>
</td>
<td>Demonstriert die Verwendung der Element FLOW des Gestaltungsobjekts</td>
</tr>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID</span></li>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID_1</span></li>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID_2</span></li>
</ul>
</td>
<td style="vertical-align: top;">Demonstriert die Verwendung der Element GRID des Gestaltungsobjekts</td>
</tr>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_TEST</span></li>
</ul>
</td>
<td> Testprogramm für das ALV Gestaltungsobjekt</td>
</tr>
</tbody>
</table>
<h2 class="head1">Mail</h2>
<ul>
<li>
<div class="text1">RSSOHTMLGIF (Sehr schönen Beispiel, um eine HTML Seite mit eingebundenen Bildern zu versenden)</div>
</li>
</ul>
<h2 class="head1">Calendar</h2>
<ul>
<li>RSDEMO_CALENDAR_CONTROL</li>
<li>SAPCALENDAR_DRAG_DROP</li>
</ul>
<h2 class="head1">Sonstige</h2>
<ul>
<li>
<div class="text1">RSDEMO_CUSTOM_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_EVENT_ON_FIELD</div>
</li>
<li>
<div class="text1">RSDEMO_DOCKING_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_DROPDOWN_LISTBOX</div>
</li>
<li>
<div class="text1">RSDEMO_EASY_SPLITTER_CONTROL</div>
</li>
<li>RSDEMO_PICTURE_CONTROL</li>
<li>
<div class="text1">RSDEMO_SAP_LIST_TREE</div>
</li>
<li>
<div class="text1">RSDEMO_SPLITTER_CONTROL</div>
</li>
<li>TEST_FRONTEND_SERVICES</li>
<li>DEMO_COLORSEL</li>
</ul>
<h2 class="head1">Old-Fashioned</h2>
<ul>
<li>
<div class="text1">RSDEMO_SUBSCREEN</div>
</li>
<li>
<div class="text1">RSDEMO_TABLE_CONTROL</div>
</li>
<li>RSDEOM02 (Table Control)</li>
<li>DEMO_LIST_FORMAT_COLOR_1 Farben in Listen</li>
<li>DEMO_LIST_FORMAT_COLOR_2 Verwendung von Farben in Listen</li>
</ul>
<h2>Grafik</h2>
<p><a href="https://tricktresor.com/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg"><img fetchpriority="high" decoding="async" class="alignnone size-full wp-image-654991" src="https://tricktresor.com/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg" alt="2016-05-31_10-13-35" width="615" height="477" srcset="/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg 615w, /wp-content/uploads/2007/08/2016-05-31_10-13-35-300x233.jpg 300w" sizes="(max-width: 615px) 100vw, 615px" /></a></p>
<p>Report RGRAPALL listet die folgenden Grafikbeispiele auf:</p>
<ul>
<li>BARCBO01 Demoprogramm: Balkenplan im Anzeigemodus</li>
<li>BARCBO02 Demoprogramm: Balkenplan im Pflegemodus</li>
<li>BARCBO03 Demoprogramm: Balkenplan im Pflegemodus (Plantafel)</li>
<li>BARCBO04 Demoprogramm: Gegenseitiges Aktualisieren von Balkenplan und Dynpro</li>
<li>BARCOCX1 Demoprogramm: Balkenplancontrol</li>
<li>DEMO_GFW_PRES_SHOW Anwendungsbeispiel für den Funktionsbaustein GFW_PRES_SHOW</li>
<li>DEMO_GFW_PRES_SHOW_MULT Anwendungsbeispiel für den Funktionsbaustein GFW_PRES_SHOW_MULT</li>
<li>GFW_DEMO_HIER1 GFW: Demonstration einer einfachen Hierarchiegrafik mit SAP-Tree</li>
<li>GFW_DEMO_HIER2 GFW: Demonstration einer Hierarchiegrafik (4 in Splitter, Drag&amp;Drop)</li>
<li>GFW_DEMO_HIER3 GFW: Demonstration einer Hierarchie-/Präsentationsgrafik (Drag&amp;Drop)</li>
<li>GFW_DEMO_PRES GFW: Demonstration von GFW mit sichtbarem Datencontainer</li>
<li>GFW_DEMO_PRES1 GFW: Demonstration von Präsentationsgrafiken mit GFW</li>
<li>GFW_PROG_BAR GFW: Programmierbeispiel für ein Balkendiagramm</li>
<li>GFW_PROG_COLUMNS_AND_TI GFW: Programmierbeispiel für ein Balkendiagramm mit Zeitachse</li>
<li>GFW_PROG_HISTOGRAM GFW: Programmierbeispiel für ein Histogramm</li>
<li>GFW_PROG_LABELS GFW: Programmierbeispiel für dieselben Beschriftungen, lange Beschr.</li>
<li>GFW_PROG_MTA GFW: Programmierbeispiel für eine Meilensteintrendanalyse</li>
<li>GFW_PROG_PIE GFW: Programmierbeispiel für ein Kreisdiagramm</li>
<li>GFW_PROG_POINT_WITH_LAB GFW: Programmierbeispiel für Diagramm mit gekennzeichnetem Punkt</li>
<li>GFW_PROG_TIME_AXIS GFW: Programmierbeispiel für ein Punktdiagramm mit Zeitachse</li>
<li>GFW_PROG_TUTORIAL GFW: Programmierbeispiel für eine einfache PräsGrafik = GFW-Tutorial</li>
<li>GFW_PROG_SPEEDOMETER GFW: Programmierbeispiel für ein Balkendiagramm<br />
<a href="https://tricktresor.com/wp-content/uploads/2016/05/SNAG-0001.png"><img decoding="async" class="alignnone size-full wp-image-1018035" src="https://tricktresor.com/wp-content/uploads/2016/05/SNAG-0001.png" alt="" width="531" height="417" srcset="/wp-content/uploads/2016/05/SNAG-0001.png 531w, /wp-content/uploads/2016/05/SNAG-0001-300x236.png 300w, /wp-content/uploads/2016/05/SNAG-0001-117x91.png 117w" sizes="(max-width: 531px) 100vw, 531px" /></a></li>
<li>GRBMAT_1 Demoprogramm: Pushbuttongrafik</li>
<li>GRBMAT_2 Demoprogramm: Pushbuttongrafik / 2</li>
<li>GRBUSG_1 Demoprogramm: SAP-Präsentationsgrafik 2D</li>
<li>GRBUSG_2 Demoprogramm: SAP-Präsentationsgrafik 3D</li>
<li>GRBUSG_3 Demoprogramm: Präsentationsgrafik Umsatzvergleich</li>
<li>GRBUSG_4 Demoprogramm: Präsentationsgrafik 2D &#8211; 3D &#8211; 4D</li>
<li>GRCNETC1 Demoprogramm: Ansteuern des Clustereditors im Anzeigemodus</li>
<li>GRCNETC2 Demoprogramm: Ansteuern des Clustereditors (erweiterte Version)</li>
<li>GRGANT_2 Demoprogramm: Gantt-Diagramm / 2</li>
<li>GRHIER_1 Demoprogramm: Hierarchiegrafik</li>
<li>GRHIER_2 Demoprogramm: Hierarchie</li>
<li>GRHPGL_1 Demoprogramm: HPGL-Display</li>
<li>GRPORT_0 Demonstration Portfolio-Grafik</li>
<li>GRSTAT_1 Demoprogramm: Trigonometrische Funktionen mit der Statistikgrafik</li>
<li>GRSTAT_2 Demoprogramm: Funktionsdarstellung mit der Statistikgrafik</li>
<li>HIER_BO1 Demoprogramm: Hierarchiegrafik im Anzeigemodus</li>
<li>HIER_BO2 Demoprogramm: Hierarchiegrafik im Pflegemodus</li>
<li>NETZOCX1 Demoprogramm: Netzplancontrol</li>
<li>NETZOCX2 Demoprogramm: Netzplancontrol mit Callbackverarbeitung</li>
<li>NETZ_BO1 Demoprogramm: Netzplangrafik im Anzeigemodus</li>
<li>NETZ_BO2 Demoprogramm: Netzplangrafik im Pflegemodus</li>
<li>NETZ_BO3 Demoprogramm: Netzplangrafik im Pflegemodus (erweiterte Form)</li>
</ul>
<p>Der Beitrag <a href="/blog/sap-demoprogramme/">SAP-Demoprogramme</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Slider (2)</title>
		<link>/blog/slider-2/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 08 Mar 2012 14:51:23 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[set property]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[shellstyle]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[cl_gui_custom_container]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[cl_gui_textedit]]></category>
		<category><![CDATA[Sonstiges]]></category>
		<category><![CDATA[cl_gui_control]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[register events]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[OCX]]></category>
		<category><![CDATA[class definition]]></category>
		<category><![CDATA[class implementation]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=638</guid>

					<description><![CDATA[<p>Noch eine Variante des Sliders. Diesmal mithilfe einer Windows-OCX-Bibliothek. Der Slider hat keine Beschriftung, hat aber den Vorteil, dass auf eine Wert&#228;nderung sofort reagiert werden kann.</p>
<p>Der Beitrag <a href="/blog/slider-2/">Slider (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Noch eine Variante des Sliders. Diesmal mithilfe einer Windows-OCX-Bibliothek. Der Slider hat keine Beschriftung, hat aber den Vorteil, dass auf eine Wertänderung sofort reagiert werden kann.</p>
<h2 class="head1">Dynpro</h2>
<p>Sie müssen das Dynpro 9000 anlegen mit folgenden &#8220;Custom Containern&#8221;:</p>
<ul>
<li>CONTAINER_TEXT</li>
<li>SLIDER_TOP</li>
<li>SLIDER_LEFT</li>
</ul>
<p><code> +----------------------------------------+<br />
|  SLIDER_TOP                            |<br />
+----+----------------------------------------+<br />
|    |                                        |<br />
| SL |  CONTAINER_TEXT                        |<br />
| ID |                                        |<br />
| ER |                                        |<br />
| _  |                                        |<br />
| LE |                                        |<br />
| FT |                                        |<br />
|    |                                        |<br />
|    |                                        |<br />
+----+----------------------------------------+</code></p>
<h2 class="head1">Screenshot</h2>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/slider2.jpg" /><br />
So sieht der Slider aus</td>
</tr>
</tbody>
</table>
<h2 class="head1">Coding</h2>
<pre>REPORT.

DATA: gcl_text TYPE REF TO cl_gui_textedit.

*----------------------------------------------------------------------*
* CLASS my_slider DEFINITION
*----------------------------------------------------------------------*
CLASS my_slider DEFINITION INHERITING FROM cl_gui_control.
PUBLIC SECTION.
METHODS: constructor
IMPORTING
value(parent) TYPE REF TO cl_gui_object
value(name) TYPE string OPTIONAL
value(style) TYPE i OPTIONAL
value(orientation) TYPE i
DEFAULT 0 " 1 = vertical
value(maximum) TYPE i
DEFAULT 10
value(event_while_move) TYPE flag
DEFAULT ' '
EXCEPTIONS error_cntl_create
gui_type_not_supported,
dispatch REDEFINITION.
EVENTS: on_change EXPORTING value(slider_position) TYPE i.

DATA: event_while_move TYPE flag.

PRIVATE SECTION.
METHODS: register_events.

ENDCLASS. "my_slider DEFINITION

*----------------------------------------------------------------------*
* CLASS LCL_eventreceiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_eventreceiver DEFINITION.
PUBLIC SECTION.
CLASS-METHODS: handle_on_change FOR EVENT on_change
OF my_slider
IMPORTING sender
slider_position.
ENDCLASS. "LCL_eventreceiver DEFINITION

END-OF-SELECTION.
PERFORM create_objects.
CALL SCREEN 9000.

*&amp;---------------------------------------------------------------------*
*&amp; Form CREATE_OBJECTS
*&amp;---------------------------------------------------------------------*
FORM create_objects.

DATA repid TYPE syrepid.
DATA dynnr TYPE sydynnr.
DATA cl_container TYPE REF TO cl_gui_custom_container.
DATA cl_container2 TYPE REF TO cl_gui_custom_container.

repid = sy-repid.
dynnr = '9000'.

CREATE OBJECT cl_container
EXPORTING
container_name = 'CONTAINER_TEXT'
repid = repid
dynnr = dynnr.
CREATE OBJECT gcl_text
EXPORTING
parent = cl_container.

DATA: cl_slider TYPE REF TO my_slider.

CREATE OBJECT cl_container
EXPORTING
container_name = 'SLIDER_TOP'
repid = repid
dynnr = dynnr.
CREATE OBJECT cl_slider
EXPORTING
parent = cl_container
maximum = 20
event_while_move = 'X'.
SET HANDLER lcl_eventreceiver=&gt;handle_on_change FOR cl_slider.

CREATE OBJECT cl_container
EXPORTING
container_name = 'SLIDER_LEFT'
repid = repid
dynnr = dynnr.
CREATE OBJECT cl_slider
EXPORTING
parent = cl_container
maximum = 5
orientation = 1.
SET HANDLER lcl_eventreceiver=&gt;handle_on_change FOR cl_slider.

ENDFORM. " CREATE_OBJECTS

*----------------------------------------------------------------------*
* CLASS my_slider IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS my_slider IMPLEMENTATION.

METHOD dispatch.

DATA: value TYPE i.

GET PROPERTY OF me-&gt;h_control-obj 'Value' = value.
RAISE EVENT on_change EXPORTING slider_position = value.

ENDMETHOD. "dispatch

METHOD register_events.
DATA: ex_event TYPE cntl_event.
DATA: events_ex TYPE cntl_events. " table

IF me-&gt;event_while_move = 'X'.
ex_event-eventid = 1."Jede Bewegung
ELSE.
ex_event-eventid = 2."Nur am ende
ENDIF.
ex_event-is_shellevent = ' '.
ex_event-is_systemevent = 'X'.

APPEND ex_event TO events_ex.
CALL METHOD me-&gt;set_registered_events_ex
EXPORTING
eventtab = events_ex.

ENDMETHOD. "register_events

METHOD constructor.
DATA prog_id(80).

IF parent IS INITIAL.
RAISE error_cntl_create.
ENDIF.

CLASS cl_gui_cfw DEFINITION LOAD.

* assign prog_id to get the frontend specific control
IF NOT activex IS INITIAL.
prog_id = 'MSComctlLib.Slider'.
ELSEIF NOT javabean IS INITIAL.
RAISE gui_type_not_supported.
ENDIF.

IF prog_id IS INITIAL.
RAISE gui_type_not_supported.
ENDIF.

* Set the window styles of the control when style parameter was not
* set with constructor call.
* For more information on the styles see WIN32 SDK
IF style IS INITIAL.
* otherwise the control would be invisible and the mistake would be
* hard to find
style = cl_gui_control=&gt;ws_visible
+ cl_gui_control=&gt;ws_child
+ cl_gui_control=&gt;ws_clipsiblings.

ENDIF.

* Create the control
CALL METHOD super-&gt;constructor
EXPORTING
clsid = prog_id
shellstyle = style
parent = parent
lifetime = lifetime
name = name
EXCEPTIONS
OTHERS = 1.

IF sy-subrc &lt;&gt; 0.
RAISE error_cntl_create.
ENDIF.

me-&gt;event_while_move = event_while_move.

* Slidereigenschaften
SET PROPERTY OF me-&gt;h_control-obj 'Max' = maximum.
SET PROPERTY OF me-&gt;h_control-obj 'Orientation' = orientation.
SET PROPERTY OF me-&gt;h_control-obj 'Text' = 'Tricktresor-Slider'.

* register instance at framework
CALL METHOD cl_gui_cfw=&gt;subscribe
EXPORTING
shellid = h_control-shellid
ref = me
EXCEPTIONS
OTHERS = 1.

IF sy-subrc &lt;&gt; 0.
RAISE error_cntl_create.
ENDIF.
me-&gt;register_events( ).
ENDMETHOD. "constructor

ENDCLASS. "my_slider IMPLEMENTATION

*----------------------------------------------------------------------*
* CLASS LCL_eventreceiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_eventreceiver IMPLEMENTATION.
METHOD handle_on_change.

DATA text TYPE string.
DATA: slider TYPE REF TO my_slider.

slider ?= sender.

WRITE slider_position TO sy-lisel LEFT-JUSTIFIED.
IF slider-&gt;event_while_move = 'X'.
CONCATENATE 'X-Position: Moving to' sy-lisel
INTO text SEPARATED BY space.
ELSE.
CONCATENATE 'Y-Position: End of Move:' sy-lisel
INTO text SEPARATED BY space.
ENDIF.

gcl_text-&gt;set_textstream( EXPORTING text = text ).
ENDMETHOD. "handle_on_change
ENDCLASS. "LCL_eventreceiver DEFINITION</pre>
<p>Der Beitrag <a href="/blog/slider-2/">Slider (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Drag&#8217;n&#8217;Drop mit Datei</title>
		<link>/blog/dragndrop-mit-datei/</link>
					<comments>/blog/dragndrop-mit-datei/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 25 Nov 2011 17:01:49 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[cl_gui_docking_container]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[cl_gui_html_viewer]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[TextEditControl]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[docker]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=631</guid>

					<description><![CDATA[<p>In diesem Beispiel zeigen wir, wie Sie eine Datei aus dem Windows-Explorer auf ein SAP-Control ziehen k&#246;nnen und den Dateipfad sowie Dateinamen angezeigt bekommen. So l&#228;sst sich z.B. eine Anwendung programmieren, die Dateien per Drag'n'Drop entgegen nimmt und auf den Application server hoch l&#228;dt.</p>
<p>Der Beitrag <a href="/blog/dragndrop-mit-datei/">Drag&#8217;n&#8217;Drop mit Datei</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><a href="https://tricktresor.com/wp-content/uploads/2011/11/02_21_15_35_20.jpg"><img decoding="async" class="alignright size-medium wp-image-4505" alt="Drag and drop html" src="https://tricktresor.com/wp-content/uploads/2011/11/02_21_15_35_20-300x158.jpg" width="300" height="158" srcset="/wp-content/uploads/2011/11/02_21_15_35_20-300x158.jpg 300w, /wp-content/uploads/2011/11/02_21_15_35_20-624x330.jpg 624w, /wp-content/uploads/2011/11/02_21_15_35_20.jpg 625w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>In diesem Beispiel zeigen wir, wie Sie eine Datei aus dem Windows-Explorer auf ein SAP-Control ziehen können und den Dateipfad sowie Dateinamen angezeigt bekommen. So lässt sich z.B. eine Anwendung programmieren, die Dateien per Drag&#8217;n&#8217;Drop entgegen nimmt und auf den Application server hoch lädt.<br />
SAP-Controls und Drag&#8217;n&#8217;Drop</p>
<p>SAP-Controls können normalerweise nur DragDropObjekte aufnehmen, die auch von einem SAP-Control erzeugt wurden.</p>
<p>Ausnahmen sind der ABAP-Editor und das TextEditControl: Sie können eine Textdatei auf das Control ziehen und der Inhalt wird im Control dargestellt.</p>
<p>Leider feuert kein Control ein Event &#8220;DropComplete&#8221;, auf das man reagieren könnte, geschweige denn, dass man schon bei &#8220;onDrop&#8221; entscheiden könnte, ob man dieses Objekt haben möchte oder nicht.</p>
<p>Eine Ausnahme bildet das HTML-Control, das ja den Internet Explorer verwendet um HTML- oder PDF-Dateien anzuzeigen.</p>
<p>Das Control CL_GUI_HTML_VIEWER erzeugt das Ereignis &#8220;NAVIGATE_COMPLETE&#8221;, sobald die &#8220;Navigation&#8221; abgeschlossen wurde. Eine Datei, die per Drag and Drop auf dieses Control gezogen wird, löst ebenfalls dieses Ereignis aus.</p>
<h2>Beschreibung</h2>
<p>Dieses Programm dockt das HTML-Control an das Selektionsbild an und zeigt die URL einer ge-drop-ten Datei an.</p>
<h2>Code</h2>
<pre>REPORT z_dock_drop.
*** Selection screen
PARAMETERS: p_url     TYPE string.
INITIALIZATION.
  PERFORM create_objects.

*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS:
      handle_navigate_complete
          FOR EVENT navigate_complete
          OF cl_gui_html_viewer
            IMPORTING url sender.
ENDCLASS.                    "lcl_event_receiver DEFINITION
*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver IMPLEMENTATION.

  METHOD handle_navigate_complete.
    p_url = url.
*    sender-&gt;go_back( ). "If object should not be displayed
  ENDMETHOD.                    "handle_sapevent
ENDCLASS.                    "lcl_event_receiver IMPLEMENTATION

*&amp;---------------------------------------------------------------------*
*&amp;      Form  CREATE_OBJECTS
*&amp;---------------------------------------------------------------------*
FORM create_objects.
*** Data
  DATA cl_docker         TYPE REF TO cl_gui_docking_container.
  DATA t_events        TYPE cntl_simple_events.
  DATA wa_event        LIKE LINE OF t_events.
  DATA event_receiver  TYPE REF TO lcl_event_receiver.
  DATA t_html          TYPE STANDARD TABLE OF text8192
                       WITH NON-UNIQUE DEFAULT KEY.
  DATA html            LIKE LINE OF t_html.
  DATA url             TYPE text1000.
  DATA cl_html         TYPE REF TO cl_gui_html_viewer.

*** create docker
  CREATE OBJECT cl_docker
    EXPORTING
      extension               = 300
      side                    = cl_gui_docking_container=&gt;dock_at_bottom
      no_autodef_progid_dynnr = 'X'.

*** create HTML
  CREATE OBJECT cl_html
    EXPORTING
      parent = cl_docker.

*** Register NAVIGATE_COMPLETE
  CALL METHOD cl_html-&gt;get_registered_events
    IMPORTING
      events = t_events.
      wa_event-eventid    = cl_gui_html_viewer=&gt;m_id_navigate_complete.
      wa_event-appl_event = 'X'.
  READ TABLE t_events TRANSPORTING NO FIELDS
        WITH KEY eventid = wa_event-eventid.
  IF sy-subrc &lt;&gt; 0.
    APPEND wa_event TO t_events.
  ENDIF.
  CALL METHOD cl_html-&gt;set_registered_events
    EXPORTING
      events = t_events.
SET HANDLER lcl_event_receiver=&gt;handle_navigate_complete FOR cl_html.

*** Build HTML-Code
  CONCATENATE  '&lt;html&gt;'
               '&lt;head&gt;&lt;title&gt;Dropzone&lt;/title&gt;'
               '&lt;/head&gt;'
               '&lt;body bgcolor="#22FF22"&gt;'
               '&lt;p&gt;&lt;font size= 30&gt;hierher mit den Bildern!!&lt;/font&gt;&lt;/p&gt;'
               '&lt;/body&gt;'
               '&lt;/html&gt;'
          INTO html.
  APPEND html TO t_html.

*** load HTML
  CALL METHOD cl_html-&gt;load_data
    IMPORTING
      assigned_url = url
    CHANGING
      data_table   = t_html.

*** Show HTML page
  CALL METHOD cl_html-&gt;show_url
    EXPORTING
      url = url.
ENDFORM.                    " CREATE_OBJECTS</pre>
<p>Der Beitrag <a href="/blog/dragndrop-mit-datei/">Drag&#8217;n&#8217;Drop mit Datei</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/dragndrop-mit-datei/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Container-Rahmen</title>
		<link>/blog/container-rahmen/</link>
					<comments>/blog/container-rahmen/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 19 Aug 2011 17:17:36 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Docking-Container]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[Rahmen]]></category>
		<category><![CDATA[shellstyle]]></category>
		<category><![CDATA[docker]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[cl_gui_docking_container]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=616</guid>

					<description><![CDATA[<p>Ein Docking-Container hat normalerweise einen breiten Rahmen, damit dessen Gr&#246;&#223;e leicht ge&#228;ndert werden kann. Das ist aber nicht immer erw&#252;nscht... </p>
<p>Der Beitrag <a href="/blog/container-rahmen/">Container-Rahmen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ein Docking-Container hat normalerweise einen breiten Rahmen, damit dessen Größe leicht geändert werden kann. Das ist aber nicht immer erwünscht&#8230;</p>
<p class="head1">Durch Dick und Dünn</p>
<p>Bei CREATE OBJECT des Containers kann in der Regel der Parameter STYLE übergeben werden. Dieser wird intern auf Standarwerte gesetzt, wenn er nicht vom Aufrufer übergeben wird.</p>
<p>Mit diesem Aufruf können Sie einen Docking-Container mit einer dünnen Linie anstatt des dicken 3d-Rahmens erzeugen.</p>
<p class="head1">So sieht&#8217;s aus</p>
<p>So sieht der Rahmen normalerweise aus:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/abap/Bild565.jpg" /></p>
<p>So sieht er mit dünnem Rahmen aus:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/abap/Bild566.jpg" /></p>
<p>Dieser kann allerdings nicht mehr vom Anwender verschoben werden!!</p>
<p class="head1">Coding DÜNN</p>
<p class="sap1">DATA shellstyle TYPE i.</p>
<p>*** define Shellstyle<br />
shellstyle = cl_gui_container=&gt;ws_visible<br />
+ cl_gui_container=&gt;ws_child.</p>
<p>*** Create Docking Container<br />
CREATE OBJECT gr_dock<br />
EXPORTING<br />
side      = cl_gui_docking_container=&gt;dock_at_top<br />
extension = 10<br />
style     = shellstyle.</p>
<p class="head1">Oder anders herum&#8230;</p>
<p>Den Tric kann man allerdings auch genau anders herum verwenden! So sieht ein ALV-Grid im Container normalerweise aus:</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/ALV/Alv_rahmen_duenn.jpg" /><br />
ALV-Grid mit normalem Rahmen</td>
</tr>
</tbody>
</table>
<p>Mit dem richtigen Style kann man dem Container einen dicken Rahmen verpassen:</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/ALV/alv_rahmen_dick.jpg" /><br />
ALV mit dickem Rahmen</td>
</tr>
</tbody>
</table>
<p class="head1">Coding DICK</p>
<p>Hier ist das Coding dazu:</p>
<p class="sap1"><span style="color: #fb2412;">*** Style</span><br />
DATA lv_style TYPE i.</p>
<p>lv_style = cl_gui_container=&gt;ws_thickframe<br />
+ cl_gui_container=&gt;ws_visible<br />
+ cl_gui_container=&gt;ws_child.</p>
<p><span style="color: #fb2412;">*** Create Custom Container</span><br />
CREATE OBJECT gr_cc<br />
EXPORTING<br />
style          = lv_style<br />
container_name = &#8216;CUSTOM_CONTAINER&#8217;<br />
EXCEPTIONS<br />
OTHERS         = 6.</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/container-rahmen/">Container-Rahmen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/container-rahmen/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>ALV-Styles Übersicht</title>
		<link>/blog/alv-styles-uebersicht/</link>
					<comments>/blog/alv-styles-uebersicht/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 13 Jul 2011 10:41:03 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=603</guid>

					<description><![CDATA[<p>Im Include  sind alle Styles &#252;bersichtlich aufgelistet. Hier kann man sehen, welche M&#246;glichkeiten zur Zellenformatierung es gibt.</p>
<p>Der Beitrag <a href="/blog/alv-styles-uebersicht/">ALV-Styles Übersicht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Im Include sind alle Styles übersichtlich aufgelistet. Hier kann man sehen, welche Möglichkeiten zur Zellenformatierung es gibt.</p>
<h2 class="head1">Hinweise</h2>
<h3 class="head2">ALV-Edit</h3>
<p class="text1">Möchte man das Löschen einer Zeile im editierbaren ALV-Grid verhindern, so setzt man für diese Zeile den Style &#8220;ALV_STYLE_NO_DELETE_ROW&#8221;.</p>
<h3>Spalten einfärben</h3>
<p>Wenn du wissen möchtest, wie du Spalten eine andere Farbe geben kannst, dann schaue dir diesen Artikel an: <a href="https://tricktresor.com/blog/kleinigkeiten_alv_feldkatalog/">Kleinigkeiten ALV Feldkatalog</a></p>
<h2 class="head1">INCLUDE &lt;CL_ALV_CONTROL&gt;</h2>
<pre class="lang:abap decode:true ">***INCLUDE &lt;CL_ALV_CONTROL&gt; .
CONSTANTS:
* Style 1
 ALV_STYLE_COLOR_BACKGROUND(4)                  TYPE X VALUE '00000001',
 ALV_STYLE_COLOR_HEADING(4)                     TYPE X VALUE '00000002',
 ALV_STYLE_COLOR_NORMAL(4)                      TYPE X VALUE '00000003',
 ALV_STYLE_COLOR_TOTAL(4)                       TYPE X VALUE '00000004',
 ALV_STYLE_COLOR_KEY(4)                         TYPE X VALUE '00000005',
 ALV_STYLE_COLOR_POSITIVE(4)                    TYPE X VALUE '00000006',
 ALV_STYLE_COLOR_NEGATIVE(4)                    TYPE X VALUE '00000007',
 ALV_STYLE_COLOR_GROUP(4)                       TYPE X VALUE '00000008',
 ALV_STYLE_COLOR_INT_BACKGROUND(4)              TYPE X VALUE '00000009',
 ALV_STYLE_COLOR_INT_HEADING(4)                 TYPE X VALUE '0000000A',
 ALV_STYLE_COLOR_INT_NORMAL(4)                  TYPE X VALUE '0000000B',
 ALV_STYLE_COLOR_INT_TOTAL(4)                   TYPE X VALUE '0000000C',
 ALV_STYLE_COLOR_INT_KEY(4)                     TYPE X VALUE '0000000D',
 ALV_STYLE_COLOR_INT_POSITIVE(4)                TYPE X VALUE '0000000E',
 ALV_STYLE_COLOR_INT_NEGATIVE(4)                TYPE X VALUE '0000000F',
 ALV_STYLE_COLOR_INT_GROUP(4)                   TYPE X VALUE '00000010',
 ALV_STYLE_COLOR_INV_BACKGROUND(4)              TYPE X VALUE '00000011',
 ALV_STYLE_COLOR_INV_HEADING(4)                 TYPE X VALUE '00000012',
 ALV_STYLE_COLOR_INV_NORMAL(4)                  TYPE X VALUE '00000013',
 ALV_STYLE_COLOR_INV_TOTAL(4)                   TYPE X VALUE '00000014',
 ALV_STYLE_COLOR_INV_KEY(4)                     TYPE X VALUE '00000015',
 ALV_STYLE_COLOR_INV_POSITIVE(4)                TYPE X VALUE '00000016',
 ALV_STYLE_COLOR_INV_NEGATIVE(4)                TYPE X VALUE '00000017',
 ALV_STYLE_COLOR_INV_GROUP(4)                   TYPE X VALUE '00000018',

 ALV_STYLE_FONT_BOLD(4)                         TYPE X VALUE '00000020',
 ALV_STYLE_FONT_BOLD_NO(4)                      TYPE X VALUE '00000040',

 ALV_STYLE_FONT_ITALIC(4)                       TYPE X VALUE '00000080',
 ALV_STYLE_FONT_ITALIC_NO(4)                    TYPE X VALUE '00000100',

 ALV_STYLE_FONT_UNDERLINED(4)                   TYPE X VALUE '00000200',
 ALV_STYLE_FONT_UNDERLINED_NO(4)                TYPE X VALUE '00000400',

 ALV_STYLE_ALIGN_LEFT_TOP(4)                    TYPE X VALUE '00000800',
 ALV_STYLE_ALIGN_CENTER_TOP(4)                  TYPE X VALUE '00001000',
 ALV_STYLE_ALIGN_RIGHT_TOP(4)                   TYPE X VALUE '00001800',
 ALV_STYLE_ALIGN_LEFT_CENTER(4)                 TYPE X VALUE '00002000',
 ALV_STYLE_ALIGN_CENTER_CENTER(4)               TYPE X VALUE '00002800',
 ALV_STYLE_ALIGN_RIGHT_CENTER(4)                TYPE X VALUE '00003000',
 ALV_STYLE_ALIGN_LEFT_BOTTOM(4)                 TYPE X VALUE '00003800',
 ALV_STYLE_ALIGN_CENTER_BOTTOM(4)               TYPE X VALUE '00004000',
 ALV_STYLE_ALIGN_RIGHT_BOTTOM(4)                TYPE X VALUE '00004800',

 ALV_STYLE_FONT_SYMBOL(4)                       TYPE X VALUE '00008000',
 ALV_STYLE_FONT_SYMBOL_NO(4)                    TYPE X VALUE '00010000',

 ALV_STYLE_CHECKBOX_NOT_CHECKED(4)              TYPE X VALUE '00020000',
 ALV_STYLE_CHECKBOX_CHECKED(4)                  TYPE X VALUE '00040000',
 ALV_STYLE_CHECKBOX_NO(4)                       TYPE X VALUE '00060000',

 ALV_STYLE_ENABLED(4)                           TYPE X VALUE '00080000',
 ALV_STYLE_DISABLED(4)                          TYPE X VALUE '00100000',

 ALV_STYLE_SINGLE_CLK_EVENT(4)                  TYPE X VALUE '00200000',
 ALV_STYLE_SINGLE_CLK_EVENT_NO(4)               TYPE X VALUE '00400000',

 ALV_STYLE_RADIO_NOT_CHECKED(4)                 TYPE X VALUE '00800000',
 ALV_STYLE_RADIO_CHECKED(4)                     TYPE X VALUE '01000000',
 ALV_STYLE_RADIO_NO(4)                          TYPE X VALUE '01800000',

 ALV_STYLE_F4(4)                                TYPE X VALUE '02000000',
 ALV_STYLE_F4_NO(4)                             TYPE X VALUE '04000000',

 ALV_STYLE_IMAGE(4)                             TYPE X VALUE '08000000',

 ALV_STYLE_NO_DELETE_ROW(4)                     TYPE X VALUE '10000000',

 ALV_STYLE_BUTTON(4)                            TYPE X VALUE '20000000',
 ALV_STYLE_BUTTON_NO(4)                         TYPE X VALUE '40000000',


* Style 2
 ALV_STYLE2_NO_BORDER_LEFT(4)                   TYPE X VALUE '00010000',
 ALV_STYLE2_NO_BORDER_RIGHT(4)                  TYPE X VALUE '00020000',
 ALV_STYLE2_NO_BORDER_TOP(4)                    TYPE X VALUE '00040000',
 ALV_STYLE2_NO_BORDER_BOTTOM(4)                 TYPE X VALUE '00080000',

* Style 3 ( WEBSTYLES ).


* Style 4
 ALV_STYLE4_ZEBRA_ROW(4)                        TYPE X VALUE '00000001',
 ALV_STYLE4_STOP_MERGE(4)                       TYPE X VALUE '00000002',

 ALV_STYLE4_LINK(4)                             TYPE X VALUE '00000004',
 ALV_STYLE4_LINK_NO(4)                          TYPE X VALUE '00000008',


* Column Styles
ALV_COL_STYLE_SORT_UP(4)                        TYPE X VALUE '00000001',
ALV_COL_STYLE_SORT_DOWN(4)                      TYPE X VALUE '00000002',
ALV_COL_STYLE_FILTER(4)                         TYPE X VALUE '00000004',
ALV_COL_STYLE_TOTAL(4)                          TYPE X VALUE '00000008',
ALV_COL_STYLE_SUBTOTAL(4)                       TYPE X VALUE '00000010',
ALV_COL_STYLE_CHARACTERISTIC(4)                 TYPE X VALUE '00000020',
ALV_COL_STYLE_KEYFIGURE(4)                      TYPE X VALUE '00000040',
ALV_COL_STYLE_KEY(4)                            TYPE X VALUE '00000080',
ALV_COL_STYLE_EXCEPTION(4)                      TYPE X VALUE '00000100',
ALV_COL_STYLE_SIGNED_KEYFIGURE(4)               TYPE X VALUE '00000200',
ALV_COL_STYLE_MERGE(4)                          TYPE X VALUE '00000400',
ALV_COL_STYLE_FIXED(4)                          TYPE X VALUE '00000800',
ALV_COL_STYLE_AUTO_VALUE(4)                     TYPE X VALUE '00001000',
ALV_COL_STYLE_NO_DISP(4)                        TYPE X VALUE '00002000',
ALV_COL_STYLE_HASREF(4)                         TYPE X VALUE '00004000',
ALV_COL_STYLE_AVERAGE(4)                        TYPE X VALUE '00008000',
ALV_COL_STYLE_MIN(4)                            TYPE X VALUE '00010000',
ALV_COL_STYLE_MAX(4)                            TYPE X VALUE '00020000'.</pre>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/alv-styles-uebersicht/">ALV-Styles Übersicht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/alv-styles-uebersicht/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>TablePainter</title>
		<link>/blog/tablepainter/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 06 Jul 2011 10:46:17 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[Sonstiges]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=601</guid>

					<description><![CDATA[<p>Die Klasse CL_GUI_TABLEPAINTER wird bei den Smartforms verwendet um Tabellen zu zeichnen und zu editieren. </p>
<p>Der Beitrag <a href="/blog/tablepainter/">TablePainter</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Die Klasse CL_GUI_TABLEPAINTER wird bei den Smartforms verwendet um Tabellen zu zeichnen und zu editieren. <br /><P>SAP stellt mit dem Programm SAPTABLEPAINTER_DEMO eine recht unfertige Demo zur Verf&uuml;gung. Der Editor wird angezeigt und eine Tabelle wird dargestellt. Diese kann jedoch nicht ge&auml;ndert werden und es kann auch keine neue Tabelle eingef&uuml;gt werden.</P><P>Das Control CL_GUI_TABLEPAINTER ist aber wohl auch wirklich nur in Spezialf&auml;llen sinnvoll.</P><P><IMG src="https://tricktresor.com/wp-content/uploads/tt_images/screenshots/Bild416.jpg"></P><P>&nbsp;</P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/tablepainter/">TablePainter</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Colour Picker</title>
		<link>/blog/colour-picker/</link>
					<comments>/blog/colour-picker/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 23 Jun 2011 15:39:47 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Sonstiges]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=600</guid>

					<description><![CDATA[<p>SAP bietet einen Colour-Picker an, mit dessen Hilfe der Anwender Farben oder Linien ausw&#228;hlen kann. </p>
<p>Der Beitrag <a href="/blog/colour-picker/">Colour Picker</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>SAP bietet einen Colour-Picker an, mit dessen Hilfe der Anwender Farben oder Linien ausw&auml;hlen kann. <br /><P>Das Demoprogramm hei&szlig;t: DEMO_COLORSEL</P><P><IMG src="/wp-content/uploads/tt_images/abap/Bild394.jpg"></P></p>
<p>Der Beitrag <a href="/blog/colour-picker/">Colour Picker</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/colour-picker/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Drawer</title>
		<link>/blog/drawer/</link>
					<comments>/blog/drawer/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 04 Jan 2011 15:26:48 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[Sonstiges]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=572</guid>

					<description><![CDATA[<p>Ein neues und bisher wenig beachtetes Control ist das "Schubladen-Control" CL_GUI_CONTAINER_BAR, ein vertikales TabStrip-Modul f&#252;r Controls. In diesem Beispiel werden die Reports aus bestimmten Bereichen gesucht und in "Schubladen angezeigt". Das Original von www.sapnet.ru habe ich ein wenig schlanker und universeller gemacht.</p>
<p>Der Beitrag <a href="/blog/drawer/">Drawer</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ein neues und bisher wenig beachtetes Control ist das &#8220;Schubladen-Control&#8221; CL_GUI_CONTAINER_BAR, ein vertikales TabStrip-Modul für Controls. In diesem Beispiel werden die Reports aus bestimmten Bereichen gesucht und in &#8220;Schubladen angezeigt&#8221;. Das Original von www.sapnet.ru habe ich ein wenig schlanker und universeller gemacht.</p>
<p class="text1">In diesem Beispiel wird an den Selection-Screen ein Docking-Container angehängt, der das DrawerControl beinhaltet.</p>
<p class="text1">Es werden Programme aus bestimmten Bereichen angezeigt, die per Klick aufgerufen werden können.</p>
<h2 class="head1">Coding</h2>
<pre class="sap1">REPORT ZZ_DRAWER.
* original <a href="http://www.sapnet.ru/viewtopic.php?t=1953" target="_blank" rel="noopener">http://www.sapnet.ru/viewtopic.php?t=1953</a>
TABLES: trdir.
DATA: cc_drawer      TYPE REF TO cl_gui_docking_container,
      c_drawer       TYPE REF TO cl_gui_container_bar,
      c_container    TYPE REF TO cl_gui_container,
      l_caption      TYPE sbptcaptn,
      lt_captions    TYPE sbptcaptns,
      l_icon         TYPE swd_icon,
      lt_icons       TYPE swd_icons,
      ok_code        TYPE sy-ucomm,
      id             TYPE i,
      repid          TYPE sy-repid,
      dynnr          TYPE sy-dynnr.
<span style="color: #fb2412;">* Display data
</span>TYPES: BEGIN OF ty_data ,
         name LIKE trdir-name,
         cnam LIKE trdir-cnam,
         cdat LIKE trdir-cdat,
      END OF ty_data.
DATA : g_alv          TYPE REF TO cl_gui_alv_grid,
       g_alv_all      TYPE REF TO cl_gui_alv_grid,
       gs_data        TYPE ty_data,
       gt_data        TYPE STANDARD TABLE OF ty_data.

CLASS lcl_application DEFINITION DEFERRED.
CLASS cl_gui_cfw      DEFINITION LOAD.

DATA: c_application   TYPE REF TO lcl_application,
      c_alv           TYPE REF TO lcl_application.

PARAMETERS test.
<span style="color: #fb2412;">*---------------------------------------------------------------------*
* CLASS lcl_application DEFINITION
*---------------------------------------------------------------------*
</span>CLASS lcl_application DEFINITION.

  PUBLIC SECTION.
    METHODS:
       on_click FOR EVENT clicked OF cl_gui_container_bar
                IMPORTING
                  id
                  container,
                  on_hotspot_click FOR EVENT
                  hotspot_click OF cl_gui_alv_grid IMPORTING
                  e_row_id
                  e_column_id.

ENDCLASS. "lcl_application DEFINITION

<span style="color: #fb2412;">*---------------------------------------------------------------------*
* CLASS lcl_application IMPLEMENTATION
*---------------------------------------------------------------------*
</span>CLASS lcl_application IMPLEMENTATION.

  METHOD on_click.
    DATA: l_fcode TYPE ui_func,
    l_link TYPE swd_htmlco,
    l_quickinfo TYPE iconquick.
    DATA:
    lx_variant TYPE disvariant,
    lt_alv_cat TYPE lvc_t_fcat,
    lx_alv_cat TYPE lvc_s_fcat,
    lx_alv_lay TYPE lvc_s_layo.
    DEFINE m_fieldcat.
      add 1 to lx_alv_cat-col_pos.
      lx_alv_cat-fieldname = &amp;1.
      case lx_alv_cat-fieldname.
        when 'NAME'.
          lx_alv_cat-key = 'X'.
          lx_alv_cat-hotspot = 'X'.
          lx_alv_cat-scrtext_m = 'Program Name'.
          lx_alv_cat-colddictxt = 'M'.
          lx_alv_cat-tipddictxt = 'M'.
        when 'CNAM'.
          lx_alv_cat-key = ''.
          lx_alv_cat-hotspot = ''.
          lx_alv_cat-scrtext_m = 'Created By'.
          lx_alv_cat-colddictxt = 'M'.
          lx_alv_cat-tipddictxt = 'M'.
        when 'CDAT'.
          lx_alv_cat-key = ''.
          lx_alv_cat-hotspot = ''.
          lx_alv_cat-scrtext_m = 'Created On'.
          lx_alv_cat-colddictxt = 'M'.
          lx_alv_cat-tipddictxt = 'M'.
      endcase.
      lx_alv_cat-ref_field = &amp;2.
      lx_alv_cat-ref_table = &amp;3.
      append lx_alv_cat to lt_alv_cat.
    END-OF-DEFINITION.

    DATA lv_cat TYPE c LENGTH 20.

    CASE id.
      WHEN 1.
        lv_cat = 'ZSD%'.
      WHEN 2.
        lv_cat = 'ZMM%'.
      WHEN 3.
        lv_cat = 'ZPP%'.
      WHEN 4.
        lv_cat = 'ZFI%'.
      WHEN 5.
        lv_cat = 'Z%'.
    ENDCASE.

    FREE : g_alv.
    IF g_alv IS INITIAL.
      CREATE OBJECT g_alv
        EXPORTING
          i_parent = container.
<span style="color: #fb2412;">*Fill gt_data</span>
      REFRESH gt_data[].
      SELECT name cnam cdat FROM trdir INTO CORRESPONDING FIELDS OF
      TABLE gt_data
      WHERE name LIKE lv_cat.
<span style="color: #fb2412;">*Fill the field catalog
</span>      REFRESH lt_alv_cat[].
      m_fieldcat 'NAME' 'NAME' 'TRDIR'.
      m_fieldcat 'CNAM' 'CNAM' 'TRDIR'.
      m_fieldcat 'CDAT' 'CDAT' 'TRDIR'.
<span style="color: #fb2412;">*Layout
</span>      CLEAR lx_alv_lay.
      lx_alv_lay-zebra = 'X'.
      lx_alv_lay-cwidth_opt = 'X'.
      lx_alv_lay-sel_mode = ' '.
      lx_alv_lay-no_toolbar = 'X'.
      lx_alv_lay-no_headers = 'X'.
      lx_variant-report = sy-cprog.
<span style="color: #fb2412;">*Display
</span>      CALL METHOD g_alv-&gt;set_table_for_first_display
        EXPORTING
          is_variant                    = lx_variant
          is_layout                     = lx_alv_lay
        CHANGING
          it_outtab                     = gt_data
          it_fieldcatalog               = lt_alv_cat
        EXCEPTIONS
          invalid_parameter_combination = 1
          program_error                 = 2
          too_many_lines                = 3
          OTHERS                        = 4.
      IF c_alv IS INITIAL.
        CREATE OBJECT c_alv.
      ENDIF.
      SET HANDLER c_alv-&gt;on_hotspot_click FOR g_alv.
      cl_gui_container=&gt;set_focus( g_alv ).
    ENDIF.

  ENDMETHOD. "on_click

  METHOD on_hotspot_click.
    DATA:
    lx_selected_row TYPE lvc_s_row,
    ls_data TYPE ty_data.
    CLEAR lx_selected_row.
    MOVE-CORRESPONDING e_row_id TO lx_selected_row.
    READ TABLE gt_data INTO ls_data INDEX lx_selected_row-index.
    SET PARAMETER ID 'RID' FIELD ls_data-name.
    CALL TRANSACTION 'SE38' AND SKIP FIRST SCREEN.
  ENDMETHOD. "on_hotspot_click
ENDCLASS. "lcl_application IMPLEMENTATION


FORM init_drawer.

  repid = sy-repid.
  dynnr = sy-dynnr.
<span style="color: #fb2412;">* create container for drawer
</span>  IF cc_drawer IS INITIAL.
    CREATE OBJECT cc_drawer
      EXPORTING
        repid     = repid
        dynnr     = dynnr
        extension = 380.
  ENDIF.
<span style="color: #fb2412;">* create drawer
</span>  IF c_drawer IS INITIAL.
    l_caption-caption = 'Sales and Distribution Reports'(004). 
    l_caption-icon = icon_wizard.
    APPEND l_caption TO lt_captions.
    l_caption-caption = 'Material Management Reports'(005). 
    l_caption-icon = icon_date.
    APPEND l_caption TO lt_captions.
    l_caption-caption = 'Production Planning Reports'(006). 
    l_caption-icon = icon_display_text.
    APPEND l_caption TO lt_captions.
    l_caption-caption = 'Finance and Controlling Reports'(007). 
    l_caption-icon = icon_information.
    APPEND l_caption TO lt_captions.
    l_caption-caption = 'All custom Reports'(008).
    l_caption-icon = icon_refresh.
    APPEND l_caption TO lt_captions.

<span style="color: #fb2412;">* Create cl_gui_container_bar
</span>    CREATE OBJECT c_drawer
      EXPORTING
        parent                       = cc_drawer
        captions                     = lt_captions
      EXCEPTIONS
        max_number_of_cells_exceeded = 1
        OTHERS                       = 2.
    IF sy-subrc &lt;&gt; 0.
      SET SCREEN 0. LEAVE SCREEN.
    ENDIF.
<span style="color: #fb2412;">* Create cl_gui_container_bar
</span>    IF c_application IS INITIAL.
      CREATE OBJECT c_application.
    ENDIF.
    SET HANDLER c_application-&gt;on_click FOR c_drawer.
    c_drawer-&gt;set_active( 1 ).
  ENDIF.
ENDFORM.                    "init_drawer

INITIALIZATION.
  PERFORM init_drawer.</pre>
<p>Der Beitrag <a href="/blog/drawer/">Drawer</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/drawer/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Ereignisse</title>
		<link>/blog/ereignisse/</link>
					<comments>/blog/ereignisse/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 02 Jun 2010 13:51:55 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[CL_GUI_COLUMN_TREE]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=550</guid>

					<description><![CDATA[<p>Bemerkungen zu Ereignissen im ColumnTree</p>
<p>Der Beitrag <a href="/blog/ereignisse/">Ereignisse</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Bemerkungen zu Ereignissen im ColumnTree<br /><P>Bevor die Ereignisse f&uuml;r den ColumnTree registriert werden, sollte die Methode GET_REGISTERED_EVENTS aufgerufen werden.</P><P>Setzt man n&auml;mlich &#8220;einfach&#8221; das Event &#8220;Item_Double_Click&#8221;, dann wird evtl. auf einmal die Ordnerstruktur nicht mehr angezeigt! Durch das explizite Setzen mittels SET_REGISTERED_EVENTS&nbsp;wird das Event &#8220;EXPAND_NO_CHILDREN&#8221; gel&ouml;scht&#8230;</P><P>Eine Registrierung sollte also so z.B. aussehen:</P><P class="sap1"><FONT color="#fb2412">***&nbsp;data definition<BR></FONT>&nbsp; DATA lt_events TYPE cntl_simple_events.<BR>&nbsp; DATA ls_event&nbsp; TYPE cntl_simple_event.<BR><BR><FONT color="#fb2412">*** Get already registered events</FONT><BR>&nbsp; CALL METHOD gr_tree-&gt;get_registered_events<BR>&nbsp;&nbsp;&nbsp; IMPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; events = lt_events.<BR><FONT color="#fb2412"><BR>*** define the events which will be passed to the backend<BR></FONT>&nbsp; ls_event-eventid = cl_gui_column_tree=&gt;eventid_link_click.<BR>&nbsp; APPEND ls_event TO lt_events.<BR>&nbsp; ls_event-eventid = cl_gui_column_tree=&gt;eventid_item_double_click.<BR>&nbsp; APPEND ls_event TO lt_events.<BR><BR><FONT color="#fb2412">*** set events</FONT><BR>&nbsp; CALL METHOD gr_tree-&gt;set_registered_events<BR>&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; events = lt_events.<BR><BR><FONT color="#fb2412">*** set Handler <BR></FONT>&nbsp; SET HANDLER lcl_treereceiver=&gt;handle_link_click&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FOR gr_tree.<BR>&nbsp; SET HANDLER lcl_treereceiver=&gt;handle_item_double_click FOR gr_tree.<BR></P><P>Doppelte Events sind nicht schlimm, solange APPL_EVENT identisch ist, also das Kennzeichen das steuert, ob Events einen Funktionscode ausl&ouml;sen.</P><P>Besser w&auml;re es sicherlich, vorher zu pr&uuml;fen, ob das Ereignis bereits registriert ist.</P></p>
<p>Der Beitrag <a href="/blog/ereignisse/">Ereignisse</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/ereignisse/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Verwendung ColumnTree</title>
		<link>/blog/verwendung-2/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 02 Jun 2010 13:43:06 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[CL_GUI_COLUMN_TREE]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=549</guid>

					<description><![CDATA[<p>Anmerkungen zur Verwendung. Vorteile, Nachteile, Besonderheiten, Anwendungsm&#246;glichkeiten des ColumnTree </p>
<p>Der Beitrag <a href="/blog/verwendung-2/">Verwendung ColumnTree</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Anmerkungen zur Verwendung. Vorteile, Nachteile, Besonderheiten, Anwendungsmöglichkeiten</p>
<p>Der ColumnTree bietet &#8211; im Gegensatz zum SimpleTree &#8211; sehr viele Darstellungsmöglichkeiten. Jede Zeile kann, bzw. muss einzeln &#8220;designed&#8221; werden: Für jeden Knoten muss jedes Element, das dargestellt werden soll, definiert werden: Inhalt, Länge, Farbe, Link, Druckknopf, Checkbox etc. Es kann in der Programmierung dann auf jeden Klick auf jedes Element reagiert werden.</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/Tree/hc_339.jpg" /></p>
<p>Sollen die Spalten alle gleich sein, so muss der SALV_TREE oder CL_GUI_ALV_TREE verwendet werden.</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/verwendung-2/">Verwendung ColumnTree</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
