<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Gauss Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/gauss/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:24:47 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Gauss Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Tricktresorsche Glockenkurve</title>
		<link>/blog/tricktresorsche-glockenkurve/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 15 Jun 2017 17:37:56 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Gauss]]></category>
		<category><![CDATA[Normalverteilung]]></category>
		<category><![CDATA[GFW]]></category>
		<category><![CDATA[Grafik]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=1018032</guid>

					<description><![CDATA[<p>Eine kleine Fingerübung im old-style, die aus einem Denkansatz heraus abgefallen ist: Eine kleine &#8220;grafische&#8221; Spielerei zur Darstellung der Gauß-Funktion/ Glockenkurve/ Normalverteilung. Da dies für mich bereits höhere Mathematik ist, bin ich besonders stolz auf diese kleine Spielerei. Eine schönere Möglichkeit wäre sicherlich die Darstellung im GFW-Framework, aber ich wollte nur schnell sehen, ob die berechneten Werte irgendwie stimmig sind. GFW-Framework Bei Interesse schau dir die Demoprogramme GFW_PROG* und GFW_DEMO* einmal an: GFW_DEMO_HIER3 GFW: Demonstration...</p>
<p>Der Beitrag <a href="/blog/tricktresorsche-glockenkurve/">Tricktresorsche Glockenkurve</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Eine kleine Fingerübung im old-style, die aus einem Denkansatz heraus abgefallen ist: Eine kleine &#8220;grafische&#8221; Spielerei zur Darstellung der <a href="https://de.wikipedia.org/wiki/Normalverteilung">Gauß-Funktion/ Glockenkurve/ Normalverteilung</a>.</p>
<p>Da dies für mich bereits höhere Mathematik ist, bin ich besonders stolz auf diese kleine Spielerei. Eine schönere Möglichkeit wäre sicherlich die Darstellung im GFW-Framework, aber ich wollte nur schnell sehen, ob die berechneten Werte irgendwie stimmig sind.</p>
<h2><a href="https://tricktresor.com/wp-content/uploads/2017/06/SNAG-0000.png"><img fetchpriority="high" decoding="async" class="alignnone size-full wp-image-1018033" src="https://tricktresor.com/wp-content/uploads/2017/06/SNAG-0000.png" alt="" width="830" height="625" srcset="/wp-content/uploads/2017/06/SNAG-0000.png 830w, /wp-content/uploads/2017/06/SNAG-0000-300x226.png 300w, /wp-content/uploads/2017/06/SNAG-0000-768x578.png 768w" sizes="(max-width: 830px) 100vw, 830px" /></a></h2>
<h2>GFW-Framework</h2>
<p>Bei Interesse schau dir die Demoprogramme GFW_PROG* und GFW_DEMO* einmal an:</p>
<p>GFW_DEMO_HIER3 GFW: Demonstration einer Hierarchie-/Präsentationsgrafik (Drag&amp;Drop)<br />
GFW_DEMO_PRES GFW: Demonstration von GFW mit sichtbarem Datencontainer<br />
GFW_DEMO_PRES1 GFW: Demonstration von Präsentationsgrafiken mit GFW<br />
GFW_DEMO_PRES_MAIN  <span class="L0S52">class </span><span class="L0S52">with </span>application logic <span class="L0S52">of </span>example <span class="L0S52">report </span><span class="L0S31">&#8220;GFW_DEMO_PRES&#8221;</span></p>
<p>GFW_PROG_BAR GFW: Programmierbeispiel für ein Balkendiagramm<br />
GFW_PROG_COLUMNS_AND_TIME_AXIS GFW: Programmierbeispiel für ein Balkendiagramm mit Zeitachse<br />
GFW_PROG_CREATE_CUSTOMIZING GFW: Programmierbeisp. für einfachen Gebrauch von Customizing-Bündeln<br />
GFW_PROG_DC_PERFORMANCE GFW: Programmierbeispiel für die schnelle Datencontainerverwendung<br />
GFW_PROG_GET_CU_BUNDLE GFW: Programmierbeispiel mit Methode if_graphic_proxy~get_cu_bundle<br />
GFW_PROG_HISTOGRAM GFW: Programmierbeispiel für ein Histogramm<br />
GFW_PROG_LABELS GFW: Programmierbeispiel für dieselben Beschriftungen, lange Beschr.<br />
GFW_PROG_MTA GFW: Programmierbeispiel für eine Meilensteintrendanalyse<br />
GFW_PROG_PIE GFW: Programmierbeispiel für ein Kreisdiagramm<br />
GFW_PROG_POINT_WITH_LABEL GFW: Programmierbeispiel für Diagramm mit gekennzeichnetem Punkt<br />
GFW_PROG_PORTFOLIO GFW: Programmierbeispiel für ein Balkendiagramm<br />
GFW_PROG_SPEEDOMETER GFW: Programmierbeispiel für ein Balkendiagramm<br />
GFW_PROG_TIME_AXIS GFW: Programmierbeispiel für ein Punktdiagramm mit Zeitachse<br />
GFW_PROG_TUTORIAL GFW: Programmierbeispiel für eine einfache PräsGrafik = GFW-Tutorial</p>
<h2>Code</h2>
<pre class="lang:abap decode:true  ">REPORT zz_gauss_timer_demo NO STANDARD PAGE HEADING LINE-SIZE 1000.


CLASS main DEFINITION.
  PUBLIC SECTION.
    METHODS start.
  PROTECTED SECTION.
    DATA sigma TYPE f VALUE '0.1'.
    DATA my TYPE f VALUE 0.
    DATA count TYPE i.
    METHODS gauss.
    DATA timer TYPE REF TO cl_gui_timer.
    METHODS finished FOR EVENT finished OF cl_gui_timer.
    METHODS clear_screen.
ENDCLASS.

CLASS main IMPLEMENTATION.
  METHOD start.
    gauss( ).
    timer = NEW #( ).
    SET HANDLER finished FOR timer.
    timer-&gt;interval = 1.
    timer-&gt;run( ).
  ENDMETHOD.

  METHOD finished.
    gauss( ).
    ADD 1 TO count.
    IF count &lt; 10.
      timer-&gt;run( ).
    ELSE.
      SKIP TO LINE 28.
      POSITION 120.
      WRITE 'FINISHED'.
    ENDIF.
  ENDMETHOD.

  METHOD gauss.

    DATA e   TYPE f VALUE '2.718281828459'.
    DATA pi  TYPE f VALUE '3.14159265359'.
    DATA x   TYPE f.
    DATA erg TYPE f.
    DATA anz TYPE i VALUE 51.
    DATA l   TYPE i. "value for result (scaled)

    clear_screen( ).

    SKIP TO LINE 3.

    ADD '0.02' TO sigma.

    x = -1.


    DO anz TIMES.

      "calculate gauss
      erg = ( 1 / sigma * sqrt( 2 * pi ) ) * e **
            ( '0.5-' * (  ( x - my ) / (  sigma  ) ) ** 2 ) .

      "write result
      WRITE: / x EXPONENT 0 DECIMALS 2, erg EXPONENT 0 DECIMALS 5.

      "scale result
      l = erg * 4.

      "write graph
      DO l TIMES.
        WRITE sym_checkbox as SYMBOL NO-GAP.
*        WRITE icon_bw_apd_source as icon NO-GAP.
      ENDDO.

      "add step
      x = x + 1 / ( ( anz - 1 ) / 2 ) .

    ENDDO.
  ENDMETHOD.

  METHOD clear_screen.
    SKIP TO LINE 1.

    write: /20 'x-value                 result;   sigma=', sigma EXPONENT 0 DECIMALS 3 LEFT-JUSTIFIED,
               'my=', my EXPONENT 0 DECIMALS 3 LEFT-JUSTIFIED.

    SET BLANK LINES ON.
    DO 50 TIMES.
      DO sy-linsz TIMES.
        WRITE space NO-GAP.
      ENDDO.
    ENDDO.
  ENDMETHOD.

ENDCLASS.


START-OF-SELECTION.
  NEW main( )-&gt;start( ).</pre>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/tricktresorsche-glockenkurve/">Tricktresorsche Glockenkurve</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
