<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Toolbar-Control Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/toolbar-control/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Fri, 29 Nov 2013 16:59:40 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Toolbar-Control Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Statisches Menu</title>
		<link>/blog/statisches-menu/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 30 Aug 2007 19:32:46 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Toolbar-Control]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=433</guid>

					<description><![CDATA[<p>Aufbau eines Statischen Men&#252;s mithilfe des Toolbar-Controls. Das Beispielprogramm ist weitestgehend objektorientiert programmiert. Der Aufbau des Men&#252;s und die Reaktion auf die Funktionen sind in einer lokalen Klasse implementiert. Es zeigt zu einem Vertriebsbeleg alle verf&#252;gbaren Texte an.</p>
<p>Der Beitrag <a href="/blog/statisches-menu/">Statisches Menu</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Aufbau eines Statischen Men&uuml;s mithilfe des Toolbar-Controls. Das Beispielprogramm ist weitestgehend objektorientiert programmiert. Der Aufbau des Men&uuml;s und die Reaktion auf die Funktionen sind in einer lokalen Klasse implementiert. Es zeigt zu einem Vertriebsbeleg alle verf&uuml;gbaren Texte an.<br /><P>Der ausgew&auml;hlte Text wird markiert und ausgegraut, so dass er nicht erneut ausgew&auml;hlt werden kann.</P><P class="head1">Dynpro</P><P class="head2">CustomControl &#8220;Toolbar&#8221;</P><P class="text1">Bitte ein Customcontainer mit Namen &#8220;CC_TOOLBAR&#8221; anlegen. Einmal quer oben ins Dynpro.</P><P class="head2">CustomControl &#8220;Text&#8221;</P><P class="text1">Bitte ein Customcontainer mit Namen &#8220;CC_TEXT&#8221; f&uuml;r das TextControl anlegen. Etwas gr&ouml;&szlig;er unter CC_TOOLBAR.</P><P class="head2">OK-Code</P><P class="text1">Im OK-Codefeld bitte SY-UCOMM eintragen.</P><P class="head2">GUI-Status</P><P class="text1">Ein GUI-Status ist nicht notwendig; es wird ein Standard-GUI-Status verwendet.</P><P class="head2">Ablauflogik</P><P class="sap1">PROCESS BEFORE OUTPUT.<BR>&nbsp;MODULE STATUS_0100.<BR>*<BR>PROCESS AFTER INPUT.<BR>&nbsp;MODULE USER_COMMAND_0100.</P><P class="head1">Coding</P><P class="sap1">REPORT&nbsp; zz_textauswahl.<BR>TYPE-POOLS icon.<BR>CLASS lcl_my_toolbar_class DEFINITION DEFERRED.<BR>DATA gr_toolbar TYPE REF TO lcl_my_toolbar_class.</P><P class="sap1">PARAMETER p_vbeln TYPE vbeln DEFAULT &#8216;0000076543&#8217;.</P><P class="sap1">START-OF-SELECTION.</P><P class="sap1">&nbsp; CALL SCREEN 100.</P><P class="sap1"><BR>*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<BR>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CLASS lcl_my_toolbar_class DEFINITION<BR>*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<BR>CLASS lcl_my_toolbar_class DEFINITION.</P><P class="sap1">&nbsp; PUBLIC SECTION.<BR>&nbsp;&nbsp;&nbsp; DATA gv_tdid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE tdid.<BR>&nbsp;&nbsp;&nbsp; DATA gv_vbeln&nbsp;&nbsp;&nbsp;&nbsp; TYPE vbeln.<BR>&nbsp;&nbsp;&nbsp; DATA menu_static&nbsp; TYPE REF TO cl_ctmenu.<BR>&nbsp;&nbsp;&nbsp; DATA mytoolbar&nbsp;&nbsp;&nbsp; TYPE REF TO cl_gui_toolbar.<BR>&nbsp;&nbsp;&nbsp; DATA lt_ttxern&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF ttxern.<BR>&nbsp;&nbsp;&nbsp; DATA lt_ttxid&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF ttxid.<BR>&nbsp;&nbsp;&nbsp; DATA lt_ttxit&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF ttxit.<BR>&nbsp;&nbsp;&nbsp; DATA gr_textedit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE REF TO cl_gui_textedit.</P><P class="sap1">&nbsp;&nbsp;&nbsp; METHODS: constructor<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IMPORTING fi_toolbar_container TYPE c<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_text_container&nbsp;&nbsp;&nbsp; TYPE c<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_vbeln&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE vbeln<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_auart&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE auart,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; on_function_selected<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FOR EVENT function_selected OF cl_gui_toolbar<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IMPORTING fcode,</P><P class="sap1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; add_entry<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IMPORTING fi_fcode TYPE ui_func<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_ftext TYPE text40,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read_texts<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IMPORTING fi_vbeln TYPE vbeln<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_auart TYPE auart,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set_button_title<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IMPORTING fi_fcode TYPE ui_func PREFERRED PARAMETER fi_fcode,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; build_toolbar,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; build_menu.</P><P class="sap1">ENDCLASS.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;lcl_my_event_handler DEFINITION</P><P class="sap1">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<BR>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CLASS lcl_my_toolbar_class IMPLEMENTATION<BR>*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<BR>CLASS lcl_my_toolbar_class IMPLEMENTATION.</P><P class="sap1">&nbsp; METHOD constructor.</P><P class="sap1">&nbsp;&nbsp;&nbsp; DATA myevent_tab&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE cntl_simple_events.<BR>&nbsp;&nbsp;&nbsp; DATA myevent&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE cntl_simple_event.<BR>&nbsp;&nbsp;&nbsp; DATA my_toolbar_container&nbsp; TYPE REF TO cl_gui_custom_container.<BR>&nbsp;&nbsp;&nbsp; DATA my_text_container&nbsp;&nbsp;&nbsp;&nbsp; TYPE REF TO cl_gui_custom_container.</P><P class="sap1">***___________________________________________________________________<BR>***<BR>*** TextControl<BR>***___________________________________________________________________<BR>***</P><P class="sap1">&nbsp;&nbsp;&nbsp; CREATE OBJECT my_text_container<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; container_name = fi_text_container.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;#EC NOTEXT<BR>&nbsp;&nbsp;&nbsp; CREATE OBJECT gr_textedit<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wordwrap_mode&nbsp;&nbsp;&nbsp;&nbsp; = cl_gui_textedit=&gt;wordwrap_at_windowborder<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wordwrap_position = -1<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; parent&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = my_text_container<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXCEPTIONS<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OTHERS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 6.</P><P class="sap1">&nbsp;&nbsp;&nbsp; CALL METHOD gr_textedit-&gt;set_readonly_mode<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; readonly_mode = 1.</P><P class="sap1">***___________________________________________________________________<BR>***<BR>*** ToolbarControl<BR>***___________________________________________________________________<BR>***</P><P class="sap1">&nbsp;&nbsp;&nbsp; CREATE OBJECT my_toolbar_container<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; container_name = fi_toolbar_container.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;#EC NOTEXT</P><P class="sap1">&nbsp;&nbsp;&nbsp; CREATE OBJECT mytoolbar<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; parent = my_toolbar_container.</P><P class="sap1">&nbsp;&nbsp;&nbsp; myevent-eventid&nbsp;&nbsp;&nbsp; = cl_gui_toolbar=&gt;m_id_function_selected.<BR>&nbsp;&nbsp;&nbsp; myevent-appl_event = &#8216;X&#8217;.<BR>&nbsp;&nbsp;&nbsp; APPEND myevent TO myevent_tab.</P><P class="sap1">&nbsp;&nbsp;&nbsp; CALL METHOD mytoolbar-&gt;set_registered_events<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; events = myevent_tab.</P><P class="sap1">&nbsp;&nbsp;&nbsp; SET HANDLER on_function_selected&nbsp; FOR mytoolbar.</P><P class="sap1">***___________________________________________________________________<BR>***<BR>*** Set Toolbar<BR>***___________________________________________________________________<BR>***</P><P class="sap1">&nbsp;&nbsp;&nbsp; gv_vbeln = fi_vbeln.</P><P class="sap1">&nbsp;&nbsp;&nbsp; CALL METHOD read_texts<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_vbeln = fi_vbeln<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_auart = fi_auart.<BR>&nbsp;&nbsp;&nbsp; CALL METHOD set_button_title( space ).</P><P class="sap1">&nbsp;</P><P class="sap1">&nbsp; ENDMETHOD.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;constructor</P><P class="sap1">&nbsp; METHOD read_texts.</P><P class="sap1">&nbsp;&nbsp;&nbsp; FIELD-SYMBOLS &lt;ttxern&gt; TYPE ttxern.<BR>&nbsp;&nbsp;&nbsp; FIELD-SYMBOLS &lt;ttxit&gt;&nbsp; TYPE ttxit.<BR>&nbsp;&nbsp;&nbsp; FIELD-SYMBOLS &lt;ttxid&gt;&nbsp; TYPE ttxid.<BR>&nbsp;&nbsp;&nbsp; DATA lv_txtgr TYPE tvak-txtgr.<BR>&nbsp;&nbsp;&nbsp; DATA lv_auart TYPE auart.<BR>&nbsp;&nbsp;&nbsp; DATA ls_ttxit TYPE ttxit.</P><P class="sap1">&nbsp;&nbsp;&nbsp; IF fi_vbeln IS NOT INITIAL.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT SINGLE auart FROM vbak INTO lv_auart WHERE vbeln = fi_vbeln.<BR>&nbsp;&nbsp;&nbsp; ELSE.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_auart = fi_auart.<BR>&nbsp;&nbsp;&nbsp; ENDIF.</P><P class="sap1">&nbsp;&nbsp;&nbsp; SELECT SINGLE txtgr FROM tvak INTO lv_txtgr<BR>&nbsp;&nbsp;&nbsp;&nbsp; WHERE auart = lv_auart.</P><P class="sap1">&nbsp;&nbsp;&nbsp; IF lv_txtgr &lt;&gt; space.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT * FROM ttxern INTO TABLE lt_ttxern<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE txtob&nbsp;&nbsp;&nbsp; = &#8216;A&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND tdobject = &#8216;VBBK&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND txtgr&nbsp;&nbsp;&nbsp; = lv_txtgr.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IF sy-subrc = 0.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT * FROM ttxid INTO TABLE lt_ttxid<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FOR ALL ENTRIES IN lt_ttxern<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE tdobject = lt_ttxern-tdobject<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND tdid&nbsp;&nbsp;&nbsp;&nbsp; = lt_ttxern-tdid.</P><P class="sap1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LOOP AT lt_ttxid ASSIGNING &lt;ttxid&gt;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT SINGLE * FROM ttxit INTO ls_ttxit<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE tdobject = &lt;ttxid&gt;-tdobject<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND tdid&nbsp;&nbsp;&nbsp;&nbsp; = &lt;ttxid&gt;-tdid<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND tdspras&nbsp; = sy-langu.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IF sy-subrc &gt; 0.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ls_ttxit-tdobject = &lt;ttxid&gt;-tdobject.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ls_ttxit-tdid&nbsp;&nbsp;&nbsp;&nbsp; = &lt;ttxid&gt;-tdid.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ls_ttxit-tdspras&nbsp; = sy-langu.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ls_ttxit-tdtext&nbsp;&nbsp; = &lt;ttxid&gt;-tdid.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; APPEND ls_ttxit TO lt_ttxit.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ENDLOOP.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp;&nbsp;&nbsp; ENDIF.</P><P class="sap1">&nbsp;&nbsp;&nbsp; READ TABLE lt_ttxit ASSIGNING &lt;ttxit&gt; INDEX 1.<BR>&nbsp;&nbsp;&nbsp; IF sy-subrc = 0.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gv_tdid = &lt;ttxit&gt;-tdid.<BR>&nbsp;&nbsp;&nbsp; ENDIF.</P><P class="sap1">&nbsp; ENDMETHOD.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;read_texts</P><P class="sap1">&nbsp; METHOD on_function_selected.</P><P class="sap1"><BR>*&nbsp;&nbsp;&nbsp; MESSAGE s000(oo) WITH &#8216;Funktion&#8217; fcode.<BR>&nbsp;&nbsp;&nbsp; gv_tdid = fcode.<BR>&nbsp;&nbsp;&nbsp; CALL METHOD set_button_title( fcode ).</P><P class="sap1">&nbsp; ENDMETHOD.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;lcl_my_event_handler</P><P class="sap1">&nbsp; METHOD set_button_title.<BR>&nbsp;&nbsp;&nbsp; FIELD-SYMBOLS &lt;ttxit&gt;&nbsp; TYPE ttxit.</P><P class="sap1">&nbsp;&nbsp;&nbsp; DATA lv_text&nbsp; TYPE text40.<BR>&nbsp;&nbsp;&nbsp; DATA lv_info&nbsp; TYPE iconquick.<BR>&nbsp;&nbsp;&nbsp; DATA lv_icon&nbsp; TYPE iconname.<BR>&nbsp;&nbsp;&nbsp; DATA lv_fcode TYPE ui_func.<BR>&nbsp;&nbsp;&nbsp; DATA lv_tname TYPE thead-tdname.<BR>&nbsp;&nbsp;&nbsp; DATA lt_lines TYPE STANDARD TABLE OF tline.</P><P class="sap1">&nbsp;&nbsp;&nbsp; IF fi_fcode IS INITIAL.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_fcode = gv_tdid.<BR>&nbsp;&nbsp;&nbsp; ELSE.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_fcode = fi_fcode.<BR>&nbsp;&nbsp;&nbsp; ENDIF.</P><P class="sap1">&nbsp;&nbsp;&nbsp; READ TABLE lt_ttxit ASSIGNING &lt;ttxit&gt; WITH KEY tdid = lv_fcode.<BR>&nbsp;&nbsp;&nbsp; CHECK sy-subrc = 0.<BR>&nbsp;&nbsp;&nbsp; CONCATENATE &#8216;Text&#8217; &lt;ttxit&gt;-tdid &lt;ttxit&gt;-tdtext INTO lv_text SEPARATED BY space.<BR>&nbsp;&nbsp;&nbsp; CALL METHOD build_toolbar.<BR>&nbsp;&nbsp;&nbsp; lv_icon = icon_column_right.<BR>&nbsp;&nbsp;&nbsp; CALL METHOD mytoolbar-&gt;set_button_info<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fcode = &#8216;TEXT&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; icon&nbsp; = lv_icon<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; text&nbsp; = lv_text.</P><P class="sap1">&nbsp;&nbsp;&nbsp; IF gv_vbeln IS NOT INITIAL.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_tname = gv_vbeln.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CLEAR lt_lines.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CALL FUNCTION &#8216;READ_TEXT&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = gv_tdid<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; language = sy-langu<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name&nbsp;&nbsp;&nbsp;&nbsp; = lv_tname<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object&nbsp;&nbsp; = &#8216;VBBK&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TABLES<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lines&nbsp;&nbsp;&nbsp; = lt_lines<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXCEPTIONS<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OTHERS&nbsp;&nbsp; = 8.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CALL METHOD gr_textedit-&gt;set_text_as_r3table<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; table = lt_lines.</P><P class="sap1">&nbsp;&nbsp;&nbsp; ENDIF.</P><P class="sap1">&nbsp; ENDMETHOD.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;set_button_title</P><P class="sap1">&nbsp; METHOD build_menu.</P><P class="sap1">&nbsp;&nbsp;&nbsp; DATA tab_btnmnu TYPE ttb_btnmnu.<BR>&nbsp;&nbsp;&nbsp; DATA wa_btnmnu&nbsp; TYPE stb_btnmnu.<BR>&nbsp;&nbsp;&nbsp; DATA lv_fcode&nbsp;&nbsp; TYPE ui_func.<BR>&nbsp;&nbsp;&nbsp; DATA lv_ftext&nbsp;&nbsp; TYPE text40.</P><P class="sap1">&nbsp;&nbsp;&nbsp; CHECK mytoolbar IS BOUND.<BR>&nbsp;&nbsp;&nbsp; FIELD-SYMBOLS &lt;ttxit&gt;&nbsp; TYPE ttxit.</P><P class="sap1"><BR>&nbsp;&nbsp;&nbsp; IF&nbsp; menu_static IS INITIAL.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CREATE OBJECT menu_static.<BR>&nbsp;&nbsp;&nbsp; ELSE.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CALL METHOD menu_static-&gt;clear.<BR>&nbsp;&nbsp;&nbsp; ENDIF.</P><P class="sap1">&nbsp;&nbsp;&nbsp; LOOP AT lt_ttxit ASSIGNING &lt;ttxit&gt;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_fcode = &lt;ttxit&gt;-tdid.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_ftext = &lt;ttxit&gt;-tdtext.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CALL METHOD add_entry<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_fcode = lv_fcode<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_ftext = lv_ftext.<BR>&nbsp;&nbsp;&nbsp; ENDLOOP.</P><P class="sap1">&nbsp;&nbsp;&nbsp; CLEAR tab_btnmnu.</P><P class="sap1">&nbsp;&nbsp;&nbsp; wa_btnmnu-function = &#8216;TEXT&#8217;.<BR>&nbsp;&nbsp;&nbsp; wa_btnmnu-ctmenu&nbsp;&nbsp; = menu_static.<BR>&nbsp;&nbsp;&nbsp; APPEND wa_btnmnu TO tab_btnmnu.</P><P class="sap1">&nbsp;&nbsp;&nbsp; CALL METHOD mytoolbar-&gt;assign_static_ctxmenu_table<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; table_ctxmenu = tab_btnmnu.<BR>&nbsp; ENDMETHOD.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;build_menu</P><P class="sap1">&nbsp; METHOD add_entry.<BR>&nbsp;&nbsp;&nbsp; DATA lv_mark TYPE c.<BR>&nbsp;&nbsp;&nbsp; IF gv_tdid = fi_fcode.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_mark = &#8216;X&#8217;.<BR>&nbsp;&nbsp;&nbsp; ELSE.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_mark = space.<BR>&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp;&nbsp;&nbsp; CALL METHOD menu_static-&gt;add_function<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fcode&nbsp;&nbsp;&nbsp; = fi_fcode<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; text&nbsp;&nbsp;&nbsp;&nbsp; = fi_ftext<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; checked&nbsp; = lv_mark<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; disabled = lv_mark.<BR>&nbsp; ENDMETHOD.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;add_entry</P><P class="sap1">&nbsp; METHOD build_toolbar.<BR>&nbsp;&nbsp;&nbsp; IF mytoolbar IS BOUND.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CALL METHOD mytoolbar-&gt;delete_all_buttons.<BR>&nbsp;&nbsp;&nbsp; ENDIF.</P><P class="sap1">&nbsp;&nbsp;&nbsp; CALL METHOD mytoolbar-&gt;add_button<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fcode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;TEXT&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; icon&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = icon_display_text<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; butn_type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = cntb_btype_menu<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; text&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;Texte&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; quickinfo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;Texte anzeigen&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXCEPTIONS<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cntb_error_fcode = 1.<BR>&nbsp;&nbsp;&nbsp; CALL METHOD build_menu.</P><P class="sap1"><BR>&nbsp; ENDMETHOD.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;build_toolbar</P><P class="sap1">ENDCLASS.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;lcl_my_event_handler IMPLEMENTATION</P><P class="sap1"><BR>*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<BR>*&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Module&nbsp; STATUS_0100&nbsp; OUTPUT<BR>*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<BR>MODULE status_0100 OUTPUT.</P><P class="sap1">&nbsp; SET PF-STATUS &#8216;STLI&#8217; OF PROGRAM &#8216;SAPMSSY0&#8217;.</P><P class="sap1">&nbsp; IF gr_toolbar IS INITIAL.<BR>&nbsp;&nbsp;&nbsp; CREATE OBJECT gr_toolbar<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_toolbar_container = &#8216;CC_TOOLBAR&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_text_container&nbsp;&nbsp;&nbsp; = &#8216;CC_TEXT&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_auart&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = space&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;&#8216;ZDO1&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi_vbeln&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = p_vbeln.<BR>&nbsp; ENDIF.</P><P class="sap1">ENDMODULE.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8221; STATUS_0100&nbsp; OUTPUT</P><P class="sap1">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<BR>*&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Module&nbsp; USER_COMMAND_0100&nbsp; INPUT<BR>*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<BR>MODULE user_command_0100 INPUT.</P><P class="sap1">&nbsp; CASE sy-ucomm.<BR>&nbsp;&nbsp;&nbsp; WHEN &#8216;BACK&#8217; OR &#8216;%EX&#8217; OR &#8216;RW&#8217;.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SET SCREEN 0.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LEAVE SCREEN.<BR>&nbsp; ENDCASE.</P><P class="sap1">ENDMODULE.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8221; USER_COMMAND_0100&nbsp; INPUT</P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/statisches-menu/">Statisches Menu</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Demoprogramme zur Toolbar</title>
		<link>/blog/demoprogramme-zur-toolbar/</link>
					<comments>/blog/demoprogramme-zur-toolbar/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 30 Aug 2007 19:05:30 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Toolbar-Control]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=432</guid>

					<description><![CDATA[<p>Demoporgramme von der SAP mit einer kurzen Beschreibung und Anmerkungen.</p>
<p>Der Beitrag <a href="/blog/demoprogramme-zur-toolbar/">Demoprogramme zur Toolbar</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Demoporgramme von der SAP mit einer kurzen Beschreibung und Anmerkungen.<br /><P class="head1">RSDEMO_TOOLBAR_DIALOGBOX</P><P><TABLE class="tblimg" cellPadding="0" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/demo/500_002.gif"><BR>Erzeugen und Erweitern einer Toolbox im DialogboxContainer</P></TD></TR></TBODY></TABLE></P><P class="head1">SAPTOOLBAR_IN_SPLITTER</P><P><TABLE class="tblimg" cellPadding="0" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/demo/500_004.gif"><BR>Demonstration von zwei Toolbars in einem Splitter</P></TD></TR></TBODY></TABLE></P><P class="head1">SAPTOOLBAR_DEMO1</P><P><TABLE class="tblimg" cellPadding="0" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/demo/500_003.gif"><BR>Ein umfangreiches Testprogramm f&uuml;r Toolbars</P></TD></TR></TBODY></TABLE></P><P class="head1">RSDEMO_TOOLBAR_DIALOGBOX</P><P><TABLE class="tblimg" cellPadding="0" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/demo/500_005.gif"><BR>Eine Toolbar in der&nbsp;Dialogbox</P></TD></TR></TBODY></TABLE></P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/demoprogramme-zur-toolbar/">Demoprogramme zur Toolbar</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/demoprogramme-zur-toolbar/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
