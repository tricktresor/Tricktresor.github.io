<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Zevolving Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/zevolving/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:25:00 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Zevolving Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Warum Entwurfsmuster?</title>
		<link>/blog/warum-entwurfsmuster/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 07 Mar 2014 14:25:51 +0000</pubDate>
				<category><![CDATA[Entwurfsmuster]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[programmierung]]></category>
		<category><![CDATA[Zevolving]]></category>
		<category><![CDATA[Muster]]></category>
		<category><![CDATA[Entwicklung]]></category>
		<category><![CDATA[abap]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4541</guid>

					<description><![CDATA[<p>Entwurfsmuster (engl.: "Design Pattern") sind inzwischen ein n√ºtzliches Werkzeug in der Programmierung. Allerdings sind Entwurfsmuster teilweise sehr komplex, abstrakt und schwer zu erkennen. In der Tricktresor-Rubrik Entwurfsmuster m√∂chte ich Entwurfsmuster selbst, Anwendungshinweise, Vor- und Nachteile und alles andere, was irgendwie mit Entwurfsmustern zu tun hat, sammeln.</p>
<p>Der Beitrag <a href="/blog/warum-entwurfsmuster/">Warum Entwurfsmuster?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Entwurfsmuster (engl.: &#8220;Design Pattern&#8221;) sind inzwischen ein n√ºtzliches Werkzeug in der Programmierung. Allerdings sind Entwurfsmuster teilweise sehr komplex, abstrakt und schwer zu erkennen. In der Tricktresor-Rubrik <em>Entwurfsmuster</em> m√∂chte ich Entwurfsmuster selbst, Anwendungshinweise, Vor- und Nachteile und alles andere, was irgendwie mit Entwurfsmustern zu tun hat, sammeln. Dass hierbei der Fokus auf SAP und ABAP liegt, ist hoffentlich selbstverst√§ndlich&#8230;?! <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png" alt="üòâ" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<h2>Was ist ein Entwurfsmuster?</h2>
<p>Entwurfsmuster sind L√∂sungen f√ºr definierte programmiertechnische Probleme. Ein Entwurfsmuster hat bestimmte Eigenschaften, die speziell f√ºr immer wiederkehrende Probleme in der Softwareentwicklung erdacht wurden.</p>
<h2>Und was hei√üt das jetzt konkret?</h2>
<p>Ich mag Vergleiche. Auch wenn nicht alles, was hinkt, ein Vergleich ist&#8230; Mein Vater hat mich fr√ºher immer genervt, wenn er alles bei Computern mit Autos verglichen hat. Aber selbst bei teilweise √ºbel hinkenden Analogien kann man eine abstrakte Sache sehr ¬†gut beschreiben.</p>
<p>Ich versuche das mal nicht mit Autos, sondern mit Holz. Nehmen wir an, dass Holz die Programmiersprache ist und Softwareentwicklung das Tischlerhandwerk ist. Der Tischler kann mit Holz vieles bauen, was der Kunde w√ºnscht: Carports, Tische, B√§nke, Schr√§nke usw. F√ºr einige W√ºnsche reicht die Programmiersprache &#8220;Holz&#8221; unter Umst√§nden nicht aus: Waschbecken, Auto, Mikrowelle.</p>
<p>Aber bei den meisten allt√§glichen W√ºnschen, reicht der Werkstoff Holz jedoch. Zudem wei√ü der Kunde meistens auch, dass er f√ºr seinen Wunsch einen Tischler (ABAP-Programmierer) bestellen muss. Damit der Tischler nicht jedes Mal neu forschen muss, wie er am besten die Beine eines Stuhles oder Tisches zusammen leimt, hat er daf√ºr ein <em>Entwurfsmuster</em> gelernt. Das gibt dem Tischler die Sicherheit, dass die Beine stabil und robust sind.</p>
<p>Und auch die realen Gegenst√§nde in der Welt des Tischlers sind h√§ufig Entwurfsmuster: Stuhl, Hocker, Tisch, Apothekerschrank, Carport, &#8230; Der Vorteil hierbei ist: Jeder wei√ü sofort, √ºber was gesprochen wird und was f√ºr Eigenschaften das Objekt hat. Der Kunde muss dem Tischler nicht erkl√§ren, dass er &#8220;etwas haben m√∂chte, worauf man sitzen kann&#8221;. Weder Tischler noch Kunde m√ºssen sich Gedanken dar√ºber machen, ob man vielleicht eine gro√üe Kiste nehmen k√∂nnte und ob das Objekt auch eine Last von 500 kg aushalten muss und auch nicht, ob es schwimmen k√∂nnen muss. Die Eigenschaften sind klar und alle Beteiligten k√∂nnen sich √ºber Details unterhalten. Gegebenenfalls muss das Entwurfsmuster gewechselt werden, wenn bei den Details heraus kommt, dass noch andere Eigenschaften gefordert sind, die das bisherige Entwurfsmuster nicht leisten kann. In dem Beispiel mit dem Stuhl k√∂nnte man eventuell zum <em>Entwurfsmuster</em> Bank wechseln.</p>
<h2>Historie</h2>
<p>Die Entwurfsmuster gehen zur√ºck auf die <a title="Gang Of Four | Wikipedia" href="http://de.wikipedia.org/wiki/Viererbande_(Softwareentwicklung)"><em>Gang Of Four</em></a>. Die vier &#8220;Bandenmitglieder&#8221; Erich Gamma, Richard Helm, Ralph Johnson und John Vlissides haben die Entwurfsmuster zwar nicht erfunden, aber sie waren die ersten, die die Muster in einem Katalog zusammen gefasst haben. Diese Sammlung von 1995 <a title="Design Patterns | amazon.de" href="http://www.amazon.de/Patterns-Elements-Reusable-Object-Oriented-Software/dp/0201633612/ref=sr_1_1?ie=UTF8&amp;qid=1394198450&amp;sr=8-1&amp;keywords=gang+of+four+design+pattern"><em>Design Patterns. Elements Of Reusable Object-Oriented Software</em></a> geh√∂rt mittlerweile zum Standardwerk in der Softwareentwicklung.</p>
<h2>Vorteile</h2>
<p>Zwei Vorteile von Entwurfsmustern sind bei dem Tischlerbeispiel bereits deutlich geworden:</p>
<ul>
<li>Eindeutigkeit: trotzdem ein Sachverhalt komplex ist, kann er mithilfe von Entwurfsmustern einfach dargestellt und diskutiert werden</li>
<li>Erprobte L√∂sungen f√ºr wiederkehrende Aufgaben: Der Programmierer muss sich keine Gedanken machen, wie bestimmte Fragestellungen gel√∂st werden k√∂nnen. Er kann sich in der Werkzeugkiste Entwurfsmuster bedienen.</li>
</ul>
<p>Weitere Vorteile sind (abh√§ngig vom Entwurfsmuster):</p>
<ul>
<li>leichte Erweiterbarkeit</li>
<li>Wartbarkeit</li>
<li>Flexibilit√§t</li>
<li>Vor- und Nachteile eines Entwurfsmusters sind im Voraus bekannt</li>
</ul>
<h2>Nachteile</h2>
<p>Wo Licht ist, da ist auch Schatten. Entwurfsmuster sind teilweise extrem komplex und zudem h√∂chst abstrakt. Das bedeutet f√ºr den Programmierer, dass er sich intensiv mit dem Thema &#8220;Entwurfsmuster&#8221; besch√§ftigen muss. Um wirklich gut mit Entwurfsmustern arbeiten zu k√∂nnen, m√ºssen diese in Fleisch und Blut √ºbergehen. Ich bin fast versucht zu sagen, dass man dabei eine h√∂here <em>Programmierer-Bewusstseinsebene</em> erreicht&#8230; <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png" alt="üòâ" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Entwurfsmuster sind schwer bis gar nicht zu erkennen. Wenn selbst ein einfaches Muster nicht durch den Namen &#8211; zum Beispiel als SINGLETON oder FACTORY &#8211; gekennzeichnet ist, ist es schwer, es als dieses zu erkennen. Da die Objekte eines Entwurfsmusters nicht zwingend zusammen h√§ngen, sondern als einzelne Klassen durch das SAP-System geistern, ist es wichtig, dass diese erstens entsprechend gekennzeichnet und zweitens gut dokumentiert werden.</p>
<h2>Fazit</h2>
<p>Meines Erachtens f√ºhrt f√ºr einen Entwickler, der seinen Job ernst nimmt, kein Weg mehr an Entwurfsmustern vorbei. Die Entwicklung im ABAP wird immer &#8220;Objekt lastiger&#8221;. Dementsprechend werden auch Entwurfsmuster wichtiger. Sie werden von der SAP eingesetzt und m√ºssen vom ABAP-Entwickler benutzt werden.</p>
<p>Auch sind die Zeiten vorbei, in der man sich zu jedem Problem eine eigene L√∂sung einfallen lassen musste. Es gibt viele st√§ndig wiederkehrende Aufgabenstellungen, bei denen der Kunde wenig Verst√§ndnis zeigen wird, wenn man hierzu eine eigene L√∂sung entwickeln will.</p>
<h2>Weitere Quellen</h2>
<ul>
<li><a title="Zevolving | Naimesh Patel" href="http://zevolving.com/category/abapobjects/oo-design-patterns/">ABAP-Blog: ZEVOLVING</a></li>
<li><a title="SCN Blog | Igor Barbaric" href="http://scn.sap.com/people/igor.barbaric/blog">SCN Blog of Igor Barbaric</a></li>
<li><a title="SCN | SAP contributors" href="http://search.sap.com/ui/scn#query=oo+abap+design+pattern&amp;startindex=1&amp;filter=scm_a_site%28scm_v_Site11%29&amp;filter=scm_a_modDate%28*%29&amp;timeScope=all">SCN-Beitr√§ge zu ABAP OO Design Patterns</a></li>
<li><a title="Pattern Library | Hillside" href="http://hillside.net/patterns/">Design Pattern Library</a></li>
</ul>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/warum-entwurfsmuster/">Warum Entwurfsmuster?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
