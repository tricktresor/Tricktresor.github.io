<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>shellstyle Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/shellstyle/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 18 Feb 2014 08:44:41 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>shellstyle Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Slider (2)</title>
		<link>/blog/slider-2/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 08 Mar 2012 14:51:23 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[Sonstiges]]></category>
		<category><![CDATA[cl_gui_control]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[register events]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[OCX]]></category>
		<category><![CDATA[class definition]]></category>
		<category><![CDATA[class implementation]]></category>
		<category><![CDATA[set property]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[shellstyle]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[cl_gui_custom_container]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[cl_gui_textedit]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=638</guid>

					<description><![CDATA[<p>Noch eine Variante des Sliders. Diesmal mithilfe einer Windows-OCX-Bibliothek. Der Slider hat keine Beschriftung, hat aber den Vorteil, dass auf eine Wert&#228;nderung sofort reagiert werden kann.</p>
<p>Der Beitrag <a href="/blog/slider-2/">Slider (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Noch eine Variante des Sliders. Diesmal mithilfe einer Windows-OCX-Bibliothek. Der Slider hat keine Beschriftung, hat aber den Vorteil, dass auf eine Wertänderung sofort reagiert werden kann.</p>
<h2 class="head1">Dynpro</h2>
<p>Sie müssen das Dynpro 9000 anlegen mit folgenden &#8220;Custom Containern&#8221;:</p>
<ul>
<li>CONTAINER_TEXT</li>
<li>SLIDER_TOP</li>
<li>SLIDER_LEFT</li>
</ul>
<p><code> +----------------------------------------+<br />
|  SLIDER_TOP                            |<br />
+----+----------------------------------------+<br />
|    |                                        |<br />
| SL |  CONTAINER_TEXT                        |<br />
| ID |                                        |<br />
| ER |                                        |<br />
| _  |                                        |<br />
| LE |                                        |<br />
| FT |                                        |<br />
|    |                                        |<br />
|    |                                        |<br />
+----+----------------------------------------+</code></p>
<h2 class="head1">Screenshot</h2>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/slider2.jpg" /><br />
So sieht der Slider aus</td>
</tr>
</tbody>
</table>
<h2 class="head1">Coding</h2>
<pre>REPORT.

DATA: gcl_text TYPE REF TO cl_gui_textedit.

*----------------------------------------------------------------------*
* CLASS my_slider DEFINITION
*----------------------------------------------------------------------*
CLASS my_slider DEFINITION INHERITING FROM cl_gui_control.
PUBLIC SECTION.
METHODS: constructor
IMPORTING
value(parent) TYPE REF TO cl_gui_object
value(name) TYPE string OPTIONAL
value(style) TYPE i OPTIONAL
value(orientation) TYPE i
DEFAULT 0 " 1 = vertical
value(maximum) TYPE i
DEFAULT 10
value(event_while_move) TYPE flag
DEFAULT ' '
EXCEPTIONS error_cntl_create
gui_type_not_supported,
dispatch REDEFINITION.
EVENTS: on_change EXPORTING value(slider_position) TYPE i.

DATA: event_while_move TYPE flag.

PRIVATE SECTION.
METHODS: register_events.

ENDCLASS. "my_slider DEFINITION

*----------------------------------------------------------------------*
* CLASS LCL_eventreceiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_eventreceiver DEFINITION.
PUBLIC SECTION.
CLASS-METHODS: handle_on_change FOR EVENT on_change
OF my_slider
IMPORTING sender
slider_position.
ENDCLASS. "LCL_eventreceiver DEFINITION

END-OF-SELECTION.
PERFORM create_objects.
CALL SCREEN 9000.

*&amp;---------------------------------------------------------------------*
*&amp; Form CREATE_OBJECTS
*&amp;---------------------------------------------------------------------*
FORM create_objects.

DATA repid TYPE syrepid.
DATA dynnr TYPE sydynnr.
DATA cl_container TYPE REF TO cl_gui_custom_container.
DATA cl_container2 TYPE REF TO cl_gui_custom_container.

repid = sy-repid.
dynnr = '9000'.

CREATE OBJECT cl_container
EXPORTING
container_name = 'CONTAINER_TEXT'
repid = repid
dynnr = dynnr.
CREATE OBJECT gcl_text
EXPORTING
parent = cl_container.

DATA: cl_slider TYPE REF TO my_slider.

CREATE OBJECT cl_container
EXPORTING
container_name = 'SLIDER_TOP'
repid = repid
dynnr = dynnr.
CREATE OBJECT cl_slider
EXPORTING
parent = cl_container
maximum = 20
event_while_move = 'X'.
SET HANDLER lcl_eventreceiver=&gt;handle_on_change FOR cl_slider.

CREATE OBJECT cl_container
EXPORTING
container_name = 'SLIDER_LEFT'
repid = repid
dynnr = dynnr.
CREATE OBJECT cl_slider
EXPORTING
parent = cl_container
maximum = 5
orientation = 1.
SET HANDLER lcl_eventreceiver=&gt;handle_on_change FOR cl_slider.

ENDFORM. " CREATE_OBJECTS

*----------------------------------------------------------------------*
* CLASS my_slider IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS my_slider IMPLEMENTATION.

METHOD dispatch.

DATA: value TYPE i.

GET PROPERTY OF me-&gt;h_control-obj 'Value' = value.
RAISE EVENT on_change EXPORTING slider_position = value.

ENDMETHOD. "dispatch

METHOD register_events.
DATA: ex_event TYPE cntl_event.
DATA: events_ex TYPE cntl_events. " table

IF me-&gt;event_while_move = 'X'.
ex_event-eventid = 1."Jede Bewegung
ELSE.
ex_event-eventid = 2."Nur am ende
ENDIF.
ex_event-is_shellevent = ' '.
ex_event-is_systemevent = 'X'.

APPEND ex_event TO events_ex.
CALL METHOD me-&gt;set_registered_events_ex
EXPORTING
eventtab = events_ex.

ENDMETHOD. "register_events

METHOD constructor.
DATA prog_id(80).

IF parent IS INITIAL.
RAISE error_cntl_create.
ENDIF.

CLASS cl_gui_cfw DEFINITION LOAD.

* assign prog_id to get the frontend specific control
IF NOT activex IS INITIAL.
prog_id = 'MSComctlLib.Slider'.
ELSEIF NOT javabean IS INITIAL.
RAISE gui_type_not_supported.
ENDIF.

IF prog_id IS INITIAL.
RAISE gui_type_not_supported.
ENDIF.

* Set the window styles of the control when style parameter was not
* set with constructor call.
* For more information on the styles see WIN32 SDK
IF style IS INITIAL.
* otherwise the control would be invisible and the mistake would be
* hard to find
style = cl_gui_control=&gt;ws_visible
+ cl_gui_control=&gt;ws_child
+ cl_gui_control=&gt;ws_clipsiblings.

ENDIF.

* Create the control
CALL METHOD super-&gt;constructor
EXPORTING
clsid = prog_id
shellstyle = style
parent = parent
lifetime = lifetime
name = name
EXCEPTIONS
OTHERS = 1.

IF sy-subrc &lt;&gt; 0.
RAISE error_cntl_create.
ENDIF.

me-&gt;event_while_move = event_while_move.

* Slidereigenschaften
SET PROPERTY OF me-&gt;h_control-obj 'Max' = maximum.
SET PROPERTY OF me-&gt;h_control-obj 'Orientation' = orientation.
SET PROPERTY OF me-&gt;h_control-obj 'Text' = 'Tricktresor-Slider'.

* register instance at framework
CALL METHOD cl_gui_cfw=&gt;subscribe
EXPORTING
shellid = h_control-shellid
ref = me
EXCEPTIONS
OTHERS = 1.

IF sy-subrc &lt;&gt; 0.
RAISE error_cntl_create.
ENDIF.
me-&gt;register_events( ).
ENDMETHOD. "constructor

ENDCLASS. "my_slider IMPLEMENTATION

*----------------------------------------------------------------------*
* CLASS LCL_eventreceiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_eventreceiver IMPLEMENTATION.
METHOD handle_on_change.

DATA text TYPE string.
DATA: slider TYPE REF TO my_slider.

slider ?= sender.

WRITE slider_position TO sy-lisel LEFT-JUSTIFIED.
IF slider-&gt;event_while_move = 'X'.
CONCATENATE 'X-Position: Moving to' sy-lisel
INTO text SEPARATED BY space.
ELSE.
CONCATENATE 'Y-Position: End of Move:' sy-lisel
INTO text SEPARATED BY space.
ENDIF.

gcl_text-&gt;set_textstream( EXPORTING text = text ).
ENDMETHOD. "handle_on_change
ENDCLASS. "LCL_eventreceiver DEFINITION</pre>
<p>Der Beitrag <a href="/blog/slider-2/">Slider (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Container-Rahmen</title>
		<link>/blog/container-rahmen/</link>
					<comments>/blog/container-rahmen/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 19 Aug 2011 17:17:36 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[Rahmen]]></category>
		<category><![CDATA[shellstyle]]></category>
		<category><![CDATA[docker]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[cl_gui_docking_container]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Docking-Container]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=616</guid>

					<description><![CDATA[<p>Ein Docking-Container hat normalerweise einen breiten Rahmen, damit dessen Gr&#246;&#223;e leicht ge&#228;ndert werden kann. Das ist aber nicht immer erw&#252;nscht... </p>
<p>Der Beitrag <a href="/blog/container-rahmen/">Container-Rahmen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ein Docking-Container hat normalerweise einen breiten Rahmen, damit dessen Größe leicht geändert werden kann. Das ist aber nicht immer erwünscht&#8230;</p>
<p class="head1">Durch Dick und Dünn</p>
<p>Bei CREATE OBJECT des Containers kann in der Regel der Parameter STYLE übergeben werden. Dieser wird intern auf Standarwerte gesetzt, wenn er nicht vom Aufrufer übergeben wird.</p>
<p>Mit diesem Aufruf können Sie einen Docking-Container mit einer dünnen Linie anstatt des dicken 3d-Rahmens erzeugen.</p>
<p class="head1">So sieht&#8217;s aus</p>
<p>So sieht der Rahmen normalerweise aus:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/abap/Bild565.jpg" /></p>
<p>So sieht er mit dünnem Rahmen aus:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/abap/Bild566.jpg" /></p>
<p>Dieser kann allerdings nicht mehr vom Anwender verschoben werden!!</p>
<p class="head1">Coding DÜNN</p>
<p class="sap1">DATA shellstyle TYPE i.</p>
<p>*** define Shellstyle<br />
shellstyle = cl_gui_container=&gt;ws_visible<br />
+ cl_gui_container=&gt;ws_child.</p>
<p>*** Create Docking Container<br />
CREATE OBJECT gr_dock<br />
EXPORTING<br />
side      = cl_gui_docking_container=&gt;dock_at_top<br />
extension = 10<br />
style     = shellstyle.</p>
<p class="head1">Oder anders herum&#8230;</p>
<p>Den Tric kann man allerdings auch genau anders herum verwenden! So sieht ein ALV-Grid im Container normalerweise aus:</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/ALV/Alv_rahmen_duenn.jpg" /><br />
ALV-Grid mit normalem Rahmen</td>
</tr>
</tbody>
</table>
<p>Mit dem richtigen Style kann man dem Container einen dicken Rahmen verpassen:</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/ALV/alv_rahmen_dick.jpg" /><br />
ALV mit dickem Rahmen</td>
</tr>
</tbody>
</table>
<p class="head1">Coding DICK</p>
<p>Hier ist das Coding dazu:</p>
<p class="sap1"><span style="color: #fb2412;">*** Style</span><br />
DATA lv_style TYPE i.</p>
<p>lv_style = cl_gui_container=&gt;ws_thickframe<br />
+ cl_gui_container=&gt;ws_visible<br />
+ cl_gui_container=&gt;ws_child.</p>
<p><span style="color: #fb2412;">*** Create Custom Container</span><br />
CREATE OBJECT gr_cc<br />
EXPORTING<br />
style          = lv_style<br />
container_name = &#8216;CUSTOM_CONTAINER&#8217;<br />
EXCEPTIONS<br />
OTHERS         = 6.</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/container-rahmen/">Container-Rahmen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/container-rahmen/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
