<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Controls Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/controls/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Mon, 23 May 2022 08:53:38 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Controls Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Hierarchiedarstellung von Controls</title>
		<link>/blog/hierarchiedarstellung-von-controls/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 27 Feb 2020 07:59:04 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[Hierarchie]]></category>
		<category><![CDATA[cl_column_tree_model]]></category>
		<category><![CDATA[Controls]]></category>
		<guid isPermaLink="false">/?p=1023256</guid>

					<description><![CDATA[<p>Hierarchien sind was Tolles! Controls sind auch toll! Wir sollten sie nutzen, so lange es sie noch gibt (Stichwort Fiori, ABAP in the Cloud etc.). Deswegen ein schönes Demoprogramm zur Analyse von GUI-Controls zur Laufzeit und Darstellung als Baumstruktur mit Hilfe der Klasse CL_COLUMN_TREE_MODEL. GUI-Elemente GUI-Controls sind ActiveX-Steuerlemente, die mit dem Stichwort EnjoySAP zu SAP Release 4.6C eingeführt wurden. Sie werden auch OCX-Controls genannt. Hier gibt es im Grunde zwei unterschiedliche Arten: Container Controls Sie...</p>
<p>Der Beitrag <a href="/blog/hierarchiedarstellung-von-controls/">Hierarchiedarstellung von Controls</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Hierarchien sind was Tolles! Controls sind auch toll! Wir sollten sie nutzen, so lange es sie noch gibt (Stichwort Fiori, ABAP in the Cloud etc.). Deswegen ein schönes Demoprogramm zur Analyse von GUI-Controls zur Laufzeit und Darstellung als Baumstruktur mit Hilfe der Klasse CL_COLUMN_TREE_MODEL.</p>



<h2 class="wp-block-heading">GUI-Elemente</h2>



<p>GUI-Controls sind ActiveX-Steuerlemente, die mit dem Stichwort EnjoySAP  zu SAP Release 4.6C eingeführt wurden. Sie werden auch OCX-Controls genannt. Hier gibt es im Grunde zwei unterschiedliche Arten:</p>



<ul><li>Container</li><li>Controls</li></ul>



<p>Sie alle haben eine Gemeinsamkeit, sie erben nämlich alle von der Hauptklasse CL_GUI_CONTROL. Verwirrender Weise erbt CL_GUI_CONTAINER von CL_GUI_CONTROL.</p>



<h3 class="wp-block-heading">Container</h3>



<p>Typische Container sind:</p>



<ul><li>CL_GUI_CUSTOM_CONTAINER Container for customer controls in the dynpro area</li><li>CL_GUI_DIALOGBOX_CONTAINER Container for customer controls in the dynpro area</li><li>CL_GUI_DOCKING_CONTAINER Docking Control Container</li><li>CL_GUI_EASY_SPLITTER_CONTAINER Reduced Version of Splitter Container Control</li><li>CL_GUI_SIMPLE_CONTAINER Anonymous Container</li><li>CL_GUI_SPLITTER_CONTAINER Splitter Control</li></ul>



<p>Etwas ungewöhnlicher ist der CL_GUI_GOS_CONTAINER für Generic Objects. Wer sich ansehen möchte, was für Schweinereien man mit diesem machen kann, sollte sich <a href="/blog/hacking-sapgui/">Hacking SAPGUI</a> ansehen.</p>



<p>Container haben die Besonderheit, dass sie weitere Container oder Controls enthalten können.</p>



<h3 class="wp-block-heading">Controls</h3>



<p>Die meistgebrauchten Controls sind sicherlich:</p>



<ul><li>CL_GUI_ALV_GRID</li><li>CL_GUI_TEXTEDIT</li><li>CL_GUI_PICTURE</li><li>CL_GUI_HTML_VIEWER</li><li>CL_GUI_TOOLBAR</li></ul>



<p>Sie alle benötigen einen CL_GUI_CONTAINER, in dem sie dargestellt werden.</p>



<h2 class="wp-block-heading">Control-Hierarchie</h2>



<p>Ich habe ein kleines Programm geschrieben, das eine einfache Anwendung aus zwei Splittern, zwei Textedit-Controls und einem Picture-Control erstellt.</p>



<figure class="wp-block-image size-large"><img fetchpriority="high" decoding="async" width="856" height="632" src="/wp-content/uploads/2020/02/container_tree_demo.png" alt="" class="wp-image-1023258" srcset="/wp-content/uploads/2020/02/container_tree_demo.png 856w, /wp-content/uploads/2020/02/container_tree_demo-300x221.png 300w, /wp-content/uploads/2020/02/container_tree_demo-768x567.png 768w" sizes="(max-width: 856px) 100vw, 856px" /><figcaption>Container und Controls</figcaption></figure>



<h2 class="wp-block-heading">Hierarchieanalyse</h2>



<p>Die Klasse ZCL_TRCKTRSR_CONTAINER_TREE analysiert die Objektstruktur und stellt diese hierarchisch dar. </p>



<figure class="wp-block-image size-large"><img decoding="async" width="700" height="329" src="/wp-content/uploads/2020/02/container_tree_vars.png" alt="" class="wp-image-1023260" srcset="/wp-content/uploads/2020/02/container_tree_vars.png 700w, /wp-content/uploads/2020/02/container_tree_vars-300x141.png 300w" sizes="(max-width: 700px) 100vw, 700px" /><figcaption>Hierarchiedarstellung der verwendeten GUI-Controls</figcaption></figure>



<h3 class="wp-block-heading">Objekt-ID</h3>



<p>Im Debugger sieht man die Objekt-ID der erzeugten Objekte:</p>



<figure class="wp-block-image size-large"><img decoding="async" width="422" height="128" src="/wp-content/uploads/2020/02/SNAG-00023.png" alt="" class="wp-image-1023259" srcset="/wp-content/uploads/2020/02/SNAG-00023.png 422w, /wp-content/uploads/2020/02/SNAG-00023-300x91.png 300w" sizes="(max-width: 422px) 100vw, 422px" /><figcaption>Objekt-ID von GO_PARENT</figcaption></figure>



<p>Die Objekte werden bei Programmausführung durchnummeriert und erhalten so eine eindeutige Objekt-ID. Der folgende Code ermittelt die Objekt-ID zu einem Objekt:</p>



<pre class="wp-block-preformatted">DATA lo_obj TYPE REF TO cl_abap_objectdescr.

lo_obj ?= cl_abap_typedescr=>describe_by_object_ref( io_object ).

DATA(lv_relname) = lo_obj->get_relative_name( ).
DATA lv_object_id TYPE i.
CALL 'OBJMGR_GET_INFO' ID 'OPNAME' FIELD 'GET_OBJID'
                       ID 'OBJID'  FIELD lv_object_id
                       ID 'OBJ'    FIELD io_object.
rv_object_name = |\{O:{ lv_object_id }*{ 
                 lo_obj->absolute_name }|.</pre>



<h2 class="wp-block-heading">github</h2>



<p>Das Demoprogramm liegt bei github und kann mit Hilfe von <a href="https://github.com/larshp/abapGit">abapGit </a>heruntergeladen werden:</p>



<p><a href="https://github.com/tricktresor/container_hierarchy">https://github.com/tricktresor/container_hierarchy</a></p>



<h2 class="wp-block-heading">guidrasil</h2>



<p>Wenn du Lust bekommen hast, dich noch weiter mit Controls zu beschäftigen, dann schaue dir meinen Control-Designer <a href="/blog/gui-designer-guidrasil/">guidrasil</a> an.</p>
<p>Der Beitrag <a href="/blog/hierarchiedarstellung-von-controls/">Hierarchiedarstellung von Controls</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Anzeige von XML-Strings</title>
		<link>/blog/anzeige-von-xml-strings/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 24 Jun 2014 08:39:16 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[xml]]></category>
		<category><![CDATA[string]]></category>
		<category><![CDATA[xstring]]></category>
		<category><![CDATA[anzeige]]></category>
		<category><![CDATA[display]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4869</guid>

					<description><![CDATA[<p>Die Anzeige von XML-Daten zur Information oder zu Debug-Zwecken ist sinnvoll und hilfreich. Mit diesen beiden Bausteinen ist das schnell erledigt. Die XML-Daten werden in einem Popup mithilfe des HTML-Controls angezeigt.</p>
<p>Der Beitrag <a href="/blog/anzeige-von-xml-strings/">Anzeige von XML-Strings</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Die Anzeige von XML-Daten zur Information oder zu Debug-Zwecken ist sinnvoll und hilfreich. Mit diesen beiden Bausteinen ist das schnell erledigt. Die XML-Daten werden in einem Popup mithilfe des HTML-Controls angezeigt:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_24_100628.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4870" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_24_100628-291x300.jpg" alt="Display XML" width="291" height="300" srcset="/wp-content/uploads/2014/06/Bild_2014_06_24_100628-291x300.jpg 291w, /wp-content/uploads/2014/06/Bild_2014_06_24_100628-624x642.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_24_100628.jpg 670w" sizes="(max-width: 291px) 100vw, 291px" /></a></p>
<h2>Coding</h2>
<pre>*== data
  DATA lv_xml_data    TYPE string.
  DATA lv_xml_xstring TYPE xstring.

*== Convert string to Xstring
  CALL FUNCTION 'J_3RT_CONV_STRING_TO_XSTRING'
    EXPORTING
      im_string  = lv_xml_data
    IMPORTING
      ex_xstring = lv_xml_xstring.

*== display XML data
  CALL FUNCTION 'DISPLAY_XML_STRING'
    EXPORTING
      xml_string      = lv_xml_xstring
    EXCEPTIONS
      no_xml_document = 1
      OTHERS          = 2.</pre>
<h2>Veraltet&#8230;</h2>
<p>Wie so vieles, was man sich mühsam erarbeitet hat, ist auch dieser Tipp veraltet. Inzwischen gibt es eine kleine Methode im Standard, die auch gerne in den Code-Beispielen verwendet wird:</p>
<pre>cl_abap_browser=&gt;show_xml( 
         EXPORTING xml_string = lv_xmldata
                   size       = CL_ABAP_BROWSER=&gt;xlarge ).</pre>
<p>Der Beitrag <a href="/blog/anzeige-von-xml-strings/">Anzeige von XML-Strings</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>High Definition SAP? Ein Erfahrungsbericht</title>
		<link>/blog/high-definition-sap-ein-erfahrungsbericht/</link>
					<comments>/blog/high-definition-sap-ein-erfahrungsbericht/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 19 Jun 2014 19:14:57 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Hilfe]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Generell]]></category>
		<category><![CDATA[Materialstamm]]></category>
		<category><![CDATA[Rahmen]]></category>
		<category><![CDATA[SAPGUI]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[auflösung]]></category>
		<category><![CDATA[Performance]]></category>
		<category><![CDATA[elemente]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Darstellung]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[skalierung]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[Schriftgröße]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4819</guid>

					<description><![CDATA[<p>Mehr ist besser. Das gilt für Geschwindigkeit, Speicher und auch die Auflösung. Dass dies jedoch im Falle der Auflösung nicht unbedingt der Fall ist, möchte ich dir in diesem Artikel zeigen. Ein Notebook mit der Auflösung von 2880x1620 Bildpunkten sollte ein scharfes Bild und gemütliches Arbeiten garantieren. Leider ist dem nicht so, denn nicht nur das Betriebssystem muss mitspielen, sondern auch alle anderen Programme. Wie auch der SAPGUI...</p>
<p>Der Beitrag <a href="/blog/high-definition-sap-ein-erfahrungsbericht/">High Definition SAP? Ein Erfahrungsbericht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ich habe ein neues Notebook: Lenovo T540p. Ein tolles Gerät! Schnell, lautlos und eine Auflösung von 2880&#215;1620 Bildpunkten. Bringt die hohe Auflösung etwas bei der Arbeit mit SAP? Um es gleich vorweg zu nehmen: Nein. Im Gegenteil, es bereitet eher Probleme, denn nicht alle GUI-Elemente werden entsprechend vergrößert.</p>
<h2>Generell</h2>
<p>Eine hohe Auflösung ist erst einmal toll, denn das Bild wird schärfer. Theoretisch jedenfalls, denn praktisch müssen alle beteiligten Komponenten mithelfen. Bei einer hohen Auflösung wird erst einmal alles kleiner, denn viele GUI-Elemente werden in Pixel gemessen und nicht in ihrer wahren Darstellungsgröße. Ein Desktopicon von Windows XP hat eine feste Größe von 32&#215;32 Pixeln. Moderne Betriebssysteme haben zwar inzwischen deutliche größere Icons, jedoch ist das gesamte Zusammenspiel zwischen Fenster, Fensterrahmen, Icons, GUI-Elementen (Dropdownboxen, Scrollbalken, Kontextmenus etc) und der Schrift wichtig. Nicht nur das Betriebssystem muss eine Skalierung der Darstellungsgröße unterstützen, sondern auch die Software. Meine Testsoftware ist in diesem Fall der SAPGUI.</p>
<h2>SAPGUI 730</h2>
<p>Den SAPGUI kann man skalieren indem man die Schriftgröße einstellt:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190643.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4835 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190643-300x229.jpg" alt="Bild_2014_06_19_190643" width="300" height="229" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190643-300x229.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190643-1024x782.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190643-624x476.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190643.jpg 1604w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Der Dialog sieht im Großen und Ganzen gut aus. Auffällig ist, dass die <em>Aufklapper</em> am TreeControl äußerst klein ausfallen. Dieser Umstand zieht sich leider durch den gesamten SAPGUI. Aus diesem Grund muss man bei der Arbeit mit einer hohen Auflösung auch bei einer großen Darstellung der Objekte eine ruhige Maushand haben.</p>
<h2>Windows-Einstellungen</h2>
<p>Im Folgenden möchte ich euch einfach mehr oder weniger kommentarlos ein paar Screenshots zeigen, die ich mit einer Windows-Skalierung von (meistens) 200% gemacht habe:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190619.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4823 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190619-300x184.jpg" alt="Bild_2014_06_19_190619" width="300" height="184" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190619-300x184.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190619-624x384.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190619.jpg 812w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Zum Angeben hier noch ein Screenshot meiner Auflösung:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190637.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4824 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190637-300x136.jpg" alt="Bild_2014_06_19_190637" width="300" height="136" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190637-300x136.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190637-624x283.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190637.jpg 908w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Icons und Fenster werden dadurch im Windows so dargestellt, dass ich nicht nach zwei Stunden Arbeit mit Augenkrebs rechnen muss.</p>
<h2>Testen der SAPGUI-Elemente</h2>
<p>Die folgenden Testst habe ich mit dem <a title="Signature Theme | SAP Design Guild" href="http://www.sapdesignguild.org/resources/visualdesign_mic.asp">Signature-Theme</a> gemacht. Um die einzelnen Controls auszuprobieren, habe ich die gängigen Entwicklungswerkzeuge geprüft und bin die SAP-Demoprogramme durchgegangen.</p>
<p>Als erstes viel mir auf, dass die Standardicons leider alle unscharf dargestellt werden:</p>
<p><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4843" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190653.jpg" alt="Bild_2014_06_19_190653" width="145" height="55" /></p>
<p>Auch die Suchhilfe sieht unschön aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190631.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4840 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190631-300x130.jpg" alt="Bild_2014_06_19_190631" width="300" height="130" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190631-300x130.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190631-1024x446.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190631-624x272.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190631.jpg 1552w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Im Startmenü sieht man deutlich, wie klein die <em>Baumaufklapper</em> sind. Auch ist gut zu erkennen, dass die Standardelemente unscharf sind:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190610.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4837 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190610-300x269.jpg" alt="Bild_2014_06_19_190610" width="300" height="269" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190610-300x269.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190610-624x560.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190610.jpg 760w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Hilfe zum SAPGUI ist okay:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190601.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4829 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190601-300x287.jpg" alt="Bild_2014_06_19_190601" width="300" height="287" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190601-300x287.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190601-624x597.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190601.jpg 972w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Eine Registerkarte verschluckt ein Teil der Beschriftung. Die Icons sowie die Schrift auf Drucktasten sieht sehr gequetscht aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190658.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4836 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190658-300x55.jpg" alt="Bild_2014_06_19_190658" width="300" height="55" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190658-300x55.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190658-624x115.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190658-800x148.jpg 800w, /wp-content/uploads/2014/06/Bild_2014_06_19_190658.jpg 803w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Icons im SAPLOGON werden nicht skaliert:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190604.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4822 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190604-300x90.jpg" alt="Bild_2014_06_19_190604" width="300" height="90" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190604-300x90.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190604-624x188.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190604.jpg 752w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die F1-Hilfe im Performance-Assistant hat ein Problem mit dem Splitter:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190628.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4830 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190628-300x84.jpg" alt="Bild_2014_06_19_190628" width="300" height="84" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190628-300x84.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190628-1024x288.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190628-624x175.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190628.jpg 1100w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h3>Entwicklungswerkzeuge</h3>
<p>Der Formulareditor sieht erstaunlicherweise sehr gut aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190659.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4847 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190659-300x68.jpg" alt="Bild_2014_06_19_190659" width="300" height="68" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190659-300x68.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190659-1024x233.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190659-624x142.jpg 624w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die grafische Tabellendarstellung ist okay (Transaktion SE11)</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190645.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4846 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190645-300x158.jpg" alt="Bild_2014_06_19_190645" width="300" height="158" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190645-300x158.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190645-1024x541.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190645-624x329.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190645.jpg 1302w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die SE80 hat große Probleme bei der Darstellung der Web-Elemente:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190645.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4820 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190651-300x148.jpg" alt="Bild_2014_06_19_190651" width="300" height="148" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190651-300x148.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651-1024x507.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651-624x308.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651.jpg 1036w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Schriftart im Editor lässt sich im übrigen einfach in der unteren rechten Ecke einstellen. Dies geht unabhängig von der Skalierung sehr gut:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_210641.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4848 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_210641-300x194.jpg" alt="Bild_2014_06_19_210641" width="300" height="194" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_210641-300x194.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_210641-624x404.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_210641.jpg 742w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Zum Vergleich: So sollte die SE80 aussehen:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_200629.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4827 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_200629-300x184.jpg" alt="Bild_2014_06_19_200629" width="300" height="184" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_200629-300x184.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_200629-624x384.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_200629.jpg 710w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Der grafische Dynproeditor sieht ebenfalls merkwürdig aus. Die Dynpro-Elemente sind deutlich größer als der Rest der Anwendung;</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190625.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4821 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190625-300x208.jpg" alt="Bild_2014_06_19_190625" width="300" height="208" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190625-300x208.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190625-1024x712.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190625-624x434.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190625.jpg 1299w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Der Quickviewer sieht auf den ersten Blick gut aus. Auf den zweiten Blick fällt auf, dass die Schlüsselfelder mit einem äußerst kleinen Symbol gekennzeichnet sind. Die Überschrift in der Navigation passt nicht 100%ig. In der Drucktastenleiste sieht man wieder sehr schön, dass die Icons unscharf sind:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190602.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4845 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190602-300x253.jpg" alt="Bild_2014_06_19_190602" width="300" height="253" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190602-300x253.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190602-1024x866.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190602-624x527.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190602.jpg 1026w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h3>Controls</h3>
<p>Als erstes habe ich das Calendar Control getestet. Gruselig und nicht zu verwenden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190651-2.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4844" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190651-2.jpg" alt="Bild_2014_06_19_190651 (2)" width="666" height="221" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190651-2.jpg 666w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651-2-300x99.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651-2-624x207.jpg 624w" sizes="(max-width: 666px) 100vw, 666px" /></a></p>
<p>Dropdown-Listboxen werden gut dargestellt:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190609.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4842 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190609-300x192.jpg" alt="Bild_2014_06_19_190609" width="300" height="192" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190609-300x192.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190609-624x399.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190609.jpg 687w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die HTML-Elemente auf Dynamischen Dokumenten sehen nicht wirklich gut aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190639.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4841 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190639-300x144.jpg" alt="Bild_2014_06_19_190639" width="300" height="144" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190639-300x144.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190639-1024x494.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190639-624x301.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190639.jpg 1129w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Das Text Control &#8211; hier ein Beispiel aus dem Materialstamm &#8211; sieht gut aus. Alle Elemente habe eine einheitliche Größe:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190654.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4839 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190654-300x140.jpg" alt="Bild_2014_06_19_190654" width="300" height="140" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190654-300x140.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190654-1024x480.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190654-624x292.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190654.jpg 1343w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Im ALV-Grid-Control fällt wieder auf, dass die Icons in der Toolbar unscharf sind. Das Element &#8220;Alle Einträge markieren&#8221; ist zu klein:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190616.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4838 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190616-300x102.jpg" alt="Bild_2014_06_19_190616" width="300" height="102" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190616-300x102.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190616-1024x348.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190616-624x212.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190616.jpg 1363w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Im Tree Control fallen erneut lediglich die kleinen Aufklapper auf (bzw. eigentlich fallen sie gar nicht auf, weil sie so klein sind&#8230;):</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_200604.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4828 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_200604-300x87.jpg" alt="Bild_2014_06_19_200604" width="300" height="87" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_200604-300x87.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_200604-1024x298.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_200604-624x182.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_200604.jpg 1498w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Der grafische Texteditor ist okay auch wenn die Listboxen zur Auswahl der Formate zu klein sind:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190618.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4833 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190618-300x80.jpg" alt="Bild_2014_06_19_190618" width="300" height="80" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190618-300x80.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190618-624x166.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190618.jpg 1016w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Druckansicht zeigt ein deutliches Missverhältnis zwischen Rahmen und Vorschautext:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190626-2.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4832 size-full" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190626-2.jpg" alt="Bild_2014_06_19_190626 (2)" width="290" height="309" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190626-2.jpg 290w, /wp-content/uploads/2014/06/Bild_2014_06_19_190626-2-281x300.jpg 281w" sizes="(max-width: 290px) 100vw, 290px" /></a></p>
<h2>Fazit</h2>
<p>Eine große Auflösung ist toll. Leider macht die Software noch nicht komplett mit. Das gilt nicht nur für den SAPGUI, auch andere Softwareprodukte haben Schwierigkeiten mit der hohen Auflösung. Die meisten Probleme sind eher kleiner Natur, jedoch stören sie für mein Empfinden den tollen Gesamteindruck eines so stark ausgestatteten Rechners. Immerhin möchte ich mit einem besseren Computer als vorher ein besseres Ergebnis haben und kein schlechteres. Ich kann also nicht empfehlen, einen Windows-Computer mit einer so hohen Auflösung zu kaufen. In vielen Fällen bringt dies Probleme mit sich. Es wird sicherlich noch ein paar Entwicklungszyklen brauchen, bis die Darstellung auf hochauflösenden Displays zufriedenstellend sein wird.</p>
<p>Die Skalierung des SAPGUI funktioniert in den meisten Fällen gut. Anwender dürften wenig Probleme haben. Ich kann mir gut vorstellen, dass SAP in den nächsten SAPGUI-Updates die ärgerlichsten Fehler beheben wird und vielleicht gibt es demnächst auch ein High-Definition-Theme von SAP?</p>
<p>Interessant wäre noch, wie sich das <a title="Corbu Design | SAP Design Guild" href="http://help.sap.com/saphelp_nw73ehp1/helpdata/de/13/20a20fb440434da696cb450d2a6bd3/content.htm">Corbu-Design</a> verhält.</p>
<h2>Problemlösung</h2>
<p>Nachdem die Darstellung des SAPGUI teilweise wirklich gruselig war und das Arbeiten im Falle der SE80 sogar stark behindert, habe ich mich entschieden, die Auflösung des Notebook-Displays einfach auf 1920&#215;1080 Pixel einzustellen. Die Auflösung des Bildschirms ist einerseits so hoch, dass ich keine Verzerrung und kein Verschwimmen bemerke und auf der anderen Seite ist sie hoch genug um viel Programm anzuzeigen. Es ist ein kleiner Wermutstropfen wenn ich meine Pferdestärken nicht ausfahren kann, aber das können mein Ego und ich verschmerzen&#8230;</p>
<h2>Nachtrag</h2>
<p>Wie bereits erwähnt wäre noch interessant, wie sich das Corbu-Theme verhält. Dies habe ich auch noch ausprobiert.</p>
<p>Leider sind auch hier &#8211; wie zu erwarten &#8211; die Icons unscharf, da sie nur in einer geringen Auflösung vorliegen:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180655.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4860 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180655-300x175.jpg" alt="Corbu-Theme groß" width="300" height="175" srcset="/wp-content/uploads/2014/06/Bild_2014_06_23_180655-300x175.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_23_180655-1024x598.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_23_180655-624x364.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_23_180655.jpg 1027w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>Auch der SAPGUI in der Version 740 bringt leider keine Besserung&#8230;</p>
<p>Der Beitrag <a href="/blog/high-definition-sap-ein-erfahrungsbericht/">High Definition SAP? Ein Erfahrungsbericht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/high-definition-sap-ein-erfahrungsbericht/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>ALV-Grid-Erweiterung &#8220;Langtext&#8221;</title>
		<link>/blog/alv-grid-erweiterung-langtext/</link>
					<comments>/blog/alv-grid-erweiterung-langtext/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 13 Jun 2014 19:07:40 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[Dokumentation]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[Texte]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[BAdI]]></category>
		<category><![CDATA[GUI]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4811</guid>

					<description><![CDATA[<p>Immer mal wieder stolpere ich über kleine Perlen im SAP-Standard. Diese Perle ist evtl. in einem älteren System noch nicht vorhanden, aber die Funktionalität finde ich sehr nett. Gut zu wissen, dass es sowas gibt.</p>
<p>Der Beitrag <a href="/blog/alv-grid-erweiterung-langtext/">ALV-Grid-Erweiterung &#8220;Langtext&#8221;</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Heute war Tag der Ablenkung. Nachdem ich in der CL_GUI_ALV_GRID-Klasse etwas herum experimentiert hatte, bin ich nun auch noch über eine Ableitung dieser Klasse mit der Erweiterung <em>Automatische Langtextermittlung</em> gestoßen: Die Klasse heißt CL_ALV_GRID_XT, das zugehörige Demoprogramm lautet R_ALV_GRID_XT.</p>
<p>Um zu verstehen, was SAP in diesem Fall mit <em>Langtext</em> meint, habe ich eine abgespeckte Demoversion geschrieben. In diesem Programm wird die Tabelle TVKO, die die Definition der Verkaufsorganisationen enthält. Mit der automatischen Langtextermittlung  können Felder definiert werden, die entweder einen beschreibenden Text in einer zugehörigen Customizingtabelle haben, oder bei dem die Werte als Festwerte in der Domäne hinterlegt sind.</p>
<p>Der Parameter <em>KEEP = X</em> bewirkt, dass das Schlüsselfeld angezeigt wird. Bei <em>KEEP = space</em> wird das Feld automatisch ausgeblendet und es wird nur das Feld mit dem Langtext angezeigt.</p>
<p>[notice type = &#8216;info&#8217;]Zusätzlich gibt es die Option <em>Ausgabe optimieren</em>. Wird diese Option aktiviert, dann werden bei der Ausgabe alle komplett leeren Spalten ausgeblendet. Ein nettes Feature![/notice]</p>
<h2>Beschreibung</h2>
<p>Das Demoprogramm liest die Tabelle TVKO. Die Beschreibung der Verkaufsorganisationen stehen in der Texttabelle TVKOT. Um diese in einem ALV anzuzeigen müsste man entweder einen View bemühen oder die Texte aus der Tabelle manuell nachlesen. Diese Arbeit nimmt uns die Option <em>Automatische Langtextermittlung</em> ab. Um nicht extra eine neue Tabelle bzw. einen Feldkatalog aufbauen zu müssen, verwende ich vorhandene Felder, in die die Langtexte geschrieben werden. Der Name der VKORG kommt in das Feld TXNAM_KOP, der zugehörige Festwert zum Feld BSTYP ins Feld TXNAM_SDB.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_200629.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4812" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_200629.jpg" alt="Bild_2014_06_13_200629" width="724" height="126" srcset="/wp-content/uploads/2014/06/Bild_2014_06_13_200629.jpg 724w, /wp-content/uploads/2014/06/Bild_2014_06_13_200629-300x52.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_13_200629-624x108.jpg 624w" sizes="(max-width: 724px) 100vw, 724px" /></a></p>
<h2>Coding</h2>
<pre>REPORT.

PARAMETER p_optim  TYPE xfeld DEFAULT 'X'.
PARAMETER p_ltxt   TYPE xfeld DEFAULT 'X'.
PARAMETER p_keep   TYPE xfeld DEFAULT 'X'.


DATA gt_autotext   TYPE alv_auto_text_t.
DATA gt_data       TYPE STANDARD TABLE OF tvko.
DATA gr_alv        TYPE REF TO cl_alv_grid_xt.
DATA gr_container  TYPE REF TO cl_gui_custom_container.


START-OF-SELECTION.
  PERFORM start_of_selection.

*---------------------------------------------------------------------*
*       Form  start_of_selection
*---------------------------------------------------------------------*
*       Start program execution
*---------------------------------------------------------------------*
FORM start_of_selection.

  PERFORM get_data.

  IF p_ltxt IS NOT INITIAL.
    PERFORM prep_auto_text.
  ENDIF.

  CALL SCREEN 100.

ENDFORM.                    "start_of_selection

*&amp;---------------------------------------------------------------------*
*&amp;      Form  prep_auto_text
*&amp;---------------------------------------------------------------------*
FORM prep_auto_text.

  DATA ls_autotext LIKE LINE OF gt_autotext.

  ls_autotext-keep_fieldname_visible = p_keep.
  ls_autotext-fieldname              = 'VKORG'.
  ls_autotext-fieldname_longtext     = 'TXNAM_KOP'.
  INSERT ls_autotext INTO TABLE gt_autotext.

  ls_autotext-keep_fieldname_visible = p_keep.
  ls_autotext-fieldname              = 'BSTYP'.
  ls_autotext-fieldname_longtext     = 'TXNAM_SDB'.
  INSERT ls_autotext INTO TABLE gt_autotext.

ENDFORM.                    "prep_auto_text
*---------------------------------------------------------------------*
*       Form  get_data
*---------------------------------------------------------------------*
*       Select application data (here SFLIGHT)
*---------------------------------------------------------------------*
FORM get_data.

  FIELD-SYMBOLS &lt;data&gt; LIKE LINE OF gt_data.

*== read all sales organizations
  SELECT * FROM tvko INTO TABLE gt_data.

*== clear fields that shall contain the long text
  LOOP AT gt_data ASSIGNING <data>.
    CLEAR &lt;data&gt;-txnam_kop.
    CLEAR &lt;data&gt;-txnam_sdb.
  ENDLOOP.

ENDFORM.                    "get_data

*----------------------------------------------------------------------*
*       Module  d0100_init  OUTPUT
*----------------------------------------------------------------------*
*       Initialize ALV Grid screen
*----------------------------------------------------------------------*
MODULE d0100_init OUTPUT.

  SET: PF-STATUS '100',
       TITLEBAR  '100'.

  CHECK gr_container IS INITIAL.


*== Create ALV container
  CREATE OBJECT gr_container
    EXPORTING
      container_name = 'ALV_GRID'.

*== Create ALV grid
  CREATE OBJECT gr_alv
    EXPORTING
      i_parent          = gr_container
      i_optimize_output = p_optim
      it_auto_text_det  = gt_autotext.


* Display ALV data
  CALL METHOD gr_alv-&gt;set_table_for_first_display
    EXPORTING
      i_save                        = 'A'
      i_structure_name              = 'TVKO'
    CHANGING
      it_outtab                     = gt_data
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.

ENDMODULE.                 " d0100_init  OUTPUT

*----------------------------------------------------------------------*
*       Module  d0100_exit  INPUT
*----------------------------------------------------------------------*
MODULE d0100_exit INPUT.

  CALL METHOD: gr_alv-&gt;free,
               gr_container-&gt;free.

  LEAVE TO SCREEN 0.
ENDMODULE.                 " d0100_exit  INPUT</pre>
<h2>Dynpro</h2>
<p>Das Dynpro 100 muss angelegt werden und der GUI-Status &#8220;100&#8221; ebenfalls. Das PAI-Modul anzupassen, so dass es funktioniert, sollte ein Kinderspiel sein.</p>
<p>[notice type=&#8217;info&#8217;]Der SAP-Demoreport bietet noch eine Funktionalität mit BAdI <em>BADI_ALV_GRID_XT </em>(Transaktion SE18). Diese werde ich mir evtl. demnächst noch einmal anschauen und berichten. Die Dokumentation verspricht einiges: &#8220;Es ist Ihnen mit Hilfe dieser Daten möglich, kundeneigene Felder im Grid zu füllen, den Feldkatalog zu ändern und sich auf Events des Grid<br />
Controls zu registrieren, z.B. TOOLBAR oder USER_COMMAND.[/notice]</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/alv-grid-erweiterung-langtext/">ALV-Grid-Erweiterung &#8220;Langtext&#8221;</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/alv-grid-erweiterung-langtext/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>SimDia² &#8211; SAP-Datenimport einfach?</title>
		<link>/blog/simdia2-sap-datenimport-einfach/</link>
					<comments>/blog/simdia2-sap-datenimport-einfach/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 14 Apr 2014 15:24:30 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[Partner]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[color]]></category>
		<category><![CDATA[Scripting]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[Tools]]></category>
		<category><![CDATA[simdia]]></category>
		<category><![CDATA[programmierung]]></category>
		<category><![CDATA[LSMW]]></category>
		<category><![CDATA[Dynpros]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Popups]]></category>
		<category><![CDATA[EXCEL]]></category>
		<category><![CDATA[Batch Input]]></category>
		<category><![CDATA[SAPGUI]]></category>
		<category><![CDATA[Viewcluster]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Entwicklung]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4659</guid>

					<description><![CDATA[<p>Für die Datenmigration von Fremdsystemen oder Excel stehen in SAP viele Möglichkeiten offen. In diesem Artikel stelle ich euch SimDia² vor mit dem die Datenübernahme aus Exceldateien ein Kinderspiel wird. Die Übernahme der Felder wird durch einfaches Anklicken im SAPGUI definiert. Es können "Kopfdaten" und "Positionsdaten" übernommen werden. </p>
<p>Der Beitrag <a href="/blog/simdia2-sap-datenimport-einfach/">SimDia² &#8211; SAP-Datenimport einfach?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><span style="line-height: 1.5em;">[pullquote float=&#8217;left&#8217; color=&#8217;#000000&#8242; bgcolor=&#8217;#ffffff&#8217;]Wir schärfen Ihre Axt, während Sie den Baum fällen.[/pullquote] So lautet das Motto von </span><a style="line-height: 1.5em;" title="ERSAsoft | Homepage" href="https://ersasoft.de/de?s=tt">ERSAsoft</a><span style="line-height: 1.5em;">.&nbsp;</span>Der Slogan ist eine Anspielung auf das Zitat „Ich hab keine Zeit meine Axt zu schärfen. Ich muss einen Baum fällen.“ aus der Erzählung „Komm, ich erzähl dir eine Geschichte“ von <a title="Jorge Bucay | Wikipedia" href="http://de.wikipedia.org/wiki/Jorge_Bucay">Jorge Bucay</a>.</p>
<p>Er soll den Anspruch von ERSAsoft verdeutlichen, Tools zu entwickeln, die „den Umgang mit SAP so einfach und komfortabel wie möglich gestalten“. Ob das Datenimport-Tool SimDia²&nbsp; diesem Anspruch wirklich gerecht wird, wollte ich prüfen.</p>
<h2>Was ist SimDia²?</h2>
<p><a href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> ist ein ein Tool, um Daten aus Excel nach SAP zu importieren. Dabei arbeitet das Programm direkt im SAPGUI-Dialog. Damit wird auch schnell klar, welche Zielrichtung SimDia² verfolgt: den Import kleinster bis mittlerer Datenmengen (von zwei bis &gt;10.000 Datensätzen). Für wirklich große Datenmigrationen mit mehreren 100.000 oder gar Millionen Datensätzen ist es nicht gedacht.</p>
<p>Aufgaben, bei denen Daten von Excel in eine SAP-Transaktion übertragen werden, sollen mit SimDia² einfacher werden. Auf der&nbsp;<a title="Demo-Videos | SimDia²" href="https://ersasoft.de/de/videos/?s=tt">Video-Seite&nbsp;</a>werden deswegen auch typische Beispiele aus der täglichen Arbeit eines SAP-Fachanwenders vorgestellt: Personaldaten erfassen, Rechnungen buchen oder Materialstücklisten einpflegen.</p>
<p>Diese Videos habe ich mir natürlich angesehen und war begeistert. Das Versprechen „Dateneingabe so einfach und komfortabel wie möglich“ war offensichtlich kein leeres. Und dass man damit wohl auch mehr machen kann, als Stamm- und Bewegungsdaten zu importieren, war mir schnell klar. Aber dazu später mehr.</p>
<h2>Technik</h2>
<p><span style="line-height: 1.5em;"><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_21_17_05_56.jpg"><img loading="lazy" decoding="async" class="alignright size-medium wp-image-4662" src="https://tricktresor.com/wp-content/uploads/2014/03/03_21_17_05_56-300x255.jpg" alt="simdia und se11" width="300" height="255" srcset="/wp-content/uploads/2014/03/03_21_17_05_56-300x255.jpg 300w, /wp-content/uploads/2014/03/03_21_17_05_56-624x531.jpg 624w, /wp-content/uploads/2014/03/03_21_17_05_56.jpg 861w" sizes="(max-width: 300px) 100vw, 300px" /></a>Nachdem ich mich in meinem SAP-Leben bereits häufiger mit den verschiedensten Tools zur Datenübernahme beschäftigt habe, war ich gespannt, was SimDia² zu bieten hat. Bei meinem ersten Kontakt mit dem Tool fand ich es spontan sehr innovativ und hilfreich, dass sich das SimDia²-Fenster in den SAP GUI integriert. Technisch stimmt das zwar nicht, denn SimDia²&nbsp; ist ein reines Windows-Programm mit einem eigenen Fenster, das sich über den SAP GUI legt, aber es sieht zuerst einmal so aus, als wäre das Tool nahtlos in SAP integriert.</span></p>
<p>Das Programm verwendet die SAP GUI Scripting API, um Daten mit SAP GUI auszutauschen sowie VBA als Schnittstelle zu Excel. Ein gravierender Vorteil der Realisierung als Windows-Programm: außer einem aktivierten GUI-Scripting sind keinerlei Eingriffe in SAP erforderlich.</p>
<p>Darüber hinaus ist SimDia² praktisch „out-of-the-box“ ablauffähig. Ausgeliefert wird es als ZIP-Archiv: nach dem Entpacken ist es <a href="https://ersasoft.de/de/videos/?s=tt#Video1">sofort startklar</a>.</p>
<h2>Anwendung</h2>
<p>Wie erwähnt, ist SimDia² als Datenimport-Tool konzipiert. Diese Aufgabe bewältigte es in den (wenigen) von mir durchgeführten Tests problemlos. Da ich aber aus der Entwicklung komme und eher selten (eigentlich: nie) typische Daten-Imports durchführen muss, habe ich überlegt, mit welcher Anwendung ich SimDia² noch testen könnte.</p>
<p>Dabei stieß ich auf eine Tätigkeit, die mich jedes Mal schrecklich nervt: das Anlegen von Datenelementen und den dazugehörigen Domänen in ABAP. Da meine Entwicklungen in der Regel eher übersichtlich sind, kommt das massenweise Anlegen von Datenelementen und Domänen bei mir nicht häufig vor. Ich kann mir jedoch gut vorstellen, dass SimDia² bei größeren Projekten, in denen zuvor ein umfangreiches Datenmodell erstellt wird, gut zum Einsatz kommen kann.</p>
<p>Hierfür könnten die Attribute von allen Datenelementen und Domänen in einer Excel-Datei einfach erfasst, diskutiert und gegebenenfalls noch geändert werden. Sobald die Entwicklung in SAP beginnt, lässt man die Repository Objekte durch SimDia²&nbsp;anlegen.</p>
<p>Um zu prüfen, wie SimDia² mit Popups, Radiobuttons und Ankreuzfeldern klar kommt, wollte ich Datenelement und Domäne in einem Rutsch anlegen. Alle notwendigen Attribute hatte ich in einer Excel-Datei gespeichert und die Aufzeichnung gestartet.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/04_14_16_53_40.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-4707 alignleft" src="https://tricktresor.com/wp-content/uploads/2014/03/04_14_16_53_40-300x158.jpg" alt="simdia Excel" width="300" height="158" srcset="/wp-content/uploads/2014/03/04_14_16_53_40-300x158.jpg 300w, /wp-content/uploads/2014/03/04_14_16_53_40-624x330.jpg 624w, /wp-content/uploads/2014/03/04_14_16_53_40.jpg 724w" sizes="(max-width: 300px) 100vw, 300px" /></a><span style="line-height: 1.5em;">Für die Aufzeichnung werden im SimDia²-Fenster die Daten aus der ersten Tabellenzeile als Druckknöpfe angezeigt.</span></p>
<p>Zur programm-internen <a href="https://ersasoft.de/de/videos/?s=tt#Tutorial1">Verknüpfung der Excel-Daten mit den jeweiligen SAP-Feldern</a> positioniert man einfach den Cursor im gewünschten SAP-Feld und klickt im SimDia²-Fenster auf den entsprechenden Button. Der Wert wird daraufhin übernommen und die Aktion aufgezeichnet. So verfährt man, bis alle erforderlichen Felder und Aktionen in SAP erfolgt und aufgezeichnet sind.&nbsp;Und das geht nun wirklich schnell, einfach und intuitiv.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_21_17_07_33.jpg"><img loading="lazy" decoding="async" class="alignright size-medium wp-image-4664" src="https://tricktresor.com/wp-content/uploads/2014/03/03_21_17_07_33-236x300.jpg" alt="simdia_buttons" width="236" height="300" srcset="/wp-content/uploads/2014/03/03_21_17_07_33-236x300.jpg 236w, /wp-content/uploads/2014/03/03_21_17_07_33.jpg 415w" sizes="(max-width: 236px) 100vw, 236px" /></a></p>
<p><b>Funktionalität</b></p>
<p>SimDia² kann grundsätzlich mit allen SAP-Dynpros und Transaktionen arbeiten (einige Transaktionen sind allerdings zur Automatisierung nicht besonders gut geeignet; s.u.). Dabei ist es egal, ob es sich um Standard-, modifizierte oder kundeneigene Transaktionen handelt. Auch nachträgliche Dynpro-Änderungen sind unproblematisch &#8211; solange keine in der Aufzeichnung benutzte Datenfelder entfernt werden.</p>
<p>Während des Imports werden alle SAP-Meldungen direkt in der Excel-Datei protokolliert, sodass alle innerhalb von SAP durchgeführten Verarbeitungsschritte nachvollzogen werden können.</p>
<p>Darüber hinaus enthält SimDia² einige Funktionen, die ich in anderen Import-Tools noch nie gesehen habe. Hier nur zwei Beispiele:</p>
<ul>
<li>In Table Controls lassen sich nicht nur neue Sätze <span style="text-decoration: underline;">anlegen</span>. Auch bereits existierende Sätze können zielsicher identifiziert und <span style="text-decoration: underline;">geändert</span> werden.</li>
<li>SimDia² kann nicht nur Daten aus Excel nach SAP übertragen, sondern auch umgekehrt. Aber nicht nur das. Die exportierten Daten können z.B. mit Excel-internen Funktionen beliebig modifiziert und sofort nach SAP zurück übertragen werden.</li>
</ul>
<p>Wie weiter oben bereits angedeutet, kann SimDia² aber auch noch mehr, als Daten zu importieren. Da das Programm alle in SAP vorgenommenen Aktionen aufzeichnen und später beliebig wiederholen kann, eignet es sich auch super als Automatisierungstool für SAP. Da ist es egal, ob man schnell mal ein paar hundert Datensätze in einem Testsystem löschen muss, ViewCluster in der Transaktion SM34 anlegen will oder regelmäßig ein paar dutzend Reports ausführen soll.</p>
<h2>Pro und Contra</h2>
<p>SimDia² ist darauf spezialisiert, <em>flache Daten</em> und dazugehörige <em>Positionsdaten</em> zu übernehmen. Es können keine Abfragen oder Verzweigungen programmiert werden. Das macht das Tool einerseits sehr interessant für Key- oder Poweruser, die „ihre“ Imports jetzt selbst vorbereiten und durchführen können.</p>
<p>Gleichzeitig zeigen sich aber auch die Grenzen zur klassischen Programmierung. Sobald eine SAP-Anwendung auf einen Eingabewert mit unterschiedlichen Dynpros &#8220;antwortet&#8221;, muss der Anwender für jeden Eingabewert eine eigene Aufzeichnung erstellen.</p>
<p>Dem steht jedoch der benötigte Zeitaufwand gegenüber: mit etwas Erfahrung (s.u.) braucht man für eine Aufzeichnung mit SimDia² nicht länger als 1-2 Minuten. Bei einem Import mit der LSMW sind dies wohl eher 1-2 Stunden. Und ganz zu schweigen natürlich von einer klassisch programmierten Lösung.</p>
<p>Der Support von <a href="https://ersasoft.de/de/?s=tt">ERSAsoft</a> ist super. Probleme oder Fragen sind schnell per Mail, Telefon oder Teamviewer geklärt. Rüdiger Specht, Gründer und Inhaber, ist dabei stets ruhig, freundlich, geduldig und kompetent. Bei Problemen oder Schwierigkeiten redet er nicht um den heißen Brei herum, sondern sagt klar und deutlich, was Sache ist.</p>
<h2>Fazit</h2>
<p>Obwohl SimDia² sehr einfach zu bedienen ist, hatte ich die ersten Male das Gefühl, dass es &#8220;rum zickt&#8221;. Ich habe jedoch schnell gemerkt, dass die Zickerei an den unterschiedlich programmierten SAP-Programmen liegt. Bei der Aufzeichnung muss man sich an die Gegebenheiten der SAP-Transaktionen richten. Auch wenn SimDia² einfach zu bedienen und schnell zu erlernen ist, heißt es auch hier: Übung macht den Meister und SAP-Knowhow sollte vorhanden sein.</p>
<p>Insgesamt ist SimDia² sehr innovativ, wirklich einfach zu bedienen und schnell zu erlernen. Das ist das riesengroße Plus. Das, was ich bei SimDia² vermisst habe, als negativ zu bewerten, wäre falsch, denn einem Porsche kreide ich auch nicht an, dass er zwar 260 km/h fährt, ich aber nicht gleichzeitig ein Klavier damit transportieren kann. SimDia² ist dafür konzipiert, bestimmte Aufgaben im Zusammenspiel mit Excel schnell und intuitiv zu lösen. Und das tut es.</p>
<p>Damit ist das Programm SAP-internen Tools wie LSMW oder Batch Input haushoch überlegen.</p>
<p>Ist eine Aufzeichnung erst einmal &#8220;im Kasten&#8221;, dann ist der Aufruf schnell möglich und die neuen Daten sind ratzfatz im SAP. Anwendern, die regelmäßig Daten von Excel nach SAP überführen müssen, kann ich SimDia² wirklich nur ans Herz legen.</p>
<h2>Update</h2>
<p>In diesem Artikel beschreibe ich die neue Version von SimDia²:</p>
<p>https://tricktresor.com/blog/simdia2-neue-version-des-besten-sap-import-tools/</p>
<p><br />
[accordian]</p>
<p>Und jetzt kommt das Beste: ERSAsoft bietet allen Tricktresor-Fans einen Nachlass von 5% an. Füllt einfach das unten stehende Formular aus und ihr bekommt den erwähnten Nachlass gewährt. So. Noch leichter kann ich euch den SAP-Datenimport wirklich nicht machen&#8230;!</p>
<h2>Tricktresor- Bonus</h2>
<p>[accordian_list title=&#8217;Sichere dir einen 5%-Rabatt auf SimDia²!&#8217;]</p>
<p>[notice type=&#8217;info&#8217;]</p>
<p>https://tricktresor.com/blog/simdia%C2%B2-als-alternative-zur-programmierung/</p>
<p>[/notice]</p>
<p>[/accordian_list]</p>
<p>[/accordian]</p>
<p></p>
<p>Der Beitrag <a href="/blog/simdia2-sap-datenimport-einfach/">SimDia² &#8211; SAP-Datenimport einfach?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/simdia2-sap-datenimport-einfach/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Drop Files in ALV-Grid</title>
		<link>/blog/drop-files-in-alv-grid/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 21 Feb 2014 13:43:34 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Datei]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Explorer]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4499</guid>

					<description><![CDATA[<p>In diesem Artikel erfährst du, wie du ein ALV-Grid dazu verwenden kannst, um Dateien aus dem Explorer per Drag and Drop in SAP zu übernehmen. Dabei werden jedoch nicht die Dateien selbst, sondern nur der Pfad und Dateiname zur Verfügung gestellt.</p>
<p>Der Beitrag <a href="/blog/drop-files-in-alv-grid/">Drop Files in ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><a class="keychainify-checked" href="https://tricktresor.com/wp-content/uploads/2014/02/02_21_14_37_32.jpg"><img loading="lazy" decoding="async" class="size-full wp-image-4500 alignright" src="https://tricktresor.com/wp-content/uploads/2014/02/02_21_14_37_32.jpg" alt="drag files in grid" width="263" height="231" /></a></p>
<p>Seit etwa 2012 ist es möglich, Dateien aus dem Explorer in ein ALV-Grid zu ziehen und die Namen dort zu verarbeiten (<a class="keychainify-checked" title="Drop External Files | SAP Note" href="http://search.sap.com/notes?id=0001748468">SAP Note 1748468</a>). Ob das in deinem SAP-System bereits funktioniert, kannst du daran erkennen, dass die Klasse CL_GUI_ALV_GRID die Methode GET_DROPPED_EXTERNAL_FILES hat.</p>
<p>Das Event DROP_EXTERNAL_FILES muss registriert werden und mit der Methode DRAG_ACCEPT_FILES( 1 ) muss die Funktionalität aktiviert werden.</p>
<p>Es kann das gesamte ALV-Grid-Control als &#8220;Ablagefläche&#8221; genutzt werden, also auch dort, wo keine Zeilen vorhanden sind. Werden die Dateien auf einer Zelle abgelegt, dann kann diese Zelle bestimmte werden. In dem Beispielcoding werden die Dateien der Spalte hinzugefügt, auf der sie abgelegt wurden.</p>
<h2>Coding</h2>
<pre>REPORT zz_drop_files_on_grid.

*----------------------------------------------------------------------*
*       CLASS lcl_appl DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_appl DEFINITION.

  PUBLIC SECTION.

*== type for Grid-Demonstration: Columns EINS, ZWEI and DREI
    TYPES: BEGIN OF ty_files,
             eins TYPE string,
             zwei TYPE string,
             drei TYPE string,
           END OF ty_files.

*== table containing the data (text/ files)
    CLASS-DATA gt_data TYPE STANDARD TABLE OF ty_files.
*== ALV-Grid
    CLASS-DATA gr_grid TYPE REF TO cl_gui_alv_grid.

*== setup ALV-Grid
    CLASS-METHODS init.
*== get dropped files and display in grid
    CLASS-METHODS get_dropped_files FOR EVENT drop_external_files OF cl_gui_alv_grid
                                    IMPORTING files.

ENDCLASS.                    "lcl_appl DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_appl IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_appl IMPLEMENTATION.

  METHOD init.

*== local data
    DATA lt_fcat         TYPE lvc_t_fcat.
    FIELD-SYMBOLS &lt;fcat&gt; LIKE LINE OF lt_fcat.
    FIELD-SYMBOLS &lt;data&gt; LIKE LINE OF gt_data.

    CHECK gr_grid IS INITIAL.

*== set initial data
    DO 5 TIMES.
      APPEND INITIAL LINE TO gt_data ASSIGNING &lt;data&gt;.
      &lt;data&gt;-eins = 'Drop'.
      &lt;data&gt;-zwei = 'Files'.
      &lt;data&gt;-drei = 'Here'.
    ENDDO.

*== Create Grid-control
    CREATE OBJECT gr_grid
      EXPORTING
        i_parent = cl_gui_container=&gt;screen0.

*== build field catalog
    APPEND INITIAL LINE TO lt_fcat ASSIGNING &lt;fcat&gt;.
    &lt;fcat&gt;-fieldname = 'EINS'.
    &lt;fcat&gt;-reptext   = 'Eins'.
    &lt;fcat&gt;-style     = 1.
    &lt;fcat&gt;-datatype  = 'STRG'.
    APPEND INITIAL LINE TO lt_fcat ASSIGNING &lt;fcat&gt;.
    &lt;fcat&gt;-fieldname = 'ZWEI'.
    &lt;fcat&gt;-reptext   = 'Zwei'.
    &lt;fcat&gt;-style     = 2.
    &lt;fcat&gt;-datatype  = 'STRG'.
    APPEND INITIAL LINE TO lt_fcat ASSIGNING &lt;fcat&gt;.
    &lt;fcat&gt;-fieldname = 'DREI'.
    &lt;fcat&gt;-reptext   = 'Drei'.
    &lt;fcat&gt;-style     = 4.
    &lt;fcat&gt;-datatype  = 'STRG'.

*== display grid
    gr_grid-&gt;set_table_for_first_display(
      CHANGING it_fieldcatalog = lt_fcat
               it_outtab       = gt_data ).

*== Allow drop files action
    gr_grid-&gt;drag_accept_files( 1 ).

*== set handler to react on file drop
    SET HANDLER get_dropped_files FOR gr_grid ACTIVATION abap_true.

  ENDMETHOD.                                               "init

  METHOD get_dropped_files.

*== local data
    DATA lt_files        TYPE filetable.
    FIELD-SYMBOLS &lt;file&gt; LIKE LINE OF lt_files.
    DATA lv_row_id       TYPE i.
    DATA lv_col_id       TYPE i.
    FIELD-SYMBOLS &lt;data&gt; LIKE LINE OF gt_data.

*== get dropped files in a table
    gr_grid-&gt;get_dropped_external_files(
       IMPORTING  files     = lt_files
                  row_id    = lv_row_id
                  col_id    = lv_col_id
       EXCEPTIONS OTHERS    = 3 ).

*== put file names in grid
    IF lt_files IS NOT INITIAL.
      CLEAR gt_data.
      LOOP AT lt_files ASSIGNING &lt;file&gt;.
        APPEND INITIAL LINE TO gt_data ASSIGNING &lt;data&gt;.
        CASE lv_col_id.
          WHEN 1. &lt;data&gt;-eins = &lt;file&gt;.
          WHEN 2. &lt;data&gt;-zwei = &lt;file&gt;.
          WHEN 3. &lt;data&gt;-drei = &lt;file&gt;.
        ENDCASE.
      ENDLOOP.
*== refresh display
      gr_grid-&gt;refresh_table_display( ).
    ENDIF.

  ENDMETHOD.                                               "get_dropped_files

ENDCLASS.                                                  "lcl_appl IMPLEMENTATION

START-OF-SELECTION.

<!--StartFragment --><span class="L0S52">START-OF-SELECTION</span><span class="L0S55">.</span>
  <span class="L0S52">WRITE </span><span class="L0S33">'nothign to see here...!'</span><span class="L0S55">.</span>
  lcl_appl<span class="L0S70">=&gt;</span>init<span class="L0S55">( </span><span class="L0S55">)</span><span class="L0S55">.</span></pre>
<p>Der Beitrag <a href="/blog/drop-files-in-alv-grid/">Drop Files in ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Das ABAP Kochbuch</title>
		<link>/blog/abap-kochbuch/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 13 Jun 2013 16:20:03 +0000</pubDate>
				<category><![CDATA[Featured]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[programmierung]]></category>
		<category><![CDATA[Generic Object Services]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Änderungsbelege]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[Tools]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP Kochbuch]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=675</guid>

					<description><![CDATA[<p>Das ABAP Kochbuch. Rezepte zum Nachkochen. Erstellen Sie eine komplette Ticket-Anwendung und lernen Sie dabei die nützlichsten Tools und die einfachsten Techniken für eigene Anwendungen kennen. Tipps von Profis für Profis und solche, die es werden wollen.</p>
<p>Der Beitrag <a href="/blog/abap-kochbuch/">Das ABAP Kochbuch</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Rezepte zum Nachkochen. Erstellen Sie eine komplette Ticket-Anwendung und lernen Sie dabei die nützlichsten Tools und die einfachsten Techniken für eigene Anwendungen kennen. Es beginnt mit Tabellenpflegedialogen und Viewclustern. Dann werden etliche Module mithilfe von Enjoy-Controls erstellt. Diese werden unter Verwendung des Schubladen-Controls und eines eigens erstellten Frameworks in den Ticketdialog eingebunden. Sie erfahren etwas über Änderungsbelege, Tree-Controls, Drag&#8217;n&#8217;Drop, Smart Forms und Generic Object Services. Und auch E-Mail-Versand, Dynamische Programmierung und Webservices werden angesprochen. Da ist eigentlich für jeden etwas dabei!</p>
<p><a href="http://www.amazon.de/dp/383622108X?tag=tricktresor07-21&amp;camp=2906&amp;creative=19474&amp;linkCode=as4&amp;creativeASIN=383622108X&amp;adid=04DF95BB2B3XJKZHC1XD&amp;&amp;ref-refURL=http%3A%2F%2Frcm-eu.amazon-adsystem.com%2Fe%2Fcm%3Flt1%3D_blank%26bc1%3D000000%26IS2%3D1%26bg1%3DFFFFFF%26fc1%3D000000%26lc1%3D0000FF%26t%3Dtricktresor07-21%26o%3D3%26p%3D8%26l%3Das4%26m%3Damazon%26f%3Difr%26ref%3Dss_til%26asins%3D383622108X"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4043" alt="ABAP Kochbuch" src="http://tricktresor.com/wp-content/uploads/2013/06/ABAP_Kochbuch-300x245.jpg" width="300" height="245" srcset="/wp-content/uploads/2013/06/ABAP_Kochbuch-300x245.jpg 300w, /wp-content/uploads/2013/06/ABAP_Kochbuch-624x511.jpg 624w, /wp-content/uploads/2013/06/ABAP_Kochbuch.jpg 976w" sizes="(max-width: 300px) 100vw, 300px" /></a><br />
<a title="Das ABAP Kochbuch bei Amazon kaufen" href="http://www.amazon.de/gp/product/383622108X/ref=as_li_ss_tl?ie=UTF8&amp;camp=1638&amp;creative=19454&amp;creativeASIN=383622108X&amp;linkCode=as2&amp;tag=tricktresor07-21" target="_blank">Das ABAP Kochbuch bei Amazon</a></p>
<p><a title="Powered by Inwerken AG" href="http://www.Inwerken.de/" target="_blank">Powered by Inwerken AG</a></p>
<p>Der Beitrag <a href="/blog/abap-kochbuch/">Das ABAP Kochbuch</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Drag&#8217;n&#8217;Drop mit Datei</title>
		<link>/blog/dragndrop-mit-datei/</link>
					<comments>/blog/dragndrop-mit-datei/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 25 Nov 2011 17:01:49 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[cl_gui_docking_container]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[cl_gui_html_viewer]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[TextEditControl]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[docker]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=631</guid>

					<description><![CDATA[<p>In diesem Beispiel zeigen wir, wie Sie eine Datei aus dem Windows-Explorer auf ein SAP-Control ziehen k&#246;nnen und den Dateipfad sowie Dateinamen angezeigt bekommen. So l&#228;sst sich z.B. eine Anwendung programmieren, die Dateien per Drag'n'Drop entgegen nimmt und auf den Application server hoch l&#228;dt.</p>
<p>Der Beitrag <a href="/blog/dragndrop-mit-datei/">Drag&#8217;n&#8217;Drop mit Datei</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><a href="https://tricktresor.com/wp-content/uploads/2011/11/02_21_15_35_20.jpg"><img loading="lazy" decoding="async" class="alignright size-medium wp-image-4505" alt="Drag and drop html" src="https://tricktresor.com/wp-content/uploads/2011/11/02_21_15_35_20-300x158.jpg" width="300" height="158" srcset="/wp-content/uploads/2011/11/02_21_15_35_20-300x158.jpg 300w, /wp-content/uploads/2011/11/02_21_15_35_20-624x330.jpg 624w, /wp-content/uploads/2011/11/02_21_15_35_20.jpg 625w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>In diesem Beispiel zeigen wir, wie Sie eine Datei aus dem Windows-Explorer auf ein SAP-Control ziehen können und den Dateipfad sowie Dateinamen angezeigt bekommen. So lässt sich z.B. eine Anwendung programmieren, die Dateien per Drag&#8217;n&#8217;Drop entgegen nimmt und auf den Application server hoch lädt.<br />
SAP-Controls und Drag&#8217;n&#8217;Drop</p>
<p>SAP-Controls können normalerweise nur DragDropObjekte aufnehmen, die auch von einem SAP-Control erzeugt wurden.</p>
<p>Ausnahmen sind der ABAP-Editor und das TextEditControl: Sie können eine Textdatei auf das Control ziehen und der Inhalt wird im Control dargestellt.</p>
<p>Leider feuert kein Control ein Event &#8220;DropComplete&#8221;, auf das man reagieren könnte, geschweige denn, dass man schon bei &#8220;onDrop&#8221; entscheiden könnte, ob man dieses Objekt haben möchte oder nicht.</p>
<p>Eine Ausnahme bildet das HTML-Control, das ja den Internet Explorer verwendet um HTML- oder PDF-Dateien anzuzeigen.</p>
<p>Das Control CL_GUI_HTML_VIEWER erzeugt das Ereignis &#8220;NAVIGATE_COMPLETE&#8221;, sobald die &#8220;Navigation&#8221; abgeschlossen wurde. Eine Datei, die per Drag and Drop auf dieses Control gezogen wird, löst ebenfalls dieses Ereignis aus.</p>
<h2>Beschreibung</h2>
<p>Dieses Programm dockt das HTML-Control an das Selektionsbild an und zeigt die URL einer ge-drop-ten Datei an.</p>
<h2>Code</h2>
<pre>REPORT z_dock_drop.
*** Selection screen
PARAMETERS: p_url     TYPE string.
INITIALIZATION.
  PERFORM create_objects.

*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS:
      handle_navigate_complete
          FOR EVENT navigate_complete
          OF cl_gui_html_viewer
            IMPORTING url sender.
ENDCLASS.                    "lcl_event_receiver DEFINITION
*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver IMPLEMENTATION.

  METHOD handle_navigate_complete.
    p_url = url.
*    sender-&gt;go_back( ). "If object should not be displayed
  ENDMETHOD.                    "handle_sapevent
ENDCLASS.                    "lcl_event_receiver IMPLEMENTATION

*&amp;---------------------------------------------------------------------*
*&amp;      Form  CREATE_OBJECTS
*&amp;---------------------------------------------------------------------*
FORM create_objects.
*** Data
  DATA cl_docker         TYPE REF TO cl_gui_docking_container.
  DATA t_events        TYPE cntl_simple_events.
  DATA wa_event        LIKE LINE OF t_events.
  DATA event_receiver  TYPE REF TO lcl_event_receiver.
  DATA t_html          TYPE STANDARD TABLE OF text8192
                       WITH NON-UNIQUE DEFAULT KEY.
  DATA html            LIKE LINE OF t_html.
  DATA url             TYPE text1000.
  DATA cl_html         TYPE REF TO cl_gui_html_viewer.

*** create docker
  CREATE OBJECT cl_docker
    EXPORTING
      extension               = 300
      side                    = cl_gui_docking_container=&gt;dock_at_bottom
      no_autodef_progid_dynnr = 'X'.

*** create HTML
  CREATE OBJECT cl_html
    EXPORTING
      parent = cl_docker.

*** Register NAVIGATE_COMPLETE
  CALL METHOD cl_html-&gt;get_registered_events
    IMPORTING
      events = t_events.
      wa_event-eventid    = cl_gui_html_viewer=&gt;m_id_navigate_complete.
      wa_event-appl_event = 'X'.
  READ TABLE t_events TRANSPORTING NO FIELDS
        WITH KEY eventid = wa_event-eventid.
  IF sy-subrc &lt;&gt; 0.
    APPEND wa_event TO t_events.
  ENDIF.
  CALL METHOD cl_html-&gt;set_registered_events
    EXPORTING
      events = t_events.
SET HANDLER lcl_event_receiver=&gt;handle_navigate_complete FOR cl_html.

*** Build HTML-Code
  CONCATENATE  '&lt;html&gt;'
               '&lt;head&gt;&lt;title&gt;Dropzone&lt;/title&gt;'
               '&lt;/head&gt;'
               '&lt;body bgcolor="#22FF22"&gt;'
               '&lt;p&gt;&lt;font size= 30&gt;hierher mit den Bildern!!&lt;/font&gt;&lt;/p&gt;'
               '&lt;/body&gt;'
               '&lt;/html&gt;'
          INTO html.
  APPEND html TO t_html.

*** load HTML
  CALL METHOD cl_html-&gt;load_data
    IMPORTING
      assigned_url = url
    CHANGING
      data_table   = t_html.

*** Show HTML page
  CALL METHOD cl_html-&gt;show_url
    EXPORTING
      url = url.
ENDFORM.                    " CREATE_OBJECTS</pre>
<p>Der Beitrag <a href="/blog/dragndrop-mit-datei/">Drag&#8217;n&#8217;Drop mit Datei</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/dragndrop-mit-datei/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Event NODE_KEYPRESS</title>
		<link>/blog/event-node_keypress/</link>
					<comments>/blog/event-node_keypress/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 19 Aug 2011 09:49:29 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[Generell]]></category>
		<category><![CDATA[CL_GUI_SIMPLE_TREE]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[keypress]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[node]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[expand_root_nodes]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=612</guid>

					<description><![CDATA[<p>Mit dem Ereignis NODE_KEYPRESS kann man im Programm auf verschiedene Tastendr&#252;cke reagieren: F1, F4, Enter, Einf&#252;gen, L&#246;schen, STRG+X, STRG+C, STRG+V.</p>
<p>Der Beitrag <a href="/blog/event-node_keypress/">Event NODE_KEYPRESS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mit dem Ereignis NODE_KEYPRESS kann man im Programm auf verschiedene Tastendrücke reagieren: F1, F4, Enter, Einfügen, Löschen, STRG+X, STRG+C, STRG+V.</p>
<p class="head1">Beschreibung</p>
<p>Das folgende Programm generiert einen kleinen Baum mithilfe des Control CL_GUI_SIMPLE_TREE. Bei Programmstart wird der Focus sofort auf das TreeControl gesetzt, so dass der Anwender mithilfe der Cursortasten in dem Baum navigieren kann.</p>
<p>Steht der Cursor auf einem Eintrag, so können die Tasten &#8220;F1&#8221;, &#8220;Enter&#8221; oder &#8220;Löschen&#8221; gedrückt werden. Das Ereignis NODE_KEYPRESS muss dafür natürlich registriert werden.</p>
<p>Zusätzlich müssen aber die Tasten, auf die der Tree reagieren soll auch noch bekannt gegeben werden. Das passiert mit der Methode ADD_KEY_STROKE der Klasse CL_GUI_SIMPLE_TREE.</p>
<p class="head1">Tasten</p>
<p>Folgende Tasten können registriert werden:</p>
<ul>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>F1</strong>: Funktionstaste F1</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>F4</strong>: Funktionstaste F4</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>INSERT</strong>: Taste Einfügen</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>DELETE</strong>: Taste Entfernen</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>ENTER</strong>: Enter-Taste</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>CUT</strong>: Strg+X</li>
<li>CL_TREE_CONTORL_BASE=&gt;KEY_<strong>COPY</strong>: Strg+C</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>PASTE</strong>: Strg+V</li>
</ul>
<p class="head1">Screenshot</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/Tree/Bild548.jpg" /><br />
Der kleine Demo-Baum</td>
</tr>
</tbody>
</table>
<p class="head1">Code</p>
<p class="sap1">REPORT  zz_tree_keypress_demo.<br />
<span style="color: #fb2412;">*** we use icons&#8230;</span><br />
TYPE-POOLS icon.</p>
<p class="sap1"><span style="color: #fb2412;">*** global data:</span><br />
<span style="color: #fb2412;">*== Custom Container</span><br />
DATA gr_cuco TYPE REF TO cl_gui_custom_container.<br />
<span style="color: #fb2412;">*== Simple Tree</span><br />
DATA gr_tree TYPE REF TO cl_gui_simple_tree.</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*       CLASS lcl_event_handler_class DEFINITION<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
CLASS lcl_event_handler_class DEFINITION.<br />
PUBLIC SECTION.<br />
CLASS-METHODS handle_keypress<br />
FOR EVENT node_keypress   OF cl_gui_simple_tree<br />
IMPORTING node_key key.<br />
ENDCLASS.                    &#8220;lcl_event_handler_class DEFINITION</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*       CLASS lcl_event_handler_class IMPLEMENTATION<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
CLASS lcl_event_handler_class IMPLEMENTATION.<br />
METHOD handle_keypress.<br />
IF node_key IS NOT INITIAL.<br />
<span style="color: #fb2412;">*** we only get a node id for active nodes (not disabled):</span><br />
MESSAGE i000(oo) WITH &#8216;Knoten:&#8217; node_key &#8216;- Taste:&#8217; key.<br />
ENDIF.<br />
ENDMETHOD.                    &#8220;message<br />
ENDCLASS.                    &#8220;lcl_event_handler_class IMPLEMENTATION</p>
<p class="sap1">START-OF-SELECTION.</p>
<p class="sap1"><span style="color: #fb2412;">*** Call screen</span><br />
CALL SCREEN 1.</p>
<p class="sap1">
<span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*  MODULE status_0001 OUTPUT<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
MODULE status_0001 OUTPUT.</p>
<p class="sap1">*** Set status<br />
SET PF-STATUS &#8216;STLI&#8217; OF PROGRAM &#8216;SAPMSSY0&#8217;.<br />
*** Init Controls<br />
PERFORM init_controls.</p>
<p class="sap1">ENDMODULE.                 &#8221; STATUS_0100  OUTPUT</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*  MODULE user_command_0001 INPUT<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
</span>MODULE user_command_0001 INPUT.</p>
<p class="sap1">  CASE sy-ucomm.<br />
WHEN &#8216;BACK&#8217; OR &#8216;%EX&#8217; OR &#8216;RW&#8217;.<br />
SET SCREEN 0.<br />
LEAVE SCREEN.<br />
ENDCASE.</p>
<p class="sap1">ENDMODULE.                 &#8221; USER_COMMAND_0100  INPUT</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  init_controls<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
* &#8211; create custom container<br />
* &#8211; create tree control<br />
* &#8211; register events<br />
* &#8211; build tree structure<br />
* &#8211; set focus on tree control<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
</span>FORM init_controls.</p>
<p class="sap1"><span style="color: #fb2412;">*** initial build up<br />
</span>  CHECK gr_cuco IS INITIAL.</p>
<p class="sap1"><span style="color: #fb2412;">*** create custom container</span><br />
CREATE OBJECT gr_cuco<br />
EXPORTING<br />
container_name = &#8216;TREE&#8217;.</p>
<p class="sap1"><span style="color: #fb2412;">*** Create simple tree; single node selection</span><br />
CREATE OBJECT gr_tree<br />
EXPORTING<br />
parent              = gr_cuco<br />
node_selection_mode = cl_gui_simple_tree=&gt;node_sel_mode_single.</p>
<p class="sap1"><span style="color: #fb2412;">*** register events</span><br />
PERFORM register_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** build tree structure</span><br />
PERFORM build_tree.</p>
<p class="sap1"><span style="color: #fb2412;">*** Set focus on tree control so that user instantly can<br />
*** navigate with cursor keys</span><br />
cl_gui_control=&gt;set_focus( gr_tree ).</p>
<p class="sap1">ENDFORM.                    &#8220;init_controls</p>
<p class="sap1">
<span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  register_events<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*</span><br />
FORM register_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** Data</span><br />
DATA: lt_events TYPE cntl_simple_events,<br />
ls_event  TYPE cntl_simple_event.</p>
<p class="sap1"><span style="color: #fb2412;">*** NODE_KEYPRESS-Event</span><br />
ls_event-eventid = cl_gui_simple_tree=&gt;eventid_node_keypress.<br />
APPEND ls_event TO lt_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** Register Event</span><br />
CALL METHOD gr_tree-&gt;set_registered_events<br />
EXPORTING<br />
events = lt_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** tell tree which keys to mention for NODE_KEPRESS:<br />
*==&gt; ENTER</span><br />
gr_tree-&gt;add_key_stroke( cl_gui_simple_tree=&gt;key_enter )  .<br />
<span style="color: #fb2412;">*==&gt; F1</span><br />
gr_tree-&gt;add_key_stroke( cl_gui_simple_tree=&gt;key_f1 )  .<br />
<span style="color: #fb2412;">*==&gt; DELETE</span><br />
gr_tree-&gt;add_key_stroke( cl_gui_simple_tree=&gt;key_delete )  .</p>
<p class="sap1"><span style="color: #fb2412;">*** Set handler for registered events</span><br />
SET HANDLER lcl_event_handler_class=&gt;handle_keypress FOR gr_tree.</p>
<p class="sap1">ENDFORM.                    &#8220;register_events</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  build_tree<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
* Build static tree structure:<br />
* Group<br />
*  +- ONE<br />
*  +- TWO<br />
* THREE<br />
* FOUR<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
FORM build_tree.</p>
<p class="sap1"><span style="color: #fb2412;">*** Data</span><br />
DATA ls_node  TYPE mtreesnode.<br />
DATA lt_nodes TYPE STANDARD TABLE OF mtreesnode.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;Group&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;GROUP1&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-disabled  = &#8216;X&#8217;.<br />
ls_node-isfolder  = &#8216;X&#8217;.<br />
ls_node-n_image   = icon_activity_group.<br />
ls_node-exp_image = icon_activity_group.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_intensified.<br />
ls_node-text      = &#8216;Gruppe&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;ONE&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;ONE&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-relatkey  = &#8216;GROUP1&#8217;.<br />
ls_node-n_image   = icon_led_yellow.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_intensified.<br />
ls_node-text      = &#8216;Eins&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;TWO&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;TWO&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-relatkey  = &#8216;GROUP1&#8217;.<br />
ls_node-n_image   = icon_led_green.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_default.<br />
ls_node-text      = &#8216;ZWEI&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;THREE&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;THREE&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-disabled  = &#8216;X&#8217;.<br />
ls_node-n_image   = icon_led_inactive.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_inactive.<br />
ls_node-text      = &#8216;DREI&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;FOUR&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;FOUR&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-disabled  = space.<br />
ls_node-n_image   = icon_led_red.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_intensifd_critical.<br />
ls_node-text      = &#8216;VIER&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Add nodes</span><br />
CALL METHOD gr_tree-&gt;add_nodes<br />
EXPORTING<br />
table_structure_name = &#8216;MTREESNODE&#8217;<br />
node_table           = lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Expand all root nodes</span><br />
gr_tree-&gt;expand_root_nodes( ).</p>
<p class="sap1">ENDFORM.                    &#8220;init_controls</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/event-node_keypress/">Event NODE_KEYPRESS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/event-node_keypress/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>screen0</title>
		<link>/blog/screen0/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 07 Sep 2010 14:41:26 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Dynpros]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=561</guid>

					<description><![CDATA[<p>M&#246;chte man ein Control auf einem Dynpro verwenden, legt man normalerweise mit dem Screenpainter ein CustomControl an. Das ist jedoch nicht zwingend notwendig!</p>
<p>Der Beitrag <a href="/blog/screen0/">screen0</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>M&ouml;chte man ein Control auf einem Dynpro verwenden, legt man normalerweise mit dem Screenpainter ein CustomControl an. Das ist jedoch nicht zwingend notwendig!<br /><P>Wenn keine anderen Elemente vorhanden sein sollen, dann kann man auch die Variable cl_gui_container=&gt;screen0 verwenden und seinen Container somit an das Dynpro direkt binden.</P><P class="sap1">DATA: l_alv&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE REF TO&nbsp;&nbsp; cl_gui_alv_grid,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lt_sflight TYPE TABLE OF sflight.<BR><BR>SELECT * FROM sflight INTO TABLE lt_sflight.<BR>* automatically use the full screen to display the grid,<BR>* NO CONTAINER DEFINITION IS REQUIRED !<BR><BR>CREATE OBJECT l_alv<BR>&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp; i_parent = <FONT color="#fb2412">cl_gui_container=&gt;screen0</FONT>.<BR><BR>CALL METHOD l_alv-&gt;set_table_for_first_display<BR>&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp; i_structure_name = &#8216;SFLIGHT&#8217;<BR>&nbsp; CHANGING<BR>&nbsp;&nbsp;&nbsp; it_outtab&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = lt_sflight.<BR><BR>* You have to create an EMPTY screen<BR>CALL SCREEN 100.<BR></P><P>Quelle: <A href="http://mustafayalcin.com/blog/?p=141" Target="_blank">http://mustafayalcin.com/blog/?p=141</A></P></p>
<p>Der Beitrag <a href="/blog/screen0/">screen0</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
