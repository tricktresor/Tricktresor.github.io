<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>DOKU Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/doku/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Nov 2019 16:51:41 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>DOKU Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>SAP-Demoprogramme</title>
		<link>/blog/sap-demoprogramme/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 31 May 2016 08:26:29 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Workshop]]></category>
		<category><![CDATA[Dynamische Dokumente]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[Demo-Programme]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Tree]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=431</guid>

					<description><![CDATA[<p>Demoprogramme der SAP. CALENDAR_CONTROL CONTEXT_MENU_DYNPR CONTEXT_MENU_LIST CUSTOM_CONTROL DIALOGBOX_CONTROL DOCKING_CONTROL DRAG_DROP_EDIT_TREE DRAG_DROP_TREE_MULTI  DROPDOWN_LISTBOX HTML_VIEWER HTML_VIEWER_WORKSHOP PICTURE_CONTROL SAP_LIST_TREE SPLITTER_CONTROL SUBSCREEN TABLE_CONTROL TOOLBAR_DIALOGBOX</p>
<p>Der Beitrag <a href="/blog/sap-demoprogramme/">SAP-Demoprogramme</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Demoprogramme der SAP. CALENDAR_CONTROL CONTEXT_MENU_DYNPR CONTEXT_MENU_LIST CUSTOM_CONTROL DIALOGBOX_CONTROL DOCKING_CONTROL DRAG_DROP_EDIT_TREE DRAG_DROP_TREE_MULTI DROPDOWN_LISTBOX HTML_VIEWER HTML_VIEWER_WORKSHOP PICTURE_CONTROL SAP_LIST_TREE SPLITTER_CONTROL SUBSCREEN TABLE_CONTROL TOOLBAR_DIALOGBOX</p>
<p>[notice type=&#8217;info&#8217;]Viele DEMO-Programme finden sich im Paket SLIS!</p>
<p>Demoprogramme beginnen häufig mit DEMO* oder RSDEMO* [/notice]</p>
<h2 class="head1">Toolbar</h2>
<ul>
<li>
<div class="text1">RSDEMO_TOOLBAR_DIALOGBOX</div>
</li>
<li>SAPTOOLBAR_IN_SPLITTER</li>
<li>SAPTOOLBAR_DEMO1</li>
<li>BCALV_GRID_07</li>
</ul>
<h2 class="head1">ALV-Grid</h2>
<ul>
<li>BCALV*</li>
<li><span style="color: #fb2412;"><strong>BCALV_VERIFY_DATATYPES</strong></span><br />
Das Mega-Test-Programm für jegliche Optionen des ALV-Grid</li>
<li><span style="color: #fb2412;"><strong>BCALV_TEST_SUITE</strong><br />
</span>Viele Funktionen in einem Programm</li>
</ul>
<h2 class="head1">ALV-Tree</h2>
<ul>
<li>SAPSIMPLE_TREE_CONTROL_DEMO</li>
<li>R_ALV_TREE_TOOLBAR_MANAGER</li>
<li>BCALV_GRID_DND_TREE</li>
<li>BCALV_GRID_DND_TREE_SIMPLE</li>
<li>BCALV_TEST_COLUMN_TREE</li>
<li>BCALV_TEST_SIMPLE_TREE</li>
<li>BCALV_TREE_01</li>
<li>BCALV_TREE_02</li>
<li>BCALV_TREE_03</li>
<li>BCALV_TREE_04</li>
<li>BCALV_TREE_05</li>
<li>BCALV_TREE_06</li>
<li>BCALV_TREE_DEMO</li>
<li>BCALV_TREE_DND</li>
<li>BCALV_TREE_DND_MULTIPLE</li>
<li>BCALV_TREE_EVENT_RECEIVER</li>
<li>BCALV_TREE_EVENT_RECEIVER01</li>
<li>BCALV_TREE_ITEMLAYOUT</li>
<li>BCALV_TREE_MOVE_NODE_TEST</li>
<li>BCALV_TREE_SIMPLE_DEMO</li>
<li>Doku:<br />
<a href="http://help.sap.com/printdocu/core/print46b/de/data/de/pdf/BCCITREE.pdf" target="_blank" rel="noopener noreferrer">http://help.sap.com/printdocu/core/print46b/de/<br />
data/de/pdf/BCCITREE.pdf</a></li>
</ul>
<h2 class="head1">Dialogbox</h2>
<ul>
<li>
<div class="text1">RSDEMO_DIALOGBOX_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_TOOLBAR_DIALOGBOX</div>
</li>
</ul>
<h2 class="head1">Drawer (Vertikales Tabstrip)</h2>
<ul>
<li>
<div class="text1">RSBPT_CONTAINER_BAR_3</div>
</li>
</ul>
<h2 class="head1">Context Menu</h2>
<ul>
<li>RSDEMO_CONTEXT_MENU_DYNPR</li>
<li>
<div class="text1">RSDEMO_CONTEXT_MENU_LIST</div>
</li>
<li>
<div class="text1">R_ALV_TREE_TOOLBAR_MANAGER</div>
</li>
</ul>
<h2 class="head1">Grafik</h2>
<ul>
<li>
<div class="text1">GRAPHICS_GUI_CE_DEMO</div>
</li>
</ul>
<h2 class="head1">Drag and Drop</h2>
<ul>
<li>
<div class="text1">RSDEMO_DRAG_DROP_EDIT_TREE</div>
</li>
<li>
<div class="text1">RSDEMO_DRAG_DROP_TREE_MULTI</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_DRAGDROP</div>
</li>
<li>
<div class="text1">BCALV_GRID_DND_TREE</div>
</li>
<li>
<div class="text1">BCALV_GRID_DND_TREE_SIMPLE</div>
</li>
<li>
<div class="text1">SAPCALENDAR_DRAG_DROP</div>
</li>
<li>
<div class="text1">BCALV_TEST_DRAG_DROP_02</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_EVENTS</div>
</li>
</ul>
<h2 class="head1">Textedit</h2>
<ul>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_1</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_3</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_DRAGDROP</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_1</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_2</div>
</li>
<li>
<div class="text1"><span style="line-height: 1.5em;">SAPTEXTEDIT_TEST_EVENTS</span></div>
</li>
<li>SAPBTFEDITOR_DEMO Demonstriert die Verwendung des BTF-Editors</li>
<li>SAPBTFFRAMEWORK_DEMO</li>
</ul>
<h2 class="head2">HTML</h2>
<ul>
<li>
<div class="text1">SAPHTML_SCRIPT_DEMO</div>
<div class="text1"></div>
</li>
<li>
<div class="text1">RSDEMO_HTML_VIEWER</div>
</li>
<li>
<div class="text1">RSDEMO_HTML_VIEWER_WORKSHOP</div>
</li>
<li>RSTXHTML</li>
<li>SAPHTML_DEMO_CN</li>
<li>SAPHTML_DEMO1</li>
<li>SAPHTML_EVENTS_DEMO</li>
<li>SAPHTML_LONGTEXT_DEMO</li>
<li>SAPHTML_R3HTTP_DEMO</li>
<li>SAPHTML_R3HTTP_XML</li>
<li>SAPHTML_SCRIPT_DEMO</li>
<li>SAPHTML_SET_GUI_CHARSET</li>
<li>SAPHTML_SSO_DEMO</li>
<li>SAPHTML_UI_DEMO</li>
<li>SAPHTML_USE_DEFAULT_CHARSET</li>
<li>SAPHTMLPAGEEDITOR_DEMO1</li>
</ul>
<h2 class="head1">Dynamische Dokumente/ ABAP-Renderer</h2>
<table style="height: 115px;" width="665">
<tbody>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_FLOW</span></li>
</ul>
</td>
<td>Demonstriert die Verwendung der Element FLOW des Gestaltungsobjekts</td>
</tr>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID</span></li>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID_1</span></li>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID_2</span></li>
</ul>
</td>
<td style="vertical-align: top;">Demonstriert die Verwendung der Element GRID des Gestaltungsobjekts</td>
</tr>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_TEST</span></li>
</ul>
</td>
<td> Testprogramm für das ALV Gestaltungsobjekt</td>
</tr>
</tbody>
</table>
<h2 class="head1">Mail</h2>
<ul>
<li>
<div class="text1">RSSOHTMLGIF (Sehr schönen Beispiel, um eine HTML Seite mit eingebundenen Bildern zu versenden)</div>
</li>
</ul>
<h2 class="head1">Calendar</h2>
<ul>
<li>RSDEMO_CALENDAR_CONTROL</li>
<li>SAPCALENDAR_DRAG_DROP</li>
</ul>
<h2 class="head1">Sonstige</h2>
<ul>
<li>
<div class="text1">RSDEMO_CUSTOM_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_EVENT_ON_FIELD</div>
</li>
<li>
<div class="text1">RSDEMO_DOCKING_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_DROPDOWN_LISTBOX</div>
</li>
<li>
<div class="text1">RSDEMO_EASY_SPLITTER_CONTROL</div>
</li>
<li>RSDEMO_PICTURE_CONTROL</li>
<li>
<div class="text1">RSDEMO_SAP_LIST_TREE</div>
</li>
<li>
<div class="text1">RSDEMO_SPLITTER_CONTROL</div>
</li>
<li>TEST_FRONTEND_SERVICES</li>
<li>DEMO_COLORSEL</li>
</ul>
<h2 class="head1">Old-Fashioned</h2>
<ul>
<li>
<div class="text1">RSDEMO_SUBSCREEN</div>
</li>
<li>
<div class="text1">RSDEMO_TABLE_CONTROL</div>
</li>
<li>RSDEOM02 (Table Control)</li>
<li>DEMO_LIST_FORMAT_COLOR_1 Farben in Listen</li>
<li>DEMO_LIST_FORMAT_COLOR_2 Verwendung von Farben in Listen</li>
</ul>
<h2>Grafik</h2>
<p><a href="https://tricktresor.com/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg"><img fetchpriority="high" decoding="async" class="alignnone size-full wp-image-654991" src="https://tricktresor.com/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg" alt="2016-05-31_10-13-35" width="615" height="477" srcset="/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg 615w, /wp-content/uploads/2007/08/2016-05-31_10-13-35-300x233.jpg 300w" sizes="(max-width: 615px) 100vw, 615px" /></a></p>
<p>Report RGRAPALL listet die folgenden Grafikbeispiele auf:</p>
<ul>
<li>BARCBO01 Demoprogramm: Balkenplan im Anzeigemodus</li>
<li>BARCBO02 Demoprogramm: Balkenplan im Pflegemodus</li>
<li>BARCBO03 Demoprogramm: Balkenplan im Pflegemodus (Plantafel)</li>
<li>BARCBO04 Demoprogramm: Gegenseitiges Aktualisieren von Balkenplan und Dynpro</li>
<li>BARCOCX1 Demoprogramm: Balkenplancontrol</li>
<li>DEMO_GFW_PRES_SHOW Anwendungsbeispiel für den Funktionsbaustein GFW_PRES_SHOW</li>
<li>DEMO_GFW_PRES_SHOW_MULT Anwendungsbeispiel für den Funktionsbaustein GFW_PRES_SHOW_MULT</li>
<li>GFW_DEMO_HIER1 GFW: Demonstration einer einfachen Hierarchiegrafik mit SAP-Tree</li>
<li>GFW_DEMO_HIER2 GFW: Demonstration einer Hierarchiegrafik (4 in Splitter, Drag&amp;Drop)</li>
<li>GFW_DEMO_HIER3 GFW: Demonstration einer Hierarchie-/Präsentationsgrafik (Drag&amp;Drop)</li>
<li>GFW_DEMO_PRES GFW: Demonstration von GFW mit sichtbarem Datencontainer</li>
<li>GFW_DEMO_PRES1 GFW: Demonstration von Präsentationsgrafiken mit GFW</li>
<li>GFW_PROG_BAR GFW: Programmierbeispiel für ein Balkendiagramm</li>
<li>GFW_PROG_COLUMNS_AND_TI GFW: Programmierbeispiel für ein Balkendiagramm mit Zeitachse</li>
<li>GFW_PROG_HISTOGRAM GFW: Programmierbeispiel für ein Histogramm</li>
<li>GFW_PROG_LABELS GFW: Programmierbeispiel für dieselben Beschriftungen, lange Beschr.</li>
<li>GFW_PROG_MTA GFW: Programmierbeispiel für eine Meilensteintrendanalyse</li>
<li>GFW_PROG_PIE GFW: Programmierbeispiel für ein Kreisdiagramm</li>
<li>GFW_PROG_POINT_WITH_LAB GFW: Programmierbeispiel für Diagramm mit gekennzeichnetem Punkt</li>
<li>GFW_PROG_TIME_AXIS GFW: Programmierbeispiel für ein Punktdiagramm mit Zeitachse</li>
<li>GFW_PROG_TUTORIAL GFW: Programmierbeispiel für eine einfache PräsGrafik = GFW-Tutorial</li>
<li>GFW_PROG_SPEEDOMETER GFW: Programmierbeispiel für ein Balkendiagramm<br />
<a href="https://tricktresor.com/wp-content/uploads/2016/05/SNAG-0001.png"><img decoding="async" class="alignnone size-full wp-image-1018035" src="https://tricktresor.com/wp-content/uploads/2016/05/SNAG-0001.png" alt="" width="531" height="417" srcset="/wp-content/uploads/2016/05/SNAG-0001.png 531w, /wp-content/uploads/2016/05/SNAG-0001-300x236.png 300w, /wp-content/uploads/2016/05/SNAG-0001-117x91.png 117w" sizes="(max-width: 531px) 100vw, 531px" /></a></li>
<li>GRBMAT_1 Demoprogramm: Pushbuttongrafik</li>
<li>GRBMAT_2 Demoprogramm: Pushbuttongrafik / 2</li>
<li>GRBUSG_1 Demoprogramm: SAP-Präsentationsgrafik 2D</li>
<li>GRBUSG_2 Demoprogramm: SAP-Präsentationsgrafik 3D</li>
<li>GRBUSG_3 Demoprogramm: Präsentationsgrafik Umsatzvergleich</li>
<li>GRBUSG_4 Demoprogramm: Präsentationsgrafik 2D &#8211; 3D &#8211; 4D</li>
<li>GRCNETC1 Demoprogramm: Ansteuern des Clustereditors im Anzeigemodus</li>
<li>GRCNETC2 Demoprogramm: Ansteuern des Clustereditors (erweiterte Version)</li>
<li>GRGANT_2 Demoprogramm: Gantt-Diagramm / 2</li>
<li>GRHIER_1 Demoprogramm: Hierarchiegrafik</li>
<li>GRHIER_2 Demoprogramm: Hierarchie</li>
<li>GRHPGL_1 Demoprogramm: HPGL-Display</li>
<li>GRPORT_0 Demonstration Portfolio-Grafik</li>
<li>GRSTAT_1 Demoprogramm: Trigonometrische Funktionen mit der Statistikgrafik</li>
<li>GRSTAT_2 Demoprogramm: Funktionsdarstellung mit der Statistikgrafik</li>
<li>HIER_BO1 Demoprogramm: Hierarchiegrafik im Anzeigemodus</li>
<li>HIER_BO2 Demoprogramm: Hierarchiegrafik im Pflegemodus</li>
<li>NETZOCX1 Demoprogramm: Netzplancontrol</li>
<li>NETZOCX2 Demoprogramm: Netzplancontrol mit Callbackverarbeitung</li>
<li>NETZ_BO1 Demoprogramm: Netzplangrafik im Anzeigemodus</li>
<li>NETZ_BO2 Demoprogramm: Netzplangrafik im Pflegemodus</li>
<li>NETZ_BO3 Demoprogramm: Netzplangrafik im Pflegemodus (erweiterte Form)</li>
</ul>
<p>Der Beitrag <a href="/blog/sap-demoprogramme/">SAP-Demoprogramme</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Speak!</title>
		<link>/blog/speak/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 03 May 2016 09:53:55 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[set property]]></category>
		<category><![CDATA[call method]]></category>
		<category><![CDATA[get property]]></category>
		<category><![CDATA[ole]]></category>
		<category><![CDATA[LINKS]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[Dokumentation]]></category>
		<category><![CDATA[Agenten]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=634</guid>

					<description><![CDATA[<p>SAP kann sprechen. Mit der Microsoft Speech API 5.3</p>
<p>Der Beitrag <a href="/blog/speak/">Speak!</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>SAP kann sprechen. Mit der Microsoft Speech API 5.3</p>
<figure id="attachment_608883" aria-describedby="caption-attachment-608883" style="width: 500px" class="wp-caption alignnone"><a href="https://tricktresor.com/wp-content/uploads/2012/02/2016-05-03_11-51-10.jpg"><img decoding="async" class="size-full wp-image-608883" src="https://tricktresor.com/wp-content/uploads/2012/02/2016-05-03_11-51-10.jpg" alt="https://pixabay.com/de/sound-welle-stimme-h%C3%B6ren-856770/" width="500" height="300" srcset="/wp-content/uploads/2012/02/2016-05-03_11-51-10.jpg 500w, /wp-content/uploads/2012/02/2016-05-03_11-51-10-300x180.jpg 300w" sizes="(max-width: 500px) 100vw, 500px" /></a><figcaption id="caption-attachment-608883" class="wp-caption-text">https://pixabay.com/de/sound-welle-stimme-h%C3%B6ren-856770/</figcaption></figure>
<p>Auf der Seite <a href="http://abapdn.blogspot.com/" target="_blank">http://abapdn.blogspot.com/</a> bin ich auf folgenden interessanten Code gestoßen:</p>
<pre>INCLUDE ole2incl.
DATA : v_objole      TYPE ole2_object,
       v_objolevoice TYPE ole2_object,
       v_strtotalk   TYPE string.

CREATE OBJECT v_objolevoice 'SAPI.SpVoice'.

SET PROPERTY OF v_objolevoice 'Volume' = 80.
SET PROPERTY OF v_objolevoice 'Rate' = -1.

v_strtotalk = 'This is great'.

CALL METHOD OF v_objolevoice 'Speak' = v_objole
EXPORTING #1 = v_strtotalk.

FREE: v_objolevoice,v_objole.</pre>
<p>Und SAP kann sprechen&#8230; Leider ist es mir nicht gelungen, andere Stimmen zu aktivieren. Es spricht standardmäßig &#8220;Anna&#8221; (&#8220;Mary&#8221; laut Doku). Es müsste aber auch noch &#8220;Mike&#8221; vorhanden sein.</p>
<h2>Get Voice</h2>
<p>Mit diesem Code-Schnipsel kann man die eingestellte Stimme ermitteln.</p>
<pre>DATA v_voicename TYPE string.
DATA v_voice     TYPE ole2_object.
GET PROPERTY OF v_objolevoice 'Voice' = v_voice.
CALL METHOD OF v_voice 'GetDescription' = v_voicename.</pre>
<p>Umgestellt werden kann die Stimme leider nicht, denn dafür müsste man per OLE ein indiziertes Array ansprechen, was aber nicht geht. Aufgrund von Lizenzproblemen ist häufig aber auch nur eine Sprache (und Stimme) installiert.</p>
<h2>Asynchrone Sprachausgabe</h2>
<p>In der Defaulteinstellung wird die Verarbeitung erst fort gesetzt, wenn die Sprachausgabe beendet ist. Mit dem Parameter SVSFlagAsync der Methode SPEAK kann die Sprachausgabe jedoch auch asynchron erfolgen. Das ist beispielsweise dann sinnvoll, wenn eine per MESSAGE ausgegebene Meldung auch gesprochen werden soll. Die Meldung sollte dann natürlich nicht erst erscheinen, wenn sie bereits vorab einmal komplett gesprochen wurde&#8230;</p>
<pre>CALL METHOD OF v_objolevoice 'Speak' = v_objolevoice
EXPORTING #1 = v_strtotalk
#2 = 1.  "SVSFlagsAsync</pre>
<h2>Links</h2>
<p>Hier der Link zum Artikel:<br />
<a href="http://abapdn.blogspot.com/2010/09/sap-knows-how-to-speak.html" target="_blank">http://abapdn.blogspot.com/2010/09/sap-knows-how-to-speak.html</a></p>
<p>Und hier der Link zur API-Dokumentation:<br />
<a href="http://msdn.microsoft.com/en-us/library/ms723614(v=vs.85).aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms723614(v=vs.85).aspx</a></p>
<h1>Kürzer!</h1>
<p>Hier noch eine kürzere <a title="NES | code.google.com" href="https://code.google.com/p/nes-abapgames/wiki/Hello_World">Variante von Nalon</a>:</p>
<pre>DATA ovoice TYPE ole2_object.
CREATE OBJECT ovoice 'SAPI.SpVoice'.
IF sy-subrc = 0.
  CALL METHOD OF ovoice 'Speak'
    EXPORTING #1 = 'Ich will sprechen'.
ENDIF.</pre>
<p>Der Beitrag <a href="/blog/speak/">Speak!</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Schwarz. Kompakt. Hilfreich. Espresso-Tutorials</title>
		<link>/blog/schwarz-kompakt-hilfreich-espresso-tutorials/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 29 Jan 2015 06:00:00 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Partner]]></category>
		<category><![CDATA[Featured]]></category>
		<category><![CDATA[tutorial]]></category>
		<category><![CDATA[buch]]></category>
		<category><![CDATA[epub]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[ebook]]></category>
		<category><![CDATA[BW]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[programmierung]]></category>
		<category><![CDATA[Dokumentation]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=5235</guid>

					<description><![CDATA[<p>Espresso-Tutorials hat sich auf Themen aus dem Finanzbereich spezialisiert. Aber auch Themen zu Produktionsplanung, BW, CRM und einige mehr stellt der Verlag bereit. Das Angebot soll zudem stark in Richtung Programmierung ausgebaut werden. Auch viele Video-Tutorials erleichtern bei vielen Themen den Einstieg in die Materie.</p>
<p>Der Beitrag <a href="/blog/schwarz-kompakt-hilfreich-espresso-tutorials/">Schwarz. Kompakt. Hilfreich. Espresso-Tutorials</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Unser Medienpartner, der Espresso Tutorials Verlag, hat sein SAP E-Book und SAP Videoangebot weiter ausgebaut.</p>
<p>Für eine Flatrate von 99 Euro (inkl. MwSt.) erhältst du für ein Jahr Zugang zu allen SAP Inhalten des Verlags.</p>
<p>Espresso-Tutorials hat sich auf Themen aus dem Finanzbereich spezialisiert. Aber auch Themen zu Produktionsplanung, BW, CRM und einige mehr stellt der Verlag bereit. Das Angebot soll zudem stark in Richtung Programmierung ausgebaut werden. Die Video-Tutorials erleichtern bei vielen Themen den Einstieg in die Materie.</p>
<p>Auf jeden Fall eine spannende Sache.</p>
<p>Die Nachschlagewerke können mittels PC, iOS und Android abgerufen werden.</p>
<p>Gerade die Nutzung mit mobilen Endgeräten dürfte für SAP-Berater, SAP-Experten und Freelancern interessant sein, um von überall darauf zuzugreifen. Für das Jahr 2015 sind bereits mehr als zwanzig zusätzliche Titel zur Veröffentlichung angekündigt. Auch die Neuerscheinungen sollen allen Abonnenten sofort nach Veröffentlichung zugänglich gemacht werden.</p>
<p>Mit dem Gutscheincode &#8220;<strong><span style="color: #0000ff;">915-885-313</span></strong>&#8221; sparst du 10 Euro Gebühr im ersten Jahr!</p>
<p>Die enthaltenen Buch- und Videotitel, Konditionen, ein Informationsvideo und eine Bestellmöglichkeit findest du hier:</p>
<p><a href="http://onleihe.espresso-tutorials.com/"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-5241" src="https://tricktresor.com/wp-content/uploads/2015/01/ET_Webbanner_300x125_2-300x125.jpg" alt="ET_Webbanner_300x125_2" width="300" height="125" /></a></p>
<p><a href="http://onleihe.espresso-tutorials.com/">http://onleihe.espresso-tutorials.com/</a></p>
<p>Der Beitrag <a href="/blog/schwarz-kompakt-hilfreich-espresso-tutorials/">Schwarz. Kompakt. Hilfreich. Espresso-Tutorials</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>SAP und bunte Bilder &#8211; geht das?</title>
		<link>/blog/sap-und-bunte-bilder-cl_gui_html_viewer/</link>
		
		<dc:creator><![CDATA[M&#38;Mler]]></dc:creator>
		<pubDate>Wed, 12 Nov 2014 13:54:52 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Entwurfsmuster]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_gui_html_viewer]]></category>
		<category><![CDATA[MM]]></category>
		<category><![CDATA[Diagramme]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[google]]></category>
		<category><![CDATA[Bilder]]></category>
		<category><![CDATA[Charts]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=5107</guid>

					<description><![CDATA[<p>SAP ERP kann viel. Kleine Tabellen, große Tabellen ALV Tabellen und im NWBC auch neue PowerListen.<br />
Sobald man Daten jedoch grafisch anzeigen möchte kommt recht schnell Ernüchterung ins Spiel. In diesem Artikel zeige ich, wie Daten einfach und trotzdem grafisch anspruchsvoll dargestellt werden können.</p>
<p>Der Beitrag <a href="/blog/sap-und-bunte-bilder-cl_gui_html_viewer/">SAP und bunte Bilder &#8211; geht das?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>SAP ERP kann viel. Kleine Tabellen, große Tabellen ALV Tabellen und im NWBC auch neue PowerListen.<br />
Sobald man Daten jedoch grafisch anzeigen möchte kommt recht schnell Ernüchterung ins Spiel.<br />
Die Prognose bzw. MD04 Diagramme stammen wohl noch aus den frühen 90er Jahren.</p>
<p>Im SAP Demo-Programm <strong>GRAPHICS_GUI_CE_DEMO </strong>sieht man ein Beispiel mit der Chart-Engine. Der Aufwand diese Diagramme richtig zu formatieren und einzubinden wird oftmals bei knappen Entwicklungsbudgets als erstes zusammengestrichen.</p>
<p>Eine alternative Lösung um <em>unkritische</em> Daten optisch ansprechend zu verpacken ist die <a title="Google Charts" href="https://developers.google.com/chart/" target="_blank">Google-Chart API</a>.<br />
Firmendaten an GOOGLE schicken?!? Es ist jedem selbst überlassen welche Daten wirklich übergeben werden.<br />
01.01.2014 &#8211; 100<br />
01.02.2014 &#8211; 80<br />
01.03.2014 &#8211; 70<br />
01.04.2014 &#8211; 100<br />
01.05.2014 &#8211; 200<br />
Datum + Zahl<br />
Ob das Verkaufsmengen, Einkaufswerte,Anzahl  Mitarbeiter oder Umsatz in t€ ist kann man ja bequem über dem Diagramm im HTML ausgeben.<br />
Google versichert zudem die übergebenen Daten nicht zu speichern oder auszuwerten. Wie weit man das glaubt sei wieder jedem selbst überlassen.</p>
<p>Beispiele:</p>
<figure id="attachment_5109" aria-describedby="caption-attachment-5109" style="width: 300px" class="wp-caption alignnone"><a href="https://tricktresor.com/wp-content/uploads/2014/11/pie.png"><img loading="lazy" decoding="async" class="size-medium wp-image-5109" src="https://tricktresor.com/wp-content/uploads/2014/11/pie-300x206.png" alt="Google Chart Pie Chart " width="300" height="206" srcset="/wp-content/uploads/2014/11/pie-300x206.png 300w, /wp-content/uploads/2014/11/pie.png 321w" sizes="(max-width: 300px) 100vw, 300px" /></a><figcaption id="caption-attachment-5109" class="wp-caption-text">Google Chart Pie Chart</figcaption></figure>
<figure id="attachment_5110" aria-describedby="caption-attachment-5110" style="width: 300px" class="wp-caption alignnone"><a href="https://tricktresor.com/wp-content/uploads/2014/11/line.png"><img loading="lazy" decoding="async" class="size-medium wp-image-5110" src="https://tricktresor.com/wp-content/uploads/2014/11/line-300x156.png" alt="Google Chart Line Chart" width="300" height="156" srcset="/wp-content/uploads/2014/11/line-300x156.png 300w, /wp-content/uploads/2014/11/line.png 381w" sizes="(max-width: 300px) 100vw, 300px" /></a><figcaption id="caption-attachment-5110" class="wp-caption-text">Google Chart Line Chart</figcaption></figure>
<figure id="attachment_5108" aria-describedby="caption-attachment-5108" style="width: 300px" class="wp-caption alignnone"><a href="https://tricktresor.com/wp-content/uploads/2014/11/geo.png"><img loading="lazy" decoding="async" class="size-medium wp-image-5108" src="https://tricktresor.com/wp-content/uploads/2014/11/geo-300x176.png" alt="Google Chart Geo-Chart" width="300" height="176" srcset="/wp-content/uploads/2014/11/geo-300x176.png 300w, /wp-content/uploads/2014/11/geo.png 445w" sizes="(max-width: 300px) 100vw, 300px" /></a><figcaption id="caption-attachment-5108" class="wp-caption-text">Google Chart Geo Chart</figcaption></figure>
<h2><strong>Hier ein konkretes Beispiel Coding zum Nachbauen:</strong></h2>
<p>Ziel die MM Bestände der einzelnen Werke als Tortendiagramm darstellen.<br />
Datengrundlage: MM Bestandsstatistik &#8211;&gt;S032</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/11/bestand_werk.png"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-5114" src="https://tricktresor.com/wp-content/uploads/2014/11/bestand_werk-300x220.png" alt="bestand_werk" width="300" height="220" srcset="/wp-content/uploads/2014/11/bestand_werk-300x220.png 300w, /wp-content/uploads/2014/11/bestand_werk.png 461w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Das HTML Coding findet man <a href="https://developers.google.com/chart/interactive/docs/gallery/piechart" target="_blank">hier</a>.<br />
HTML Kenntnisse sind sicherlich hilfreich. Es muss jedoch lediglich der rot markierte Bereich angepasst werden.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/11/HTML.png"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-5112" src="https://tricktresor.com/wp-content/uploads/2014/11/HTML-300x196.png" alt="HTML" width="300" height="196" srcset="/wp-content/uploads/2014/11/HTML-300x196.png 300w, /wp-content/uploads/2014/11/HTML-624x409.png 624w, /wp-content/uploads/2014/11/HTML.png 977w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h2>Coding</h2>
<pre>REPORT zz_google_chart.
*&amp;---------------------------------------------------------------------*
*&amp; Report ZMM_HTML_TEST
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp; Kleines Testprogramm als Demo für CL_GUI_HTML_VIEWER
*&amp; Dieser Report selektiert alle Bestände aus der Tabellen S032 (MM Statitik) und gibt das Ergebnis als Google Chart aus.
*&amp; M&amp;Mler (AWI) 11/2014
*&amp; Keine Garantie, kein Support, keine Kosten.
*&amp;---------------------------------------------------------------------*

define html.
 ls_html = &amp;1. "HTML schreiben
 APPEND ls_html TO lt_html. "An HTML Ausgabetabelle hängen
end-OF-DEFINITION.

TABLES: s032.
TYPES: BEGIN OF ty_s032,
 werks TYPE werks_d,
 wbwbest TYPE wbwbest,
 END OF ty_s032.
"Daten
DATA: gt_data TYPE TABLE OF ty_s032.
"Für HTML ausgabe
DATA: lt_html TYPE TABLE OF char255, "hier landet der HTMl Code drin
 ls_html LIKE LINE OF lt_html, "eine zeile HTML Code
 lo_container TYPE REF TO cl_gui_custom_container, "für die Ausgabe
 lo_html_control TYPE REF TO cl_gui_html_viewer, "für die Ausgabe
 lf_url(1024),
 lf_lines TYPE i, " Anzahl Zeilen
 lf_komma(1). "letzter Datensatz darf kein Komma haben
FIELD-SYMBOLS: &lt;fs_data&gt; TYPE ty_s032.
SELECT-OPTIONS: s_werks FOR s032-werks.

START-OF-SELECTION.
  "Alle Bestände je Werk aus der S032 summieren
  SELECT werks SUM( wbwbest ) AS wbwbest
    FROM s032
    INTO CORRESPONDING FIELDS OF TABLE gt_data
   WHERE werks IN s_werks
     AND vrsio = '000'
     GROUP BY werks .
 "Sodele, itab gt_data ist gefüllt --&gt; Ausgabe als Kuchendiagramm.
 "Das folgende Coding füllt den HTML Code in eine interne Tabelle.
 "per ABAP macro wird der Code deutlich leserlicher
   html `&lt;html&gt;`. "HTML schreiben
   html ` &lt;head&gt;`. "HTML schreiben
   html ` &lt;script type="text/javascript" src="https://www.google.com/jsapi"&gt;&lt;/script&gt;`.
   html ` &lt;script type="text/javascript"&gt;`.
   html ` google.load("visualization", "1", {packages:["corechart"]});`.
   html ` google.setOnLoadCallback(drawChart);`.
   html ` function drawChart() {`.
   html ` var data = google.visualization.arrayToDataTable([`.
 "Hier kommt der spannende Teil, in dem die "Nutzdaten" gefüllt werden
   html ` ['Werk', 'Bestand'],`.
   lf_lines = lines( gt_data ).
 "jetzt per Loop die itab in JavaScript "umbauen"
 "Der letzte Datensatz darf nicht mit Komma abgeschlossen werden, daher lf_komma
   lf_komma = ','.
   LOOP AT gt_data ASSIGNING &lt;fs_data&gt;.
     IF sy-tabix = lf_lines. "letzter Datensatz? Dann kein Komma
       FREE: lf_komma.
     ENDIF.
     ls_html = ` ['` &amp;&amp; &lt;fs_data&gt;-werks &amp;&amp; `', ` &amp;&amp; &lt;fs_data&gt;-wbwbest &amp;&amp; `] ` &amp;&amp; lf_komma.
     append ls_html to lt_html.
   ENDLOOP.
   html ` ]);`.
   html ` var options = {`.
   html ` title: 'Hier kann ein Titel eingegeben werden'`.
   html ` };`.
   html ` var chart = new google.visualization.PieChart(document.getElementById('piechart'));`.
   html ` chart.draw(data, options);`.
   html ` }`.
   html ` &lt;/script&gt;`.
   html ` &lt;/head&gt;`.
 "Ab hier kommt der BODY des HTML Dokuments. Wenn man keinen TITLE an die Grafik schickt, kann man dies hier im HTML machen
   html ` &lt;body&gt;`.
   html ` &lt;div id="piechart" style="width: 900px; height: 500px;"&gt;&lt;/div&gt;`.
   html ` &lt;/body&gt;`.
   html `&lt;/html&gt;`.

   CREATE OBJECT lo_html_control
     EXPORTING
       parent = cl_gui_container=&gt;screen0.
       lf_url = 'AWI.html'.
   CALL METHOD lo_html_control-&gt;load_data
     EXPORTING
       url = lf_url
     IMPORTING
       assigned_url = lf_url
     CHANGING
       data_table = lt_html[].
* HTML im VIEWER anzeigen
   lo_html_control-&gt;show_url( lf_url ).
 
  write space. "Dummy für SCREEN0
</pre>
<h3>Weitere Hinweise und Anregungen:</h3>
<p>&#8211; Mit den Geo-Charts kann man nur anhand einer Postleitzahl und eines Wertes schöne Kartendarstellungen erzeugen. Darstellung der Kunden, Lieferanten Verkaufsaktionen usw.<br />
&#8211; Die Charts können auch interaktiv &#8220;eingestellt&#8221; werden. In ABAP kann man die Java-Script Events abfangen. (Wenn ein talentierterer Entwickler als ich es bin mir ein Beispiel zukommen lässt, ergänze ich das gerne in dieser Doku)</p>
<p>12.11.2014 AWI</p>
<p>Der Beitrag <a href="/blog/sap-und-bunte-bilder-cl_gui_html_viewer/">SAP und bunte Bilder &#8211; geht das?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Formelberechnung</title>
		<link>/blog/formelberechnung/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 16 Jul 2014 17:51:11 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[Formeln]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Tabellenpflegedialog]]></category>
		<category><![CDATA[Schnell programmiert]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4942</guid>

					<description><![CDATA[<p>Mit Computern kann man rechnen. Das ist toll und gut so. Wenn man allerdings Berechnungen Außerhalb eines Programms definieren möchte, dann kommt man schnell an die Grenzen. Einfache Operationen sind schnell programmiert und ausgewertet, bei komplexen Operationen kommt man jedoch schnell ins Schwitzen. Gottseidank besitzt SAP einen Formeleditor, den man sehr einfach für eigene Berechnungen verwenden kann. Mit entsprechenden Funktionsbausteinen oder einer Klasse kann eine Formel geprüft und ausgewertet werden.</p>
<p>Der Beitrag <a href="/blog/formelberechnung/">Formelberechnung</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mit Computern kann man rechnen. Das ist toll und gut so. Wenn man allerdings Berechnungen Außerhalb eines Programms definieren möchte, dann kommt man schnell an die Grenzen. Einfache Operationen sind schnell programmiert und ausgewertet, bei komplexen Operationen kommt man jedoch schnell ins Schwitzen. Gottseidank besitzt SAP einen Formeleditor, den man sehr einfach für eigene Berechnungen verwenden kann. Mit entsprechenden Funktionsbausteinen oder einer Klasse kann eine Formel geprüft und ausgewertet werden.</p>
<h2>Funktionsbausteine</h2>
<p>Es gibt zwei Funktionsbausteine: Einen für die Prüfung einer Formel und einer für die Berechnung:</p>
<p>Prüfung: CHECK_FORMULA</p>
<p>Berechnung: EVAL_FORMULA</p>
<p>Beide Funktionsbausteine haben die folgenden Parameter:</p>
<p>FORMULA: Enthält die Formel<br />
PROGRAM: Programmname zur Wertzuweisung<br />
ROUTINE: Name des Unterprogramms zur Wertzuweisung</p>
<h3>Einfache Berechnung einer Formel</h3>
<p>Der einfachste Aufruf zur Berechnung einer (fast) beliebigen Formel erfolgt mit dem Funktionsbaustein EVAL_FORMULA. Es reicht, wenn du diesem Baustein die Berechnung mitgibst, z.B. 10*3:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_170727.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4943" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_170727.jpg" alt="Formel1" width="474" height="287" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_170727.jpg 474w, /wp-content/uploads/2014/07/Bild_2014_07_16_170727-300x181.jpg 300w" sizes="(max-width: 474px) 100vw, 474px" /></a></p>
<h3>Berechnung mit Variablen</h3>
<p>Nun möchte man natürlich nicht nur Werte berechnen, sondern auch mit Variablen arbeiten, wie zum Beispiel &#8220;A + B&#8221;. Das funktioniert mit den Funktionsbausteinen ebenfalls. Die Formel lautet: A+B. Allerdings müssen die Werte natürlich zugewiesen werden. Hierfür muss man den Programmnamen und den Namen des Unterprogramms angeben, in dem die Werte zugewiesen werden. Ein kleines Beispielprogramm lautet: RSCALC01. Die folgenden Berechnungen werden durchgeführt; die Wertezuweisung erfolgt im Programm.</p>
<pre>FUESSE + AEDERCHEN + OEHRCHEN                        6,0000000000000000E+00
(-B+SQRT(B**2-(4*A*C)))/(2*A)                        4,0000000000000000E+00
0**0                                                 1,0000000000000000E+00
-16**0.5                                            -4,0000000000000000E+00</pre>
<h3>Formelspeicher</h3>
<p>Formeln können zentral in der Tabelle TFKT abgelegt werden. Du kannst also eine Formel VOLUMEN hinterlegen: BREITE * HOEHE * LAENGE.</p>
<p>In deinem Programm musst dann eine entsprechende Zuweisung zu diesen Variablen BREITE, HOEHE, LAENGE machen. Nun ändert sich so eine Volumenberechnung natürlich nicht. Es sei denn, man hinterlegt einen Sicherheitswert, um das Volumen etwas zu vergrößern, also z.B.: BREITE * HOEHE * LAENGE * 1,005</p>
<p>In diesem Fall kann die Volumenberechnung in mehreren Applikationen verwendet werden und sobald der Sicherheitswert geändert wird, wird dies in allen Berechnungen berücksichtigt.</p>
<p>Eine andere Variante wäre, dass jeder Dimension ein eigener Sicherheitswert zugewiesen wird:</p>
<table>
<tbody>
<tr>
<td>KEY</td>
<td>Formeltext</td>
</tr>
<tr>
<td>VOLUMEN</td>
<td>TFKT:BREITE * TFKT:HOEHE * TFKT:LAENGE</td>
</tr>
<tr>
<td>BREITE</td>
<td>BREITE + 1</td>
</tr>
<tr>
<td>HOEHE</td>
<td>HOEHE + 1</td>
</tr>
<tr>
<td>LAENGE</td>
<td>LAENGE + 2</td>
</tr>
</tbody>
</table>
<p>Die Tabelleneinträge lassen sich mit Transaktion SE16N bearbeiten; es gibt keinen Tabellenpflegedialog dafür&#8230; Sollte die Benutzung mit SE16n nicht möglich sein, so kann jedoch schnell ein Tabellenpflegedialog für die Tabelle generiert werden.</p>
<p>[notice type=&#8217;info&#8217;]<strong>Aus der Doku zum Funktionsbaustein CHECK_FORMULA</strong></p>
<p>Wenn eine Benutzergruppe eine andere Tabelle als TFKT benötigt (um z.B. den Schlüsselteil zu strukturieren oder eigene Felder aufzunehmen), sollte die Referenztabelle TFKT zunächst kopiert werden. Eigene Funktionen können bei Bedarf ab Position 79 angefügt werden.</p>
<p>Eine Tabelle, die zur Formelablage verwendet wird, muß eine Schlüssellänge von 13 und einen Funktionsteil der Länge 65 besitzen.[/notice]</p>
<h3>Parameter</h3>
<p>Formeln können auch Parameter enthalten, so dass du zum Beispiel die Formel VOLUMEN mit entsprechenden Werten aufrufen kannst:</p>
<pre>VOLUMEN(10,20,30)</pre>
<p>Die Parameter werden durch Komma getrennt. Die formalen Parameter in der Formel beginnen mit # und werden durchnummeriert. Die Berechnung für das Volumen sieht dann so aus:</p>
<pre>VOLUMEN: #1*#2*#3</pre>
<p>[notice type=&#8217;info&#8217;]SAP-Hinweis: 560672 &#8211; Selbstdefinierte Formeln in Tabelle TFKT[/notice]</p>
<h3>Demoprogramm</h3>
<pre>REPORT  zz_demo_formula.
*== selection screen</pre>
<pre>PARAMETERS p_formel TYPE char50       DEFAULT 'TFKT:VOLUMEN'.
PARAMETERS p_breite TYPE p DECIMALS 2 DEFAULT 10.
PARAMETERS p_hoehe  TYPE p DECIMALS 2 DEFAULT 10.
PARAMETERS p_laenge TYPE p DECIMALS 2 DEFAULT 10.
PARAMETERS p_result TYPE p DECIMALS 2 MODIF ID x.
 
*== DATA
DATA gv_retcode     TYPE i.
DATA gv_repid       TYPE repid VALUE sy-repid.
*== set result field to Display only
AT SELECTION-SCREEN OUTPUT.
  LOOP AT SCREEN.
    IF screen-group1 = 'X'.
      screen-input = '0'.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.
 
AT SELECTION-SCREEN.
*== check formula (Syntax check)
   CALL FUNCTION 'CHECK_FORMULA'
     EXPORTING
       formula = p_formel
       program = gv_repid
       routine = 'CHECK_VALUES'
     IMPORTING
       subrc   = gv_retcode.
*== compute formula
   IF gv_retcode IS INITIAL.
     CALL FUNCTION 'EVAL_FORMULA'
       EXPORTING
         formula = p_formel
         program = gv_repid
         routine = 'GET_VALUES'
       IMPORTING
         value   = p_result
       EXCEPTIONS
         OTHERS  = 1.
   ENDIF.
 
*&amp;---------------------------------------------------------------------*
*&amp;      Form  GET_VALUES
*&amp;---------------------------------------------------------------------*
FORM get_values USING parm CHANGING wert subrc.
   CASE parm.
     WHEN 'BREITE'.
       wert = p_breite.
       subrc = 0.
     WHEN 'HOEHE'.
       wert = p_hoehe.
       subrc = 0.
     WHEN 'LAENGE'.
       wert = p_laenge.
       subrc = 0.
   ENDCASE.
ENDFORM.                    "GET_VALUES
 
*&amp;---------------------------------------------------------------------*
*&amp;      Form  CHECK_VALUES
*&amp;---------------------------------------------------------------------*
FORM check_values USING parm CHANGING subrc.
   CASE parm.
     WHEN 'BREITE'
       OR 'HOEHE'
       OR 'LAENGE'.
       subrc = 0.
   ENDCASE.
ENDFORM.                    "CHECK_VALUES</pre>
<h3>Bugs/ Probleme</h3>
<p>Ich habe es nicht geschafft, den Parameter UNIT_OF_MEASURE sinnvoll einzusetzen. In obigem Beispiel mit der Volumenberechnung wäre es natürlich schön, wenn ich eine Berechnung in Metern durchführen möchte, jedoch immer genau 1 CM Sicherheitsabstand addiert werden soll. Es scheint jedoch so, als würde der Parameter komplett ignoriert werden. Eventuell habe ich aber die Verwendung nicht richtig verstanden&#8230;</p>
<p>[notice type=&#8217;alert&#8217;]912586 &#8211; Formelinterpreter: geschachtelte Aufrufe mit Parametern<br />
1324714 &#8211; Formelinterpreter: Fehlerhafte Berechnungen bei TFKT [/notice]</p>
<p>Demoprogramm RSCALC10 funktioniert nicht.</p>
<p>Der Beitrag <a href="/blog/formelberechnung/">Formelberechnung</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Attribute</title>
		<link>/blog/attribute/</link>
					<comments>/blog/attribute/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 05 Apr 2011 17:22:13 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[Code Inspector]]></category>
		<category><![CDATA[Code Inspector erweitern]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=591</guid>

					<description><![CDATA[<p>Prüfungen können Attribute haben. Das sind Einstellungen, die zu einem Test vorgenommen werden können. Hier kann z.B. noch definiert werden, in welchem Umfang ein Test durchgeführt werden soll.</p>
<p>Der Beitrag <a href="/blog/attribute/">Attribute</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Prüfungen können Attribute haben. Das sind Einstellungen, die zu einem Test vorgenommen werden können. Hier kann z.B. noch definiert werden, in welchem Umfang ein Test durchgeführt werden soll.</p>
<p>Typische Attribute sind zum Beispiel die folgenden zur Prüfung &#8220;Analyse der WHERE-Bedingung für SELECT&#8221;:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/CodeInspector/Bild105.jpg" /></p>
<h2 class="head1">Vorbereitung</h2>
<p>Dem Code Inspector muss mitgeteilt werden, dass die Klasse Attribute hat. Dies geschieht in der CONSTRUCTOR-Methode:</p>
<pre class="sap1">  has_attributes = 'X'.</pre>
<h2 class="head2">Attribute definieren</h2>
<p>Die Attribute müssen als öffentliche Instanzattribute der Klasse hinzugefügt werden. In diesem Beispiel verwenden wir die Felder GP_CHECK1 und GP_CHECK2:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/CodeInspector/Bild106.jpg" /></p>
<p>Im Code Inspector erkennt man Prüfungen mit Eingabefeldern (Attributen) daran, dass neben der Prüfung ein &#8220;Werte-eingeben-Icon&#8221; erscheint:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/CodeInspector/Bild108.jpg" /></p>
<h2 class="head1">Methode QUERY_ATTRIBUTES</h2>
<p>Die Methode IF_CI_TEST~QUERY_ATTRIBUTES muss redefiniert werden. Hier wird das Popup angezeigt, in dem die Auswahl bzw. Anzeige der Attribute erfolgt:</p>
<p>Mit folgendem Coding wird dieses Popup automatisch erzeugt:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/CodeInspector/Bild107.jpg" /></p>
<h2 class="head2">Coding</h2>
<pre class="sap1">CLASS cl_ci_query_attributes DEFINITION LOAD.
DATA:
 l_attributes     TYPE sci_atttab,
 l_attribute      LIKE LINE OF l_attributes,
 l_check1         TYPE c,
 l_check2         TYPE c,
 l_message(72)    TYPE c.</pre>
<pre><span style="color: #fb2412;">*-- macro to fill attributes
</span>DEFINE fill_att.
  get reference of &amp;1 into l_attribute-ref.
  l_attribute-text = &amp;2.
  l_attribute-kind = &amp;3.
  append l_attribute to l_attributes.
END-OF-DEFINITION.</pre>
<pre><span style="color: #fb2412;">*-- save global attributes local
</span>  l_check1  = gp_check1.
  l_check2  = gp_check2.</pre>
<pre><span style="color: #fb2412;">*-- fill attribute table
 </span> fill_att gp_check1   'Prüfung Eins'   ' '.
  fill_att gp_check2   'Prüfung Zwei'   'C'.</pre>
<pre><span style="color: #fb2412;">*-- Display Popup with attributes
 </span> IF cl_ci_query_attributes=&gt;generic(
    p_name       = myname
    p_title      = 'Meine Attribute'(005)
    p_attributes = l_attributes
    p_message    = l_message
    p_display    = p_display ) = 'X'.
 <span style="color: #fb2412;">*-- = 'X' --&gt; 'Exit' Button pressed on PopUp
 </span>   RETURN.
  ENDIF.</pre>
<pre><span style="color: #fb2412;">*-- set attributes-ok-flag
 </span> attributes_ok  = c_true.</pre>
<h2 class="head2">QUERY-Table / Attributtabelle</h2>
<p class="text1">Mit Hilfe der Methode <em>cl_ci_query_attributes=&gt;generic</em> werden die Attribute im Popup angezeigt. Zuvor müssen die Attribute mit dem Macro <em>fill_att</em> definiert werden.</p>
<p class="text1">Folgende Einträge sind möglich in der Tabelle für die Attribute (Auszug aus der Doku zu Struktur SCI_ATTENT):</p>
<p class="text1">Die Struktur SCI_ATTENT beschreibt Felder eines Dialoges. Die einzelnen Komponenten können folgen Werte annehmen.</p>
<p class="text1"><strong>o   KIND</strong></p>
<ul>
<li>
<div class="text1">     &#8216;G&#8217; &#8211; Gruppierung der folgenden Felder</div>
</li>
<li>
<div class="text1">     &#8216;C&#8217; &#8211; Darstellung als Ankreuzfeld</div>
</li>
<li>
<div class="text1">     &#8216;R&#8217; &#8211; Darstellung als Auswahlknopf (siehe auch BUTTON_GROUP)</div>
</li>
<li>
<div class="text1">     &#8216;S&#8217; &#8211; Darstellung als Selektionskriterium</div>
</li>
<li>
<div class="text1">     &#8216;L&#8217; &#8211; Darstellung als Listbox</div>
</li>
</ul>
<p class="text1"><strong>o   REF</strong></p>
<p class="text1">    Referenz auf das Attribut</p>
<p class="text1"><strong>o   TEXT</strong></p>
<p class="text1">    Beschreibung oder Titel</p>
<p class="text1"><strong>o   BUTTON_GROUP</strong></p>
<p class="text1">    Spezifiziert die Auswahlgruppe der ein Auswahlknopf zugeordnet ist.</p>
<h1 class="head1">Speichern</h1>
<p class="text1">Damit die Attribute auch gespeichert werden, müssen die beiden Methoden GET_ATTRIBUTES und PUT_ATTRIBUTES redefiniert werden. Die Namensgebung der Methoden ist meines Erachtens etwas verwirrend, denn mit GET werden die Attribute gespeichert und mit PUT gelesen&#8230;</p>
<h2 class="head2">Methode GET_ATTRIBUTES</h2>
<p>Speichern der Attribute:</p>
<pre class="sap1">EXPORT gp_check1   = gp_check1
       gp_check2   = gp_check2
    TO DATA BUFFER p_attributes.</pre>
<h2 class="head2">Methode PUT_ATTRIBUTES</h2>
<p>Lesen der Attribute</p>
<pre class="sap1">IMPORT gp_check1   = gp_check1
       gp_check2   = gp_check2
  FROM DATA BUFFER p_attributes.</pre>
<h2 class="head1">Verwendung</h2>
<p>Die Attribute können nun im Code Inspector eingegeben werden und in der Prüfroutine abgefragt werden. Sie könnten zum Beispiel das Aufspüren des fehlenden BAPI_TRANSACTION_COMMIT als Option definieren, so dass eine Prüfung auch ohne diesen Check durchgeführt werden kann.</p>
<p>Sie können aber auch steuern, ob die Prüfung einen Fehler oder nur eine Warnung erzeugen soll und dies im Coding berücksichtigen.</p>
<p>Der Beitrag <a href="/blog/attribute/">Attribute</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/attribute/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
		
		<series:name><![CDATA[Code Inspector erweitern]]></series:name>
	</item>
		<item>
		<title>Generell</title>
		<link>/blog/generell/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate></pubDate>
				<category><![CDATA[Tabellenpflegedialog]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[Generell]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=577</guid>

					<description><![CDATA[<p>Wichtige Infos und generelle Funktionsweisen zu Tabellenpflegedialogen.</p>
<p>Der Beitrag <a href="/blog/generell/">Generell</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Wichtige Infos und generelle Funktionsweisen zu Tabellenpflegedialogen.<br /><P class="head1">Abgleichsf&auml;higkeit ermitteln</P><P>Mit Programm RSVIEWMOD l&auml;sst sich die &#8220;automatische Abgleichsf&auml;higkeit&#8221; von Tabellenpflegedialogen ermitteln. Das Programm ermittelt dabei alle modifizierten Tabellenpflegedialoge und listet die Modifikationen auf.</P><P>Aus der Doku:</P><P class="head2">Verwendung</P><P>Das Programm RSVIEWMOD ermittelt die Abgleichsf&auml;higkeit von generierten Pflegedialogen (View- und Viewclusterdialogen) und erm&ouml;glicht es, das&nbsp;Kennzeichen f&uuml;r die Abgleichsf&auml;higkeit zu &auml;ndern.</P><P class="head2">Voraussetzungen</P><P>Die Abgleichf&auml;higkeit wird &uuml;ber ein Kennzeichen gesteuert, das im Kopf der Pflegeobjektbeschreibung abgelegt ist und vom CCS Viewer und vom CTA ausgewertet wird. Das Kennzeichen kann die folgenden Werte annehmen:</P><UL><LI>keine Angabe</LI><LI>nicht abgleichf&auml;hig</LI><LI>abgleichf&auml;hig im Dialog</LI><LI>automatisch abgleichf&auml;hig</LI></UL><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/generell/">Generell</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Dokumentation anzeigen (2)</title>
		<link>/blog/dokumentation-anzeigen-2/</link>
					<comments>/blog/dokumentation-anzeigen-2/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 26 May 2010 13:15:43 +0000</pubDate>
				<category><![CDATA[Tabellenpflegedialog]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Tools]]></category>
		<category><![CDATA[Dokumentation]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[GUI]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=543</guid>

					<description><![CDATA[<p>Update f&#252;r die Anzeige der Dokumentation im Docking Container. Die Routine wurde erweitert und HTML so aufbereitet, dass die Doku wie die SAP-Dokumentation aussieht.</p>
<p>Der Beitrag <a href="/blog/dokumentation-anzeigen-2/">Dokumentation anzeigen (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Update für die Anzeige der Dokumentation im Docking Container. Die Routine wurde erweitert und HTML so aufbereitet, dass die Doku wie die SAP-Dokumentation aussieht.</p>
<p>In dieser Version stelle ich Ihnen eine fertige Methode vor, die nur noch im Zeitpunkt 19 des Tabellenpflegedialoges oder in Zeitpunkt 03 des Viewclusters eingebunden werden muss.</p>
<p>Die Aufbereitung erfolgt analog zu der SAP-Doku und sieht &#8220;etwas schicker&#8221; aus:</p>
<p><img decoding="async" src="/wp-content/uploads/tt_images/Tabellenpflegedialog/hc_328.jpg" /></p>
<p>Zusätzlich kann eine alternative Dokumentation übergeben werden, die angezeigt wird, wenn die Doku zur Tabelle nicht vorhanden ist.</p>
<h2 class="head1">Vorbereitungen</h2>
<h3 class="head2">Methode anlegen</h3>
<p>Legen Sie sich eine Klasse, wie z.B. ZCL_MAINTENANCE_TOOLS an und implementieren Sie die statische PUBLIC-Methode SHOW_DOCU:</p>
<p>Importing-Parameter:</p>
<ul>
<li>IV_TABLE TYPE C &#8220;Tabellenname&#8221;</li>
<li>IV_ALDOC  TYPE C &#8220;Alternative Dokumentation SE61&#8221;</li>
</ul>
<h3 class="head2">Globale Attribute</h3>
<p>Legen Sie folgende statische private Attribute an:</p>
<pre class="lang:abap decode:true ">GR_DOCK    Type Ref To CL_GUI_DOCKING_CONTAINER
GR_HTML    Type Ref To CL_GUI_HTML_VIEWER
GV_TABLE   Type C</pre>
<h3 class="head1">Aufruf Tabellenpflegedialog</h3>
<h3 class="text1">Zeitpunkt 19</h3>
<p class="sap1">  CALL METHOD zcl_maintenance_tools=&gt;show_docu<br />
EXPORTING<br />
iv_table = vcl_akt_view<br />
iv_aldoc = &#8216;ZZT_ALTDOC_TABLE_ZZABC&#8217;.</p>
<h2 class="head1">Aufruf Viewcluster</h2>
<h3 class="text1">Zeitpunkt 03</h3>
<p class="sap1">  IF master_name = x_header-viewname.<br />
CALL METHOD zcl_maintenance_tools=&gt;show_docu<br />
EXPORTING<br />
iv_table = x_header-viewname.<br />
ENDIF.</p>
<p class="text1"><strong><u>HINWEIS:<br />
</u></strong>Die alternative Dokumentation muss in der SE61 als &#8220;Text im Dialog&#8221; angelegt werden.</p>
<h2 class="head1">Eigene Anpassungen</h2>
<p class="text1">Leider werden in den gerufenen Standard-Routinen nicht alle HTML-Tags &#8220;schön&#8221; angepasst. Die Tabellendefinitionen werden zum Beispiel nicht geändert.</p>
<p class="text1">Hier kann man aber manuell einfach Abhilfe schaffen:</p>
<pre class="lang:abap decode:true ">*** set table cells to size 2
      REPLACE ALL  OCCURRENCES OF '&lt;td&gt;' IN TABLE lt_html
         WITH '&lt;td&gt;&lt;font FACE="Arial" SIZE=2&gt;'.        
*** set table border "dashed" and grey background
      REPLACE ALL  OCCURRENCES OF '&lt;table&gt;' IN TABLE lt_html
         WITH '&lt;table style="border:thin dashed blue" width="100%" cellpadding=3 bgcolor=#E0E0E0&gt;'.</pre>
<p class="text1">Das Ergebnis sieht dann so aus:</p>
<p class="text1"><img decoding="async" src="/wp-content/uploads/tt_images/table_doku.jpg" /></p>
<h2 class="head1">Coding</h2>
<pre class="lang:abap decode:true ">METHOD show_docu.

*** Local data
  DATA lt_lines            TYPE STANDARD TABLE OF tline.
  DATA ls_header           TYPE thead.
  DATA lt_html             TYPE STANDARD TABLE OF  htmlline.
  DATA lv_url              TYPE c LENGTH 500.
  DATA lv_table            TYPE doku_obj.
  DATA lv_spras            TYPE sylangu.
  DATA lt_conv_charformats TYPE TABLE OF tline.
  DATA lt_conv_parformats  TYPE TABLE OF tline.


*** has anything changed??
  CHECK gv_table &lt;&gt; iv_table.

  lv_table = iv_table.

***  Read table docu
  CALL FUNCTION 'DOCU_GET'
    EXPORTING
      id     = 'TB'
      langu  = sy-langu
      object = lv_table
    IMPORTING
      head   = ls_header
    TABLES
      line   = lt_lines
    EXCEPTIONS
      OTHERS = 5.
  IF sy-subrc &gt; 0.
*** try other language
    CASE sy-langu.
      WHEN 'D'.
        lv_spras = 'E'.
      WHEN 'E'.
        lv_spras = 'D'.
      WHEN 'F'.
        lv_spras = 'E'.
    ENDCASE.
*** read docu in other language
    CALL FUNCTION 'DOCU_GET'
      EXPORTING
        id     = 'TB'
        langu  = lv_spras
        object = lv_table
      IMPORTING
        head   = ls_header
      TABLES
        line   = lt_lines
      EXCEPTIONS
        OTHERS = 5.
  ENDIF.

***  Read alternative docu
  IF lt_lines IS INITIAL AND iv_aldoc IS NOT INITIAL.
*** read alternative docu (Dialog Text)
    lv_table = iv_aldoc.
    CALL FUNCTION 'DOCU_GET'
      EXPORTING
        id     = 'DT'
        langu  = sy-langu
        object = lv_table
      IMPORTING
        head   = ls_header
      TABLES
        line   = lt_lines
      EXCEPTIONS
        OTHERS = 5.
    IF sy-subrc &gt; 0.
*** read alternative docu (Dialog Text) in different language
      CALL FUNCTION 'DOCU_GET'
        EXPORTING
          id     = 'DT'
          langu  = lv_spras
          object = lv_table
        IMPORTING
          head   = ls_header
        TABLES
          line   = lt_lines
        EXCEPTIONS
          OTHERS = 5.

    ENDIF.
  ENDIF.

*** _______________________________________________________________ ***
***                                                                 ***
***  Build controls
*** _______________________________________________________________ ***
***                                                                 ***

  IF gr_dock IS INITIAL.
*** create docking container
    CREATE OBJECT gr_dock
      EXPORTING
        side                    = cl_gui_docking_container=&gt;dock_at_right
        extension               = 400
        no_autodef_progid_dynnr = 'X'.
  ENDIF.


  IF lt_lines IS INITIAL.
*** No doku: Set controls to invisible
    IF gr_html IS BOUND.
      CALL METHOD gr_html-&gt;set_visible
        EXPORTING
          visible = space.
    ENDIF.

    IF gr_dock IS BOUND.
      CALL METHOD gr_dock-&gt;set_visible
        EXPORTING
          visible = space.
    ENDIF.
  ELSE.
*** Doku exists: Set controls visible
    IF gr_html IS BOUND.
      CALL METHOD gr_html-&gt;set_visible
        EXPORTING
          visible = 'X'.
    ENDIF.
    IF gr_dock IS BOUND.
      CALL METHOD gr_dock-&gt;set_visible
        EXPORTING
          visible = 'X'.
    ENDIF.
  ENDIF.


  IF lt_lines IS NOT INITIAL.
*** doku exists:
    IF gr_html IS INITIAL.
*** Create HTML-Control
      CREATE OBJECT gr_html
        EXPORTING
          parent = gr_dock.
    ENDIF.

*** _______________________________________________________________ ***
***                                                                 ***
***  Convert character and parameter formats
*** _______________________________________________________________ ***
***                                                                 ***
    IF lt_conv_parformats IS INITIAL.
      PERFORM build_mapping_tables   IN PROGRAM rshtmimg_2
       TABLES lt_conv_charformats
              lt_conv_parformats.
    ENDIF.

*** _______________________________________________________________ ***
***                                                                 ***
***  Convert Docu to HTML
*** _______________________________________________________________ ***
***                                                                 ***

    CALL FUNCTION 'CONVERT_ITF_TO_HTML'
      EXPORTING
        i_header           = ls_header
      TABLES
        t_itf_text         = lt_lines
        t_html_text        = lt_html
        t_conv_charformats = lt_conv_charformats
        t_conv_parformats  = lt_conv_parformats
      EXCEPTIONS
        syntax_check       = 1
        replace            = 2
        illegal_header     = 3
        OTHERS             = 4.
    IF sy-subrc = 0.

*** Convert Tables
      PERFORM convert_tables IN PROGRAM rshtmimg_2 TABLES lt_html.
*** Set colours (Make text look like SAP documentation)
      PERFORM set_colors     IN PROGRAM rshtmimg_2 TABLES lt_html.

*** Push data to control
      CALL METHOD gr_html-&gt;load_data
        IMPORTING
          assigned_url = lv_url
        CHANGING
          data_table   = lt_html
        EXCEPTIONS
          OTHERS       = 4.

      IF sy-subrc = 0.
*** _______________________________________________________________ ***
***                                                                 ***
***  Display HTML-Text
*** _______________________________________________________________ ***
***                                                                 ***

        CALL METHOD gr_html-&gt;show_url
          EXPORTING
            url = lv_url.
      ENDIF.
    ENDIF.
  ENDIF.

ENDMETHOD.

</pre>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/dokumentation-anzeigen-2/">Dokumentation anzeigen (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/dokumentation-anzeigen-2/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Dokumentation anzeigen</title>
		<link>/blog/dokumentation-anzeigen/</link>
					<comments>/blog/dokumentation-anzeigen/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 06 May 2009 19:23:35 +0000</pubDate>
				<category><![CDATA[Tabellenpflegedialog]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dokumentation]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Eigenes]]></category>
		<category><![CDATA[Viewcluster]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[programmierung]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=520</guid>

					<description><![CDATA[<p>Der Tabellenpflegedialog hat einige kleine Ungereimtheiten. Dazu geh&#246;rt zum Beispiel auch, dass man keine M&#246;glichkeiten hat, die Dokumentation der Tabelle anzusehen. W&#228;re das so, so k&#246;nnte man hier den Zweck und Pflegehinweise hinterlegen. Mit einer kleinen Programmierung - die zwecks Mehrfachverwendung einfach in einer Methode gekapselt werden kann - wird dem Anwender die Hilfe in einem Docking-Fenster angezeigt.</p>
<p>Der Beitrag <a href="/blog/dokumentation-anzeigen/">Dokumentation anzeigen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Der Tabellenpflegedialog hat einige kleine Ungereimtheiten. Dazu gehört zum Beispiel auch, dass man keine Möglichkeiten hat, die Dokumentation der Tabelle anzusehen. Wäre das so, so könnte man hier den Zweck und Pflegehinweise hinterlegen. Mit einer kleinen Programmierung &#8211; die zwecks Mehrfachverwendung einfach in einer Methode gekapselt werden kann &#8211; wird dem Anwender die Hilfe in einem Docking-Fenster angezeigt.</p>
<p>So sieht das Ergebnis in etwa aus:<img loading="lazy" decoding="async" src="/wp-content/uploads/tt_images/Tabellenpflegedialog/eck_135.jpg" width="519" height="241" /></p>
<h2 class="head1">Vorgehen</h2>
<p>Gehen Sie in den Tabellenpflegedialog und wählen Sie <em>Umfeld &#8211; Modifikation &#8211; Zeitpunkte</em>.</p>
<p>Tragen Sie dann den Zeitpunkt &#8220;19&#8221; ein:</p>
<p><img decoding="async" src="/wp-content/uploads/tt_images/Tabellenpflegedialog/eck_134.jpg" /></p>
<p>Springen Sie in den Editor und legen Sie das folgende Coding an:</p>
<pre class="sap1"><span style="color: #fb2412;">*** GLOBALE DATEN
</span>DATA gr_docking TYPE REF TO cl_gui_docking_container.
DATA gr_control TYPE REF TO cl_gui_html_viewer.
DATA gt_lines   TYPE STANDARD TABLE OF tline.

<span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*
*&amp;      Form  zz_show_docu
*&amp;---------------------------------------------------------------------*
</span>FORM zz_show_docu.

<span style="color: #fb2412;">*** LOKALE DATEN
</span>  DATA lv_size     TYPE i.
  DATA ls_header   TYPE thead.
  DATA lt_html     TYPE STANDARD TABLE OF  htmlline.
  DATA lv_url      TYPE c LENGTH 500.
  DATA lv_viewname TYPE dokhl-object.

<span style="color: #fb2412;">*** DOCKING CONTROL BEREITS ERZEUGT?</span>
  IF gr_docking IS INITIAL.
    MOVE x_header-viewname TO lv_viewname.

<span style="color: #fb2412;">*** Lesen der Doku zur Tabelle
</span>    CALL FUNCTION 'DOCU_GET'
      EXPORTING
        id     = 'TB'
        langu  = sy-langu
        object = lv_viewname
      IMPORTING
        head   = ls_header
      TABLES
        line   = gt_lines
      EXCEPTIONS
        OTHERS = 5.

    IF gt_lines IS INITIAL.
<span style="color: #fb2412;">*** Keine Doku da: Control mit größe 0 erzeugen</span>
      lv_size = 0.
    ELSE.
<span style="color: #fb2412;">*** Doku vorhanden: Breite 400 Pixel</span>
      lv_size = 400.
    ENDIF.

<span style="color: #fb2412;">*** Dockingcontainer erzeugen</span>
    CREATE OBJECT gr_docking
      EXPORTING
        side                    = cl_gui_docking_container=&gt;dock_at_right
        extension               = lv_size
        no_autodef_progid_dynnr = 'X'.

    IF gt_lines IS NOT INITIAL.

<span style="color: #fb2412;">*** HTML-Control erzeugen</span>
      CREATE OBJECT gr_control
        EXPORTING
          parent = gr_docking.

<span style="color: #fb2412;">*** Doku in HTML umwandeln</span>
      CALL FUNCTION 'CONVERT_ITF_TO_HTML'
        EXPORTING
          i_header       = ls_header
        TABLES
          t_itf_text     = gt_lines
          t_html_text    = lt_html
        EXCEPTIONS
          syntax_check   = 1
          replace        = 2
          illegal_header = 3
          OTHERS         = 4.
      IF sy-subrc = 0.
<span style="color: #fb2412;">*** HTML-Daten ins Control schieben</span>
        CALL METHOD gr_control-&gt;load_data
          IMPORTING
            assigned_url = lv_url
          CHANGING
            data_table   = lt_html
          EXCEPTIONS
            OTHERS       = 4.
        IF sy-subrc = 0.
<span style="color: #fb2412;">*** Und HTML-Text anzeigen</span>
          CALL METHOD gr_control-&gt;show_url
            EXPORTING
              url = lv_url.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.</pre>
<p><strong><u>Hinweis:</u><br />
</strong>Wenn man in die Tabellenpflege mit SM30 einsteigt, dann bleibt der Dockingcontainer erhalten. Machen Sie am besten eine Transaktion daraus und dann sieht es wirklich professionell aus.</p>
<h3 class="head1">Viewcluster</h3>
<p>Bei der Verwendung in einem Viewcluster muss der Zeitpunkt 03 verwendet werden.</p>
<p>Viewcluster benötigen ein eigenes Programm, in dem das Coding abgelegt wird. Hier muss das Include LSVCMCOD eingebunden werden, damit Sie Zugriff auf alle notwendigen Daten des Viewclusters haben.</p>
<p><u><strong>Tipp:<br />
</strong></u>Lagern Sie die Funktion in eine Methode aus und übergeben Sie den Namen der gerade aktiven Tabelle (VCL_AKT_VIEW). Dann können Sie in der Methode prüfen, ob die Tabelle gewechselt wurde und in diesem Fall die entsprechende Dokumentation nachlesen.</p>
<h3>Tipps zur Formatierung</h3>
<p>Das Layout des Textes ist nacktes HTML und entspricht so gar nicht dem der üblichen Hilfe in SAP. Wenn du die Formatierung anpassen möchtest, kannst du dir die Klasse CL_EPSS_SAPEVENT bzw. deren Methode LINES_DISPLAY mal ansehen. Hier wird der HTML-Text für die SAP Hilfe generiert. Verwendet werden hierfür die Funktiosnbausteine SE_CONVERT_ITF_TO_HTML und EPSS_STYLE_RECEIVE. Das Umwandeln von SAP-Ikonen wurde zwar auch versuchsweise nachgebaut, ist für die Anzeige aber eher nur nettes Beiwerk.</p>
<p>Der Beitrag <a href="/blog/dokumentation-anzeigen/">Dokumentation anzeigen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/dokumentation-anzeigen/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Anzeige der Programmdokumentation</title>
		<link>/blog/anzeige-der-programmdokumentation/</link>
					<comments>/blog/anzeige-der-programmdokumentation/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 22 May 2008 14:14:01 +0000</pubDate>
				<category><![CDATA[Cross Applications]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[Dokumentation]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=480</guid>

					<description><![CDATA[<p>Mit dem Baustein RS_TOOL_ACCESS oder DSYS_SHOW kann die Programmdokumentation angezeigt werden. Die erfolgt jedoch nur als "Liste". Sch&#246;ner ist es mit der folgenden L&#246;sung, mit der eine Programmdokumenation gleich als Druckvorschau angezeigt wird</p>
<p>Der Beitrag <a href="/blog/anzeige-der-programmdokumentation/">Anzeige der Programmdokumentation</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mit dem Baustein RS_TOOL_ACCESS oder DSYS_SHOW kann die Programmdokumentation angezeigt werden. Die erfolgt jedoch nur als &#8220;Liste&#8221;. Sch&ouml;ner ist es mit der folgenden L&ouml;sung, mit der eine Programmdokumenation gleich als Druckvorschau angezeigt wird<br /><P class="head1">Beispiel</P><P><TABLE class="tblimg" cellPadding="0" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/abap/preview.jpg"><BR>Eine Vorschau der Programmdokumentation</P></TD></TR></TBODY></TABLE></P><P class="head1">Info</P><P class="text1">Die Absatzformate werden grafisch ansprechend angezeigt. Fettschrift ist auch als solche zu erkennen. Auch die &Uuml;berschriften U1 und U2 werden umgesetzt.</P><P class="head1">Coding</P><P class="sap1">DATA lt_tlines TYPE STANDARD TABLE OF tline.<BR>DATA ls_head&nbsp;&nbsp; TYPE thead.<BR>DATA ls_opt&nbsp;&nbsp;&nbsp; TYPE itcpo.<BR>DATA ls_dokil&nbsp; TYPE dokil.</P><P class="sap1"><FONT color="#fb2412">*** Get index<BR></FONT>CALL FUNCTION &#8216;DOCU_EXIST_CHECK&#8217;<BR>&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp; id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;RE&#8217;<BR>&nbsp;&nbsp;&nbsp; langu&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = sy-langu<BR>&nbsp;&nbsp;&nbsp; object&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;ZZMYREPORT&#8217;<BR>&nbsp;&nbsp;&nbsp; typ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216; &#8216;<BR>&nbsp; IMPORTING<BR>&nbsp;&nbsp;&nbsp; docu_index = ls_dokil<BR>&nbsp; EXCEPTIONS<BR>&nbsp;&nbsp;&nbsp; OTHERS&nbsp;&nbsp;&nbsp;&nbsp; = 5.</P><P class="sap1">IF sy-subrc = 0.<BR><FONT color="#fb2412">*** Read docu lines</FONT><BR>&nbsp; CALL FUNCTION &#8216;DOCU_READ&#8217;<BR>&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = ls_dokil-id<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; langu&nbsp;&nbsp; = ls_dokil-langu<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object&nbsp; = ls_dokil-object<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; typ&nbsp;&nbsp;&nbsp;&nbsp; = ls_dokil-typ<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; version = ls_dokil-version<BR>&nbsp;&nbsp;&nbsp; IMPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; head&nbsp;&nbsp;&nbsp; = ls_head<BR>&nbsp;&nbsp;&nbsp; TABLES<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line&nbsp;&nbsp;&nbsp; = lt_tlines.</P><P class="sap1"><FONT color="#fb2412">*** Read printer options</FONT><BR>&nbsp; SELECT SINGLE spld FROM usr01 INTO ls_opt-tddest<BR>&nbsp;&nbsp;&nbsp; WHERE bname = sy-uname.<BR>&nbsp; IF ls_opt-tddest IS INITIAL.<BR>&nbsp;&nbsp;&nbsp; ls_opt-tddest = &#8216;LOCL&#8217;.<BR>&nbsp; ENDIF.<BR>&nbsp; ls_opt-tdprinter = &#8216;PRINTER&#8217;.<BR>&nbsp; ls_opt-tdnoprint = &#8216;X&#8217;.<BR>&nbsp; ls_opt-tdpreview = &#8216;X&#8217;.</P><P class="sap1"><FONT color="#fb2412">*** Call preview</FONT><BR>&nbsp; CALL FUNCTION &#8216;PRINT_TEXT&#8217;<BR>&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; device&nbsp; = &#8216;PRINTER&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dialog&nbsp; = &#8216; &#8216;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header&nbsp; = ls_head<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OPTIONS = ls_opt<BR>&nbsp;&nbsp;&nbsp; TABLES<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lines&nbsp;&nbsp; = lt_tlines<BR>&nbsp;&nbsp;&nbsp; EXCEPTIONS<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OTHERS&nbsp; = 11.</P><P class="sap1">ENDIF.</P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/anzeige-der-programmdokumentation/">Anzeige der Programmdokumentation</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/anzeige-der-programmdokumentation/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
