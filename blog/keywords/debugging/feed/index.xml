<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Debugging Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/debugging/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Thu, 28 Mar 2019 14:18:12 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Debugging Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Tipps und Tricks</title>
		<link>/blog/tipps-und-tricks/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 10 Nov 2010 13:55:32 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Debugging]]></category>
		<category><![CDATA[Debugger]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=567</guid>

					<description><![CDATA[<p>Kleine Infos und Tricks zum neuen Debugger</p>
<p>Der Beitrag <a href="/blog/tipps-und-tricks/">Tipps und Tricks</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Kleine Infos und Tricks zum neuen Debugger<br /><P class="head1">Links</P><P>New ABAP Debugger â€“ Tips and Tricks by Olga Dolinskaja (SAP):<BR><A href="http://www.sdn.sap.com/irj/scn/weblogs?blog=/pub/wlg/21986" Target="_blank">http://www.sdn.sap.com/irj/scn/weblogs?blog=/pub/wlg/21986</A></P></p>
<p>Der Beitrag <a href="/blog/tipps-und-tricks/">Tipps und Tricks</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Systeminformationen</title>
		<link>/blog/systeminformationen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Sun, 20 Jul 2003 22:29:13 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Debugger]]></category>
		<category><![CDATA[Debugging]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=92</guid>

					<description><![CDATA[<p>Viele n&#252;tzliche Informationen lassen sich im Debugger anzeigen. So k&#246;nnen geladene Programme, verwendete Tabellen, Memory-ID's und deren Werte und andere Datensegmente. Die Darstellung ist sehr technisch und nicht alle Informationen sind n&#252;tzlich. Viele Informationen ersparen aber eine aufwendige Suche.</p>
<p>Der Beitrag <a href="/blog/systeminformationen/">Systeminformationen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Viele n&uuml;tzliche Informationen lassen sich im Debugger anzeigen. So k&ouml;nnen geladene Programme, verwendete Tabellen, Memory-ID&#8217;s und deren Werte und andere Datensegmente. Die Darstellung ist sehr technisch und nicht alle Informationen sind n&uuml;tzlich. Viele Informationen ersparen aber eine aufwendige Suche.<br /><P class="head1">Interne Daten</P><P>Wenn Sie sich im Debugging befinden erhalten Sie eine Menge Informationen &uuml;ber den Men&uuml;punkt <EM>Springen &#8211; System &#8211; Systembereiche</EM>.</P><P>Hier gibt es eine Menge an Objekten, die Sie per Doppelklick ausw&auml;hlen k&ouml;nnen.</P><P>Interessant ist zum Beispiel das Objekt &#8220;<STRONG>MEMORIES</STRONG>&#8220;, in dem Sie alle im SAP-Memory hinterlegten ID&#8217;s und deren Inhalte sehen k&ouml;nnen.</P><P>Das Objekt &#8220;<STRONG>SMEM</STRONG>&#8221; gibt Aufschluss &uuml;ber alle Parameter-ID&#8217;s und deren Werte, die f&uuml;r den Benutzer gespeichert sind.</P><P>Zugegeben, die meisten Informationen sind sehr kryptisch, aber manchmal lohnt es sich, einen Blick hierhin zu werfen.</P><P>Beim neuen Debugger (ECC6.0) ist das Systemtool etwas versteckt. Wechseln Sie am besten zu einem anderen Desktop und w&auml;hlen Sie die Funktion &#8220;Ersetze Werkzeug&#8221;. In dem Popup klicken Sie dann die Kategorie &#8220;Spezialwerkzeug&#8221; auf und w&auml;hlen &#8220;Systembereiche.</P><P><IMG src="/wp-content/uploads/tt_images/abap/popup_debugger.jpg"></P><P><IMG src="/wp-content/uploads/tt_images/abap/Eck_029.jpg"></P><P class="head1">SCREEN-Tabelle</P><P>In Reports k&ouml;nnen Sie alle Felder, die bei LOOP AT SCREEN durchlaufen werden, in einer Tabelle sehen: <STRONG>%_SSCR</STRONG></P><P>Dies funktioniert jedoch nur bei Reports, nicht bei echten Dynpros!</P><P><IMG src="/wp-content/uploads/tt_images/abap/Eck_028.jpg"></P><P>Ab ECC6.0 haben Sie die M&ouml;glichkeit &uuml;ber oben genannten Trick den Bereich SCREEN anzuzeigen. Hier stehen alle Felder &#8211; auch die von Dynpros!!</P></p>
<p>Der Beitrag <a href="/blog/systeminformationen/">Systeminformationen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Tabelleninhalte</title>
		<link>/blog/tabelleninhalte/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Sun, 20 Jul 2003 22:06:35 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Debugger]]></category>
		<category><![CDATA[Debugging]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=91</guid>

					<description><![CDATA[<p>Tabelleneintr&#228;ge und Strukturen anzeigen und &#228;ndern.</p>
<p>Der Beitrag <a href="/blog/tabelleninhalte/">Tabelleninhalte</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Tabelleneintr&auml;ge und Strukturen anzeigen und &auml;ndern.<br /><P>Variablen k&ouml;nnen mit Doppelklick auf die Variable im Quelltext in die Anzeige &uuml;bernommen werden. Mit einem Doppelklick auf die Variable im Bereich &#8220;Feldnamen &#8211; Feldinhalte&#8221; sehen Sie die Details zu der Variablen. </P><P>Handelt es sich um eine &#8220;normale&#8221; Variable, so werden die L&auml;nge und der Typ angezeigt. </P><P>Handelt es sich um eine Struktur, so werden die Felder der Struktur angezeigt.</P><P>Bei einer Tabelle werden die Tabellenzeilen zur Anzeige gebracht. Einzelne Eintr&auml;ge k&ouml;nnen Sie sich anzeigen lassen, indem Sie den Index der Zeile direkt angeben (&#8230;im unteren Beispiel die dritte Zeile&#8230;)&nbsp;und einen Doppelklick darauf machen:</P><P class="sap1">t_tabname[3]</P><P>Alle Felder dieser Tabellenzeile werden dann untereinander mit Wert ausgegeben.</P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/tabelleninhalte/">Tabelleninhalte</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Popup&#8217;s debuggen</title>
		<link>/blog/popups-debuggen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 06 May 2003 20:37:50 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Debugger]]></category>
		<category><![CDATA[Debugging]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=46</guid>

					<description><![CDATA[<p>Was tun, wenn irgendwann im Programm ein Popup erscheint, das man debuggen m&#246;chte? Die OK-Code-Zeile steht ja nicht zur Verf&#252;gung...</p>
<p>Der Beitrag <a href="/blog/popups-debuggen/">Popup&#8217;s debuggen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Was tun, wenn irgendwann im Programm ein Popup erscheint, das man debuggen m&ouml;chte? Die OK-Code-Zeile steht ja nicht zur Verf&uuml;gung&#8230;<br /><P>Um ein Popup zu debuggen haben Sie folgende M&ouml;glichkeiten: </P><P>1. Lassen Sie es gar nicht erst so weit kommen: Setzen Sie in der Anwendung einen BREAK-POINT bei der Anweisung &#8220;CALL SCREEN&#8221;. Von hier aus k&ouml;nnen Sie dann bequem weiter debuggen.</P><P>2. Legen Sie einen Shortcut auf dem Desktop an. Diesen Shortcut k&ouml;nnen Sie dann auf ein SAP-Popup ziehen. </P><P>Legen Sie die Verkn&uuml;pfung durch rechten Mausklick auf den Desktop an:</P><P><TABLE class="tblimg" cellPadding="4" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/debug1.gif"><BR></P></TD></TR></TBODY></TABLE></P><P>Pflegen Sie die folgenden Parameter. Wichtig sind die Felder &#8220;Type&#8221; und &#8220;Command&#8221;.</P><P><TABLE class="tblimg" cellPadding="4" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/debug2.gif"><BR>Die SAPGUI-Parameter</P></TD></TR></TBODY></TABLE></P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/popups-debuggen/">Popup&#8217;s debuggen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>SE16 austricksen</title>
		<link>/blog/se16-austricksen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 05 May 2003 22:49:52 +0000</pubDate>
				<category><![CDATA[Tabellenpflegedialog]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Debugger]]></category>
		<category><![CDATA[Kleinigkeiten]]></category>
		<category><![CDATA[Debugging]]></category>
		<category><![CDATA[tabelle]]></category>
		<category><![CDATA[se16]]></category>
		<category><![CDATA[se16n]]></category>
		<category><![CDATA[tabelle editieren]]></category>
		<category><![CDATA[&sap_edit]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=34</guid>

					<description><![CDATA[<p>In der SE16 k&#246;nnen eigentlich keine Eintr&#228;ge ge&#228;ndert werden, wenn ein Pflegedialog f&#252;r die Tabelle existiert oder die Tabellenklasse ein &#228;ndern nicht zul&#228;sst. Mit Debugging-BErechtigung geht das aber doch!</p>
<p>Der Beitrag <a href="/blog/se16-austricksen/">SE16 austricksen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>In der SE16 kÃ¶nnen eigentlich keine EintrÃ¤ge geÃ¤ndert werden, wenn ein Pflegedialog fÃ¼r die Tabelle existiert oder die Tabellenklasse ein Ã¤ndern nicht zulÃ¤sst. Mit Debugging-BErechtigung geht das aber doch!</p>
<p>Wenn Sie die Berechtigung zum Debuggen und Feldinhalte Ã¤ndern haben, dann kÃ¶nnen Sie relativ einfach TabelleneintrÃ¤ge Ã¤ndern.</p>
<p>Starten Sie die Tabellenanzeige mit <strong>SE16</strong>, geben Ihre Selektionskriterien ein und fÃ¼hren die Suche aus. In der Ãœbersicht markieren Sie die EintrÃ¤ge, die Sie Ã¤ndern mÃ¶chten.</p>
<p>Geben Sie nun in der OK-Code-Zeile &#8220;<span style="color: #fb2412;">/h</span>&#8221; ein, drÃ¼cken SieÂ &lt;Enter&gt; Â und machen dann einen Doppelklick auf einen markierten Eintrag.</p>
<p>Sie gelangen in den Debug-Modus. DrÃ¼cken Sie hier einmal F7 fÃ¼r die Funktion &#8220;Return&#8221;, geben dann in der Feldzeile die Variable &#8220;CODE&#8221; ein. Der Inhalt ist bisher &#8220;SHOW&#8221;. Ã„ndern Sie ihn in &#8220;<span style="color: #fb2412;">EDIT</span>&#8221; und fÃ¼hren das Programm mit F8 weiter aus.</p>
<p>Sie kÃ¶nnenÂ nun die markierten EintrÃ¤ge nach belieben Ã¤ndern.</p>
<p>Einziger Wermutstropfen: <span style="color: #f49047;">Die FremdschlÃ¼sselprÃ¼fung ist aktiv.</span> Sie kÃ¶nnen also nur EintrÃ¤ge in die Felder schreiben, die durch eine eventuell aktivierte FremdschlÃ¼sselprÃ¼fung aktivert sind.</p>
<h2 class="head2">Nachtrag</h2>
<p>In neueren Releases muss folgendermaÃŸen vorgegangen werden:</p>
<p>Um den Edit Mode der SE16 herbei zu fÃ¼hren muss im UnterprogrammÂ  SET_STATUS_VAL ein Breakpoint gesetzt werden:Â in Zeile 34 &#8211; if code = &#8216;SHOW&#8217;</p>
<p>Hier kann dann wie gehabt derÂ CODE auf EDIT oder INSR gesetzt werden.</p>
<h2 class="head1">EintrÃ¤ge editieren mit SE16n</h2>
<p><a class="hoverZoomLink" href="https://tricktresor.com/wp-content/uploads/2003/05/Bild_2014_06_25_130602.jpg"><img decoding="async" class="alignnone size-medium wp-image-4879 hoverZoomLink" src="https://tricktresor.com/wp-content/uploads/2003/05/Bild_2014_06_25_130602-300x125.jpg" alt="Bild_2014_06_25_130602" width="300" height="125" srcset="/wp-content/uploads/2003/05/Bild_2014_06_25_130602-300x125.jpg 300w, /wp-content/uploads/2003/05/Bild_2014_06_25_130602.jpg 343w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Das Ã„ndern von EintrÃ¤gen mit der <strong>SE16N</strong> ist ebenfalls sehr einfach: Geben Sie einfach, nachdem Sie die zu Ã¤ndernde Tabelle eingetragen haben, den Funktionscode</p>
<p class="sap1">&amp;SAP_EDIT</p>
<p>in die OK-Code-Zeile ein. Es wird dann die Meldung &#8220;SAP-Editierfunktion wurde aktiviert&#8221; ausgegeben und Sie kÃ¶nnen die EintrÃ¤ge berabeiten.</p>
<p><span style="color: #fb2412;">Auch in der SE16N ist die FremdschlÃ¼sselprÃ¼fung aktiv.</span> Diese kann aber ausgeschaltet werden: Im Selektionsbild der SE16N geben Sie den Funktionscode</p>
<p class="sap1">&amp;SAP_NO_CHECK</p>
<p>ein. Dann ist die FremdschlÃ¼sselprÃ¼fung deaktiviert. <strong>Diese Funktion ist natÃ¼rlich mit Vorsicht zu genieÃŸen, denn in der Regel haben FremdschlÃ¼sselprÃ¼fungen ihren Sinn!!</strong></p>
<h2 class="head1">Protokoll</h2>
<p>Die Ã„nderungen, die mit der Transaktion SE16N gemacht werden, werden protokolliert. Diese Ã„nderungen kÃ¶nnen mit dem <strong>Programm RKSE16N_CD</strong><br />
ausgewertet werden.</p>
<h2>Hinweis 1420281</h2>
<p>In diesem Hinweis ist beschrieben, wie die EditierfunktionalitÃ¤t &amp;sap_edit wieder abgeschaltet werden kann. Ab Release 6.00 wird diese Ã„nderung mit Support Packages 17 &amp; 18 ausgeliefert. Eine Nutzung der funktion &amp;sap_edit ist dann nicht mehr mÃ¶glich.</p>
<p>Um trotzdem eine Tabellen Ã¤ndern zu kÃ¶nnen, kann man sich &#8211; FeldÃ¤nderungen im Debugging erlaubt vorausgesetzt &#8211; wie folgt behelfen:</p>
<ol>
<li>Aufruf der Transaktion SE16N</li>
<li>Eingabe des Tabellennamens</li>
<li>EinschrÃ¤nkung der Werte im Selektionsbild</li>
<li>/h in OK-Codezeile eingeben (Debugging aktiveren) und Enter drÃ¼cken</li>
<li>Selektion ausfÃ¼hren (Funktionstaste F8)</li>
<li>Im Debugger die FelderÂ gd-edit und gd-sapedit auf X Ã¤ndern (Siehe Screenshot)</li>
<li>F8 drÃ¼cken um fortzufahren</li>
</ol>
<p><a href="https://tricktresor.com/wp-content/uploads/2003/05/Bild_2014_06_25_130639.jpg"><img fetchpriority="high" decoding="async" class="alignnone wp-image-4878 size-full" src="https://tricktresor.com/wp-content/uploads/2003/05/Bild_2014_06_25_130639.jpg" alt="Bild_2014_06_25_130639" width="483" height="128" srcset="/wp-content/uploads/2003/05/Bild_2014_06_25_130639.jpg 483w, /wp-content/uploads/2003/05/Bild_2014_06_25_130639-300x79.jpg 300w" sizes="(max-width: 483px) 100vw, 483px" /></a></p>
<h2>Funktionsbaustein SE16N_INTERFACE</h2>
<p>Noch einfacher lÃ¤sst sich die Transaktion SE16n &#8220;austricksen&#8221;, indem du gleich den zu Grunde liegenden Funktionsbaustein SE16N_INTERFACE in der SE37 im Testmodus aufrufst.</p>
<p>Hier kannst du die beiden Parameter I_EDIT und I_SAPEDIT direkt mit einem X vorbelegen.</p>
<p>Nachteil bei dieser Variante: Es wird sofort die Ergebnisliste ausgegeben, du kannst also keine Vorselektion machen. Das heiÃŸt, <em>machen</em> kannst du sie schon, jedoch nur einigermaÃŸen umstÃ¤ndlich Ã¼ber den Parameter IT_AND_SELFIELDS.</p>
<p>Der Beitrag <a href="/blog/se16-austricksen/">SE16 austricksen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
