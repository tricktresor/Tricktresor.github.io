<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Unicode Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/unicode/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:25:00 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Unicode Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Launige Betrachtung zum Unicode</title>
		<link>/blog/launige-betrachtung-zum-unicode/</link>
					<comments>/blog/launige-betrachtung-zum-unicode/#comments</comments>
		
		<dc:creator><![CDATA[Gastbeitrag]]></dc:creator>
		<pubDate>Thu, 27 Feb 2014 10:52:05 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Sprüche & Geschichten]]></category>
		<category><![CDATA[color]]></category>
		<category><![CDATA[WORD]]></category>
		<category><![CDATA[Unicode]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4515</guid>

					<description><![CDATA[<p>Wenn man wie ich die 40 überschritten hat, denkt man über manche Dinge in besonderer Weise nach. Zum Beispiel über die Rechtschreibreform – einer Kapitulation vor den eher schlichten Gemütern, die nicht begreifen wollten, daß (pardon: dass) man &#8220;Katastrophe&#8221; mit ph und &#8220;doof&#8221; mit f schreibt. Delphine und Naßzellen gehören der Vergangenheit an, umfangreiche Arbeiten sind jetzt &#8220;aufwändig&#8221;, Grundfeste (&#8220;ss&#8221; nicht am Silbenende; trenne nie &#8220;st&#8221;, denn es tut ihm weh) wurden erschüttert. Nur mit...</p>
<p>Der Beitrag <a href="/blog/launige-betrachtung-zum-unicode/">Launige Betrachtung zum Unicode</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Wenn man wie ich die 40 überschritten hat, denkt man über manche Dinge in besonderer Weise nach.</p>
<p>Zum Beispiel über die Rechtschreibreform – einer Kapitulation vor den eher schlichten Gemütern, die nicht begreifen wollten, daß (pardon: dass) man &#8220;Katastrophe&#8221; mit ph und &#8220;doof&#8221; mit f schreibt.</p>
<p>Delphine und Naßzellen gehören der Vergangenheit an, umfangreiche Arbeiten sind jetzt &#8220;aufwändig&#8221;, Grundfeste (&#8220;ss&#8221; nicht am Silbenende; trenne nie &#8220;st&#8221;, denn es tut ihm weh) wurden erschüttert.</p>
<p>Nur mit einem Quäntchen Glück kommt man mit 0 Fehlern durch.</p>
<h2>1 + 1 = 3?</h2>
<p>Die Angst ging in dieser Generation um. Ob sie wohl als nächstes an das kleine Einmaleins rangehen? 1 + 1 = 3, nur eine Frage der Zeit? Na ja, diese Kuh scheint vorerst vom Eis zu sein.<br />
(&#8220;1 + 1 ? Hä? Alder, meine iPhone isse schneller als deine Kopf.&#8221;)</p>
<p>Doch jetzt: Mit aller Macht kommt er, der Unicode.</p>
<p>Vorbei sind die Zeiten &#8220;<i>&#8230; and a byte is still a byte</i>&#8220;. Unvorstellbar für die ältere Generation der Datenverarbeiter, die in Zeiten von Lochstreifen und Lochkarte das Bit quasi noch hautnah fühlen konnten. Entweder als zusätzlich gestanztes Loch in einer Lochkarte (Datenfehler), als wieder zugeklebtes Loch in einem Lochstreifen (Tippfehler) oder zumindest als Konfettibestandteil im Haar beim Studentenfasching.</p>
<p>[pullquote float=&#8217;CENTER&#8217; color=&#8217;#000000&#8242; bgcolor=&#8217;#ff5900&#8242;]Ziel des Unicode ist es, für jedes Sinn tragende Schriftzeichen aller bekannten Schriftkulturen einen digitalen Code festzulegen.[/pullquote]</p>
<p>Na, da freue ich mich aber für Japaner und Chinesen, die den Halbsatz &#8220;Der vom Tautropfen der Lotusblüte benetzte Strahl der Morgensonne&#8221; ja unbedingt in 3 Byte unterbringen müssen. Oder für die alten <i>Ugariter</i>, die es seit mehr als 3.000 Jahren nicht mehr gibt.</p>
<h2>Kamasutra</h2>
<p>Gleichsam beruhigt es mich ungemein, dass seit März 2005 auch die <i>Kharoshthi-Schrift</i> aus dem antiken Indien unicode-fähig ist. Damit kann man jetzt wohl das Kamasutra in Originalversion über Dateischnittstelle einlesen. Hauptsache es gibt keinen Kurzdump. (&#8220;Das Programm ist auf eine <i>Stellung</i> gestoßen, die nicht durch eine Ausnahme behandelt werden kann.&#8221;)</p>
<p>Ein historischer Meilenstein wurde im Oktober 2010 erreicht: Japanische Emoticons (<i>Emoji</i>) sind codierbar. (Kein Witz!)<br />
Die Unicode-Kenner schnalzen kollektiv mit der Zunge.</p>
<p>Oder Musiknoten, seit März 2001 möglich. Super, dann braucht man sich den Scheiß nicht mehr anzuhören, sondern kann gleich die Noten einlesen.</p>
<p>Hat eigentlich schon mal jemand daran gedacht, das deutsche Steuerrecht incl. aller Zusätze und Novellen in <i>phönizischer Schrift</i> darzustellen? Nicht? Wie? Ach so, macht keinen Sinn. Aha.</p>
<p>Einigermaßen lustig ist, dass die Hauptkritik am Unicode aus dem ostasiatischen Raum zu vernehmen ist. Obwohl gerade dort diejenigen Sprachen beheimatet sind, die gern als Begründung für die Notwendigkeit eines Unicode benutzt werden. Menschenskinder, dabei hätte es sich doch jeder von uns an fünf Fingern abzählen können, dass die Jungs Schwierigkeiten mit der <i>Han-Vereinheitlichung</i> haben werden, nicht wahr?</p>
<p>&#8220;Liebe japanische Kollegen, wir brauchen nicht mehr auf englisch zu kommunizieren, Ihr könnt Eure Daten jetzt auf japanisch schicken. Verstehen wir zwar nicht, können wir aber einlesen.&#8221;</p>
<p>&#8220;Ja, Frau Lehmann, wir brauchen Ihre 30 monatlichen Datensätze für die Verbuchung jetzt im Unicode ISO 10646. Wir müssen sicherstellen, dass die Verbuchung auch die alten <i>Sumerer</i> hingekriegt hätten.&#8221;</p>
<h2>Word und Unicode</h2>
<p>Nach dem Motto &#8220;Vorfreude, schönste Freude&#8221; hier noch ein kleines Schmankerl:</p>
<p>Man gebe in einem Word-Text das Wort &#8220;Unicode&#8221; ein. Jetzt stelle man den Cursor hinter das &#8220;U&#8221; und drückt &#8220;Alt+C&#8221;. Man sieht den Code für das &#8220;U&#8221;. (Erneut Alt+C setzt es zurück.)</p>
<p>Man wiederhole die Übung für das &#8220;o&#8221; und das &#8220;e&#8221;. Super!</p>
<p>Wie hieß es doch so schön: Ein bisschen Raten ist halt dabei.</p>
<p>[pullquote float=&#8217;CENTER&#8217; color=&#8217;#ffffff&#8217; bgcolor=&#8217;#ff5900&#8242;]Der Unicode, der Unicode,<br />
der kommt jetzt grade groß in Mod&#8217;.<br />
Wie das Bit auch kommt,<br />
wie das Byte auch fällt,<br />
der Unicode, der hält.[/pullquote]</p>
<p><b>Mannomann! Diese Kanaillen!</b></p>
<p>PS:</p>
<ul>
<li>Im SAP Online-Service-System (OSS) gibt es (Stand: 15.11.2011) insgesamt 9.386 Hinweise für den Suchbegriff &#8220;Unicode&#8221;.</li>
<li>Im Jahr 2011 sind es 1.009 Hinweise, 145 seit dem 17.10.2011.</li>
<li>Der Suchbegriff &#8220;Verbuchung&#8221; bringt 9.184 Treffer, &#8220;FI-Beleg&#8221; 4.556 Treffer.</li>
</ul>
<p>Mathias Gebhardt, SAP-Berater</p>
<p>Im November 2011</p>
<p>Der Beitrag <a href="/blog/launige-betrachtung-zum-unicode/">Launige Betrachtung zum Unicode</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/launige-betrachtung-zum-unicode/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Tabelle EXTRACT (unicode)</title>
		<link>/blog/tabelle-extract-unicode/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate></pubDate>
				<category><![CDATA[Tabellenpflegedialog]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Unicode]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=504</guid>

					<description><![CDATA[<p>Bei Unicode-Systemen gibt es Probleme bei dem Zugriff der unstrukturierten Tabelle EXTRACT (Kurzdump UC_OBJECTS_NOT_CONVERTIBLE). Hier zeigen wir, wie der Zugriff erfolgen muss.</p>
<p>Der Beitrag <a href="/blog/tabelle-extract-unicode/">Tabelle EXTRACT (unicode)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Bei Unicode-Systemen gibt es Probleme bei dem Zugriff der unstrukturierten Tabelle EXTRACT (Kurzdump UC_OBJECTS_NOT_CONVERTIBLE). Hier zeigen wir, wie der Zugriff erfolgen muss.<br /><P>Wir wollen einen Eintrag aus der Tabelle EXTRACT lesen und die Daten (Workarea) vom Viewtyp ZZTEST_V einer Struktur zuweisen.</P><P class="sap1"><FONT color="#fb2412">*** Datentypen<BR></FONT>&nbsp; TYPES BEGIN OF ty_zztest_v.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INCLUDE STRUCTURE zztest_v.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INCLUDE STRUCTURE vimflagtab.<BR>&nbsp; TYPES END OF ty_zztest_v.</P><P class="sap1">&nbsp; DATA ls_tmpk&nbsp; TYPE ty_zztest_v.<BR>&nbsp; DATA lv_line&nbsp; TYPE i.</P><P class="sap1"><FONT color="#fb2412">*** Zeilennummer 1<BR></FONT>&nbsp; lv_line = 1.</P><P class="sap1"><FONT color="#fb2412">*** Erforderliche Feldsymbole</FONT><BR>&nbsp; FIELD-SYMBOLS:<BR>&nbsp;&nbsp;&nbsp; &lt;x1&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE x,<BR>&nbsp;&nbsp;&nbsp; &lt;x2&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE x,<BR>&nbsp;&nbsp;&nbsp; &lt;data&gt;&nbsp;&nbsp;&nbsp; TYPE ANY,<BR>&nbsp;&nbsp;&nbsp; &lt;extract&gt; TYPE table.</P><P class="sap1"><FONT color="#fb2412">*** Casting f&uuml;r EXTRACT durchf&uuml;hren</FONT><BR>&nbsp; ASSIGN (&#8216;EXTRACT[]&#8217;)&nbsp;&nbsp; TO &lt;extract&gt;.</P><P class="sap1"><FONT color="#fb2412">*** Eintrag&nbsp;aus EXTRACT lesen<BR></FONT>&nbsp; READ TABLE &lt;extract&gt; ASSIGNING &lt;data&gt; INDEX lv_line.</P><P class="sap1"><FONT color="#fb2412">*** Casting der&nbsp;Workarea</FONT><BR>&nbsp; ASSIGN &lt;data&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;TO &lt;x1&gt; CASTING.<BR>&nbsp; ASSIGN (&#8216;LS_ZZTEST_V&#8217;) TO &lt;x2&gt; CASTING.</P><P class="sap1"><FONT color="#fb2412">*** Zuweisung &uuml;ber gecastete Strukturen: LS_ZZTEST_V ist nun gef&uuml;llt<BR></FONT>&nbsp; &lt;x2&gt; = &lt;x1&gt;.</P></p>
<p>Der Beitrag <a href="/blog/tabelle-extract-unicode/">Tabelle EXTRACT (unicode)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Suchen und Ersetzen</title>
		<link>/blog/suchen-und-ersetzen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 17 Oct 2006 19:12:10 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Unicode]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=389</guid>

					<description><![CDATA[<p>Suchen und Ersetzen in Unicode-Systemen. Hier kann man sich gut einzelner Klassen bedienen, um sicher die richtigen Daten zu ersetzen</p>
<p>Der Beitrag <a href="/blog/suchen-und-ersetzen/">Suchen und Ersetzen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Suchen und Ersetzen in Unicode-Systemen. Hier kann man sich gut einzelner Klassen bedienen, um sicher die richtigen Daten zu ersetzen<br /><P class="head1">Tabulator ersetzen</P><P class="sap1">DATA lv_test(100).<BR><BR>lv_test = &#8216;123;ABC;&#8221;ich&#8221;;&#8221;du&#8221;;&#8221;er&#8221;;&#8221;sie&#8221;;&#8221;es&#8221;&#8216;.<BR><BR>REPLACE ALL OCCURRENCES OF &#8216;;&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp; IN lv_test<BR>&nbsp;&nbsp; WITH <FONT color="#fb2412">cl_abap_char_utilities=&gt;horizontal_tab</FONT>.</P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/suchen-und-ersetzen/">Suchen und Ersetzen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Klassen zu Unicode</title>
		<link>/blog/klassen-zu-unicode/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 17 Oct 2006 18:33:09 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Unicode]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=388</guid>

					<description><![CDATA[<p>Klassen und Funktionsbausteine zur Unicode-Umwandlung.</p>
<p>Der Beitrag <a href="/blog/klassen-zu-unicode/">Klassen zu Unicode</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Klassen und Funktionsbausteine zur Unicode-Umwandlung.<br /><P class="text1">Folgende Klassen k&ouml;nnen&nbsp;zur Verarbeitung in Unicode-Systemen n&uuml;tzlich sein. Verwenden Sie die Transaktion SE24, um die vorhandenen Methoden/ Attribute zu sehen.</P><P class="head1">Funktionsbaustein SLDAG_CHECK_FOR_UNICODE</P><P class="text1">Pr&uuml;fen, ob es sich um ein UNICODE-System handelt, oder nicht.</P><P class="head1">Funktionsbaustein SYSTEM_CODEPAGE</P><P class="text1">Ermittelt die verwendete Codepage des Systems</P><P class="head1">Funktionsbaustein SCP_TRANSLATE_CHARS_46</P><P class="text1">Wandelt einen Text von einer Codepage in eine andere um.</P><P class="head1">CL_ABAP_CONV_IN_CE</P><P class="text1"><FONT color="#fb2412">Codepage- und Endian Konvertierung (Extern -&gt; Systemformat)</FONT></P><P class="text1">Umfangreiche Klassendokumentation; die Methoden werden ausf&uuml;hrlich erl&auml;utert.</P><P class="head1">CL_ABAP_CHAR_UTILITIES</P><P class="text1"><FONT color="#fb2412">Hilfsmittel f&uuml;r Zeichenverarbeitung</FONT></P><P>Die Klasse hat zwar keine Klassendokumentation, aber die einzelnen Methoden und Attribute sind gut beschrieben</P><P class="head1">CL_HR_PNNNN_TYPE_CAST</P><P class="text1"><FONT color="#fb2412">HR: CASTing f&uuml;r Pnnnn Strukturen</FONT></P><P class="text1">Mit dieser Klasse k&ouml;nnen die Daten der Infotypen von und in die generische Struktur Pnnnn &uuml;berf&uuml;hrt werden.&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/klassen-zu-unicode/">Klassen zu Unicode</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Casting zwischen Strukturen</title>
		<link>/blog/casting-zwischen-strukturen/</link>
					<comments>/blog/casting-zwischen-strukturen/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 17 Oct 2006 18:09:16 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Unicode]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=387</guid>

					<description><![CDATA[<p>In Nicht-Unicode-Systemen kann man eine beliebige Struktur f&#252;llen und diese dann in ein Character-Feld schieben. Bei Unicode-Systemen geht's nicht mehr so einfach; hier m&#252;ssen die verschiedenen Strukturen per Assign "gecastet" werden. Danach k&#246;nnen sie zugewiesen werden.</p>
<p>Der Beitrag <a href="/blog/casting-zwischen-strukturen/">Casting zwischen Strukturen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>In Nicht-Unicode-Systemen kann man eine beliebige Struktur f&uuml;llen und diese dann in ein Character-Feld schieben. Bei Unicode-Systemen geht&#8217;s nicht mehr so einfach; hier m&uuml;ssen die verschiedenen Strukturen per Assign &#8220;gecastet&#8221; werden. Danach k&ouml;nnen sie zugewiesen werden.<br /><P>Sobald ein nicht-Zeichenartiges Feld in der Quellstruktur vorkommt, kann die Zuweisung in einem Unicode-System nicht &uuml;ber einen normalen MOVE bewerkstelligt werden. Hier meckert der Compiler: &#8221;&nbsp;&#8220;Quellstruktur&#8221; und &#8220;Zielstruktur&#8221; sind in einem Unicode-Programm nicht ineinander&nbsp;konvertierbar&#8221;</P><P>Macht man dasselbe &uuml;ber einen ungecasteteten ASSIGN, so erh&auml;lt man den Kurzdump &#8220;UC_OBJECTS_NOT_CONVERTIBLE&#8221;.</P><P>Besteht die Struktur aus reinen CHAR- oder NUMC-Feldern, kann die Zuweisung so erfolgen:</P><P class="sap1">LV_FELD = LS_DATA.</P><P>Das folgende Coding zeigt die L&ouml;sung, wenn auch andere Typen verwendet werden.</P><P class="head1">Coding mit definierter Struktur</P><P class="sap1"><FONT color="#fb2412">*** Type der eigenen Struktur<BR></FONT>TYPES:<BR>&nbsp; BEGIN OF ty_data,<BR>&nbsp;&nbsp;&nbsp; feld1(10)&nbsp; TYPE c,<BR>&nbsp;&nbsp;&nbsp; feld2(5)&nbsp;&nbsp; TYPE n,<BR>&nbsp;&nbsp;&nbsp; feld3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE i,<BR>&nbsp;&nbsp;&nbsp; feld4(6)&nbsp;&nbsp; TYPE p DECIMALS 3,<BR>&nbsp;END OF ty_data.</P><P class="sap1">DATA:<BR><FONT color="#fb2412">*** Eigene Struktur</FONT><BR>&nbsp;ls_data TYPE ty_data,<BR><FONT color="#fb2412">*** Feld, in das die Daten geschoben werden sollen:</FONT><BR>&nbsp;lv_feld TYPE c LENGTH 100.</P><P class="sap1"><FONT color="#fb2412">*** Erforderliche Feldsymbole</FONT><BR>FIELD-SYMBOLS:<BR>&nbsp; &lt;x1&gt;&nbsp;&nbsp;&nbsp; TYPE ty_data.</P><P class="sap1"><FONT color="#fb2412">*** Programmstart</FONT><BR>START-OF-SELECTION.</P><P class="sap1"><FONT color="#fb2412">*** Testdaten f&uuml;llen</FONT><BR>&nbsp; ls_data-feld1 = &#8216;ABCDEFGHIJ&#8217;.<BR>&nbsp; ls_data-feld2 = &#8216;12345&#8217;.<BR>&nbsp; ls_data-feld3 = 123.<BR>&nbsp; ls_data-feld4 = &#8216;9876.543&#8217;.</P><P class="sap1"><FONT color="#fb2412">*** Zielfeld l&ouml;schen</FONT><BR>&nbsp; CLEAR lv_feld.</P><P class="sap1"><FONT color="#fb2412">*** Casting durchf&uuml;hren</FONT><BR>&nbsp; ASSIGN lv_feld&nbsp;&nbsp;&nbsp;&nbsp; TO &lt;x1&gt; CASTING.<BR><FONT color="#fb2412">*** Zuweisung &uuml;ber gecastete Strukturen</FONT><BR>&nbsp; &lt;x1&gt; = ls_Data.</P><P class="sap1"><FONT color="#fb2412">*** Test Ausgabe</FONT><BR>&nbsp; WRITE: / &#8216;Ergebnis:&#8217;, lv_feld.</P></p>
<p>Der Beitrag <a href="/blog/casting-zwischen-strukturen/">Casting zwischen Strukturen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/casting-zwischen-strukturen/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
