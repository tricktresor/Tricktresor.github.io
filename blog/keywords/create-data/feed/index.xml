<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>create data Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/create-data/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:25:04 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>create data Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Flexible Erzeugung des Feldkataloges</title>
		<link>/blog/flexible-erzeugung-des-feldkataloges/</link>
		
		<dc:creator><![CDATA[stefan]]></dc:creator>
		<pubDate>Mon, 23 Jun 2014 16:56:06 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[create data]]></category>
		<category><![CDATA[assign]]></category>
		<category><![CDATA[cl_abap_structdescr]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_abap_typedescr]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<category><![CDATA[feldkatalog]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4862</guid>

					<description><![CDATA[<p>In dem Artikel DATA ... RENAMING WITH SUFFIX wurde die Aussage gemacht: "Die ALVs haben Probleme mit komplexen Strukturen". Das stimmt so nicht. NatÃ¼rlich ist es kein Problem des ALV sondern ein Problem bei der Erzeugung des Feldkatalogs. Ich habe mich darauf hin des Problems um die Erzeugung des Feldkatalogs zu einer komplexen Struktur angenommen und ein Programm entwickelt. Das Programm analysiert die komplexe Datenstruktur einer internen Tabelle und baut den Feldkatalog so auf, dass der ALV ihn zur Anzeige der Daten verwenden kann.</p>
<p>Der Beitrag <a href="/blog/flexible-erzeugung-des-feldkataloges/">Flexible Erzeugung des Feldkataloges</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>InÂ dem Artikel <a title="DATA â€¦ RENAMING WITH SUFFIX" href="https://tricktresor.com/blog/data-renaming-with-suffix/">DATA &#8230; RENAMING WITH SUFFIX</a>Â macht Enno die Aussage &#8220;Die ALVs haben Probleme mit komplexen Strukturen&#8221;. Das stimmt so nicht. NatÃ¼rlich ist es kein Problem des ALV sondern ein Problem bei der Erzeugung des Feldkatalogs. Ich habe mich deswegen einmalÂ um die Erzeugung des Feldkatalogs zu einer komplexen Struktur gekÃ¼mmertÂ und einÂ Programm entwickelt, dass einen Feldkatalog zu einer tiefen Struktur aufbauen kann.</p>
<h2>Arbeitsweise</h2>
<p>Das Programm analysiert die komplexe Datenstruktur einer internen Tabelle und baut den Feldkatalog so auf, dass der ALV ihn zur Anzeige der Daten verwenden kann.</p>
<p>Die Anzeige ist etwas bunter ausgefallen&#8230; <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png" alt="ðŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180623.jpg"><img fetchpriority="high" decoding="async" class="alignnone wp-image-4863 size-full" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180623.jpg" alt="Bild_2014_06_23_180623" width="572" height="286" srcset="/wp-content/uploads/2014/06/Bild_2014_06_23_180623.jpg 572w, /wp-content/uploads/2014/06/Bild_2014_06_23_180623-300x150.jpg 300w" sizes="(max-width: 572px) 100vw, 572px" /></a></p>
<h2>Coding</h2>
<pre>REPORT .

TYPES: BEGIN OF gts_data,
*         mara TYPE mara,
*         marc TYPE marc,
         t005  TYPE t005,
         t005t TYPE t005t,
       END OF gts_data.


DATA gt_data     TYPE STANDARD TABLE OF gts_data WITH NON-UNIQUE DEFAULT KEY.
DATA gt_fieldcat TYPE lvc_t_fcat.
DATA go_grid     TYPE REF TO cl_gui_alv_grid.
DATA gv_style    TYPE i.

*----------------------------------------------------------------------*
*       CLASS lcx_general_exceptions DEFINITION
*----------------------------------------------------------------------*
CLASS lcx_general_exceptions DEFINITION INHERITING FROM cx_static_check.
ENDCLASS.                    "lcx_general_exceptions DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_alv_utilities DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_alv_utilities DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS create_fieldcat_lvc  IMPORTING i_data TYPE  any
                                       RETURNING value(et_fieldcat) TYPE lvc_t_fcat
                                       RAISING lcx_general_exceptions.
  PRIVATE SECTION.
    CLASS-METHODS create_fieldcat_line IMPORTING i_data TYPE  any
                                       RETURNING value(et_fieldcat) TYPE lvc_t_fcat.
ENDCLASS.                    "lcl_alv_utilities DEFINITION


START-OF-SELECTION.
  WRITE '.'.

  SELECT * UP TO 100 ROWS
    INTO TABLE gt_data
*    FROM mara JOIN marc ON mara~matnr = marc~matnr.
    FROM t005 JOIN t005t ON t005~land1 = t005t~land1.

  CREATE OBJECT go_grid
    EXPORTING
      i_parent = cl_gui_container=&gt;screen0.
  gt_fieldcat = lcl_alv_utilities=&gt;create_fieldcat_lvc( gt_data ).
  go_grid-&gt;set_table_for_first_display( CHANGING
                                          it_outtab       = gt_data
                                          it_fieldcatalog = gt_fieldcat ).

*----------------------------------------------------------------------*
*       CLASS lcl_alv_utilities IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_alv_utilities IMPLEMENTATION.

  METHOD create_fieldcat_lvc.

    FIELD-SYMBOLS: &lt;lt_data&gt; TYPE ANY TABLE,
                   &lt;ls_line&gt; TYPE any,
                   &lt;ls_dref&gt; TYPE any.

    DATA lr_dref                 TYPE REF TO data.
    data lo_descr                TYPE REF TO cl_abap_typedescr.
    data lo_structdescr          TYPE REF TO cl_abap_structdescr.
    DATA lt_components           TYPE cl_abap_structdescr=&gt;component_table.
    FIELD-SYMBOLS &lt;ls_component&gt; LIKE LINE OF lt_components.

    lo_descr = cl_abap_typedescr=&gt;describe_by_data( i_data ).

    CASE lo_descr-&gt;kind.

      WHEN cl_abap_typedescr=&gt;kind_elem.                   
" Special case.  We see this when we have something like 
"... type standard table of syucomm.
* Tried various things but Grid won't show anything - 
" no matter what I try to provide a faked fieldcat
        RAISE EXCEPTION TYPE lcx_general_exceptions.       " Not foreseen yet

      WHEN cl_abap_typedescr=&gt;kind_struct.                 
        " Structure is fine --&gt; create fieldcat from this
        et_fieldcat = create_fieldcat_line( i_data ).

      WHEN cl_abap_typedescr=&gt;kind_table.                  
        " Table --&gt; restart with linetype of table
        ASSIGN i_data TO &lt;lt_data&gt;.
        CREATE DATA lr_dref LIKE LINE OF &lt;lt_data&gt;.
        ASSIGN lr_dref-&gt;* TO &lt;ls_line&gt;.
        et_fieldcat = create_fieldcat_lvc( &lt;ls_line&gt; ).

      WHEN cl_abap_typedescr=&gt;kind_ref.                    
        " Reference --&gt; restart with dereferenced value
        ASSIGN i_data-&gt;* TO &lt;ls_dref&gt;.
        et_fieldcat = create_fieldcat_lvc( &lt;ls_dref&gt; ).

*    when cl_abap_typedescr=&gt;KIND_CLASS.
*    when cl_abap_typedescr=&gt;KIND_INTF  .
      WHEN OTHERS.
        BREAK-POINT.  " Ich will das vorher sehen
        RAISE EXCEPTION TYPE lcx_general_exceptions.       " Not foreseen yet

    ENDCASE.

  ENDMETHOD.                                               "create_fieldcat_lvc


  METHOD create_fieldcat_line.

    DATA lr_dref               TYPE REF TO data.
    data lo_salv               TYPE REF TO cl_salv_table.
    data lo_salv_columns_table TYPE REF TO cl_salv_columns_table.
    data lo_salv_aggregations  TYPE REF TO cl_salv_aggregations.
    data lv_help_id            TYPE string.

    FIELD-SYMBOLS &lt;ls_fc&gt;      LIKE LINE OF et_fieldcat.
    FIELD-SYMBOLS &lt;lv_field&gt;   TYPE any.

    FIELD-SYMBOLS &lt;lt_data&gt;    TYPE STANDARD TABLE.

*--------------------------------------------------------------------*
* Create standard table of input
*--------------------------------------------------------------------*
    CREATE DATA lr_dref LIKE STANDARD TABLE OF i_data.
    ASSIGN lr_dref-&gt;* TO &lt;lt_data&gt;.
    TRY.
        cl_salv_table=&gt;factory( IMPORTING
                                  r_salv_table   = lo_salv
                                CHANGING
                                  t_table        = &lt;lt_data&gt; ).
        lo_salv_columns_table = lo_salv-&gt;get_columns( ).
        lo_salv_aggregations  = lo_salv-&gt;get_aggregations( ).

        et_fieldcat = cl_salv_controller_metadata=&gt;get_lvc_fieldcatalog(
                            r_columns      = lo_salv_columns_table
                            r_aggregations = lo_salv_aggregations ).
*--------------------------------------------------------------------*
* Internal fields w/o descriptions --&gt; set fieldname into header line
*--------------------------------------------------------------------*
        LOOP AT et_fieldcat ASSIGNING &lt;ls_fc&gt; WHERE scrtext_s = space
                                                AND scrtext_m = space
                                                AND scrtext_l = space.
          &lt;ls_fc&gt;-scrtext_m = &lt;ls_fc&gt;-fieldname.
        ENDLOOP.

*--------------------------------------------------------------------*
* Add F1 and F4-Help
* Idea from http://wiki.scn.sap.com/wiki/display/Snippets/ALV+fieldcatalog+-+create+for+ANY+table
*--------------------------------------------------------------------*
        LOOP AT et_fieldcat ASSIGNING &lt;ls_fc&gt;.

          ASSIGN COMPONENT &lt;ls_fc&gt;-fieldname OF STRUCTURE i_data TO &lt;lv_field&gt;.
          CHECK sy-subrc = 0.
          &lt;ls_fc&gt;-style     = gv_style.
          ADD 1 TO gv_style.

        TRY.
          CLEAR lv_help_id.
          DESCRIBE FIELD &lt;lv_field&gt; HELP-ID lv_help_id.
          IF lv_help_id CA '-'.
            SPLIT lv_help_id AT '-' INTO &lt;ls_fc&gt;-ref_table &lt;ls_fc&gt;-ref_field.
          ENDIF.
          CATCH cx_root.
        ENDTRY.

        ENDLOOP.

      CATCH cx_salv_msg .
    ENDTRY.

  ENDMETHOD.                                               "create_fieldcat_line
ENDCLASS.                    "lcl_alv_utilities IMPLEMENTATION</pre>
<p>Der Beitrag <a href="/blog/flexible-erzeugung-des-feldkataloges/">Flexible Erzeugung des Feldkataloges</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Interne Tabelle mit COMPONENTS</title>
		<link>/blog/interne-tabelle-mit-components/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 29 Aug 2012 15:03:25 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[select]]></category>
		<category><![CDATA[create data]]></category>
		<category><![CDATA[assign]]></category>
		<category><![CDATA[cl_abap_tabledescr]]></category>
		<category><![CDATA[cl_abap_structdescr]]></category>
		<category><![CDATA[cl_abap_elemdescr]]></category>
		<category><![CDATA[abap]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=657</guid>

					<description><![CDATA[<p>Hier wird eine interne Tabelle anhand von einer beliebigen Anzahl Feldern generiert.</p>
<p>Der Beitrag <a href="/blog/interne-tabelle-mit-components/">Interne Tabelle mit COMPONENTS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Hier wird eine interne Tabelle anhand von einer beliebigen Anzahl Feldern generiert.</p>
<p>Die Tabelle, aus der die Daten gelesen werden sollen, muss angegeben werden. Dann mÃ¼ssen die Felder EINZELN in der Select-Option eingetragen werden. Die Feldnamen mÃ¼ssen mit dem Namen des Datenelements Ã¼bereinstimmen.</p>
<p>Eine schÃ¶nere Version wÃ¤re die Komponenten der angegebenen Tabelle zu ermitteln (CL_ABAP_STRUCTDESCR-&gt;GET_COMPONENTS).</p>
<p><strong><span style="text-decoration: underline;">Achtung:</span><br />
</strong>Es erfolgt keine PrÃ¼fung ob die Felder in der Tabelle vorhanden sind! Wenn Feldnamen angegeben werden, die nicht in der angegebenen Tabelle existieren, kommt es zu einem Dump!</p>
<p>Es erfolgt keine Ausgabe der Daten!</p>
<h2 class="head1">Coding</h2>
<pre class="lang:abap decode:true  ">*== Create internal table dynamically by given fields
 DATA: gr_element Â  TYPE REF TO cl_abap_elemdescr,
 gr_strucÂ Â Â Â  TYPE REF TO cl_abap_structdescr,
 gr_tableÂ Â Â Â  TYPE REF TO cl_abap_tabledescr,
 gt_compÂ Â Â Â Â  TYPE cl_abap_structdescr=&gt;component_table,
 gs_compÂ Â Â Â  Â LIKE LINE OF lt_comp,
 gr_dataÂ Â Â  Â  TYPE REF TO data,
 gt_fields Â Â  TYPE STANDARD TABLE OF string,
 hf_fieldname TYPE fieldname.

FIELD-SYMBOLS &lt;table&gt; TYPE ANY TABLE.

*== selection screen
 PARAMETERS p_table TYPE tabname DEFAULT 'MARA'.
 SELECT-OPTIONS s_fields FOR hf_fieldname.
 

START-OF-SELECTION.

Â  LOOP AT s_fields.
 CLEAR: gs_comp.

*== Element Description for field
 gr_element ?= cl_abap_elemdescr=&gt;describe_by_name( s_fields-low ).
 *== Field name
 gs_comp-name = s_fields-low.
 *== Field type (element)
 gs_comp-type = gr_element.
 *== add element to components table
 APPEND gs_comp TO gt_comp.

*== add column to selection table
 APPEND s_fields-low TO gt_fields.

Â  ENDLOOP.

*== Create structure/ work area
 gr_struc = cl_abap_structdescr=&gt;create( gt_comp ).

*==Â create table by structure reference
 gr_table = cl_abap_tabledescr=&gt;create(
 p_line_typeÂ  = gr_struc
 p_table_kind = cl_abap_tabledescr=&gt;tablekind_std
 p_uniqueÂ Â Â Â  = abap_false ).

*== create data handle for table
 CREATE DATA gr_data TYPE HANDLE gr_table.

*== assign data to table-pointer
 ASSIGN gr_data-&gt;* TO &lt;table&gt;.

*== Select data into dynamic internal table
 SELECT (gt_fields) FROMÂ  (p_table)
 INTO CORRESPONDING FIELDS OF TABLE &lt;table&gt;
 UP TO 10 ROWS.</pre>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/interne-tabelle-mit-components/">Interne Tabelle mit COMPONENTS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Interne Tabelle DDIC</title>
		<link>/blog/interne-tabelle-ddic/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 29 Aug 2012 13:57:36 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[create data]]></category>
		<category><![CDATA[assign]]></category>
		<category><![CDATA[cl_abap_tabledescr]]></category>
		<category><![CDATA[assign component]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_abap_typedescr]]></category>
		<category><![CDATA[DDIC]]></category>
		<category><![CDATA[color]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=655</guid>

					<description><![CDATA[<p>Eine interne Tabelle anhand einer gegebenen DDIC-Struktur erzeugen und Ausgabe als einfache Liste</p>
<p>Der Beitrag <a href="/blog/interne-tabelle-ddic/">Interne Tabelle DDIC</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Eine interne Tabelle anhand einer gegebenen DDIC-Struktur erzeugen und Ausgabe als einfache Liste</p>
<p class="head1">Verwendung</p>
<p>Die in diesem Beispiel verwendete MÃ¶glichkeit interne Tabellen und Arbeitsbereiche dynamisch zu erzeugen kann verwendet werden, wenn der Inhalt einer Datenbanktabelle ausgelesen werden soll.</p>
<p>So kÃ¶nnte man zum Beispiel ein Programm schreiben, das alle Tabellen ausliest, in denen das Datenelement &#8220;MATNR&#8221; vor kommt. FÃ¼r jede Tabelle wird dann dynamisch eine interne Tabelle generiert und mittels ASSIGN COMPONENT &#8216;MATNR&#8217; kÃ¶nnten dynamisch PrÃ¼fungen auf die Materialnummer erfolgen.</p>
<p class="head1">Coding</p>
<p class="sap1"><span style="color: #fb2412;">*== data</span><br />
DATA gr_structÂ Â Â Â  TYPE REF TO cl_abap_structdescr.<br />
DATA gr_tableÂ Â Â Â Â  TYPE REF TO cl_abap_tabledescr.<br />
DATA gd_tableÂ Â Â Â Â  TYPE REF TO data.<br />
DATA gd_lineÂ Â Â Â Â Â  TYPE REF TO data.</p>
<p class="sap1"><span style="color: #fb2412;">*== field symbols</span><br />
FIELD-SYMBOLS &lt;workarea&gt; TYPE ANY.<br />
FIELD-SYMBOLS &lt;table&gt;Â Â Â  TYPE ANY TABLE.<br />
FIELD-SYMBOLS &lt;value&gt;Â Â Â  TYPE ANY.</p>
<p class="sap1">PARAMETERS p_table TYPE tabname DEFAULT &#8216;T000&#8217;.</p>
<p class="sap1">START-OF-SELECTION.</p>
<p class="sap1"><span style="color: #fb2412;">*== get structure description</span><br />
gr_structÂ  ?= cl_abap_typedescr=&gt;describe_by_name( p_table ).<br />
*== create table description using structure description<br />
gr_tableÂ Â  ?= cl_abap_tabledescr=&gt;create( gr_struct ).</p>
<p class="sap1"><span style="color: #fb2412;">*== create work area</span><br />
CREATE DATA gd_line TYPE HANDLE gr_struct.<br />
ASSIGN gd_line-&gt;* TO &lt;workarea&gt;.</p>
<p class="sap1"><span style="color: #fb2412;">*== create internal table</span><br />
CREATE DATA gd_table TYPE HANDLE gr_table.<br />
ASSIGN gd_table-&gt;* TO &lt;table&gt;.</p>
<p class="sap1"><span style="color: #fb2412;">*== select data from database into dynamically generated internal table</span><br />
SELECT * FROM (p_table)<br />
INTO CORRESPONDING FIELDS OF TABLE &lt;table&gt; UP TO 20 ROWS.</p>
<p class="sap1"><span style="color: #fb2412;">*== loop at all table lines for output</span><br />
LOOP AT &lt;table&gt; ASSIGNING &lt;workarea&gt;.<br />
NEW-LINE.<br />
DO.<br />
<span style="color: #fb2412;">*== loop at all components of the structure</span><br />
ASSIGN COMPONENT sy-index OF STRUCTURE &lt;workarea&gt; TO &lt;value&gt;.<br />
IF sy-subrc &gt; 0.<br />
EXIT.<br />
ELSE.<br />
<span style="color: #fb2412;">*== and write into list</span><br />
WRITE &lt;value&gt; COLOR COL_NORMAL.<br />
ENDIF.<br />
ENDDO.<br />
ENDLOOP.</p>
<p>Der Beitrag <a href="/blog/interne-tabelle-ddic/">Interne Tabelle DDIC</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
