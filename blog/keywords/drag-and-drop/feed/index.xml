<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Drag and Drop Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/drag-and-drop/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Mon, 23 May 2022 08:53:38 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Drag and Drop Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>SAP-Demoprogramme</title>
		<link>/blog/sap-demoprogramme/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 31 May 2016 08:26:29 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Workshop]]></category>
		<category><![CDATA[Dynamische Dokumente]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[Demo-Programme]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Tree]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=431</guid>

					<description><![CDATA[<p>Demoprogramme der SAP. CALENDAR_CONTROL CONTEXT_MENU_DYNPR CONTEXT_MENU_LIST CUSTOM_CONTROL DIALOGBOX_CONTROL DOCKING_CONTROL DRAG_DROP_EDIT_TREE DRAG_DROP_TREE_MULTI  DROPDOWN_LISTBOX HTML_VIEWER HTML_VIEWER_WORKSHOP PICTURE_CONTROL SAP_LIST_TREE SPLITTER_CONTROL SUBSCREEN TABLE_CONTROL TOOLBAR_DIALOGBOX</p>
<p>Der Beitrag <a href="/blog/sap-demoprogramme/">SAP-Demoprogramme</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Demoprogramme der SAP. CALENDAR_CONTROL CONTEXT_MENU_DYNPR CONTEXT_MENU_LIST CUSTOM_CONTROL DIALOGBOX_CONTROL DOCKING_CONTROL DRAG_DROP_EDIT_TREE DRAG_DROP_TREE_MULTI DROPDOWN_LISTBOX HTML_VIEWER HTML_VIEWER_WORKSHOP PICTURE_CONTROL SAP_LIST_TREE SPLITTER_CONTROL SUBSCREEN TABLE_CONTROL TOOLBAR_DIALOGBOX</p>
<p>[notice type=&#8217;info&#8217;]Viele DEMO-Programme finden sich im Paket SLIS!</p>
<p>Demoprogramme beginnen häufig mit DEMO* oder RSDEMO* [/notice]</p>
<h2 class="head1">Toolbar</h2>
<ul>
<li>
<div class="text1">RSDEMO_TOOLBAR_DIALOGBOX</div>
</li>
<li>SAPTOOLBAR_IN_SPLITTER</li>
<li>SAPTOOLBAR_DEMO1</li>
<li>BCALV_GRID_07</li>
</ul>
<h2 class="head1">ALV-Grid</h2>
<ul>
<li>BCALV*</li>
<li><span style="color: #fb2412;"><strong>BCALV_VERIFY_DATATYPES</strong></span><br />
Das Mega-Test-Programm für jegliche Optionen des ALV-Grid</li>
<li><span style="color: #fb2412;"><strong>BCALV_TEST_SUITE</strong><br />
</span>Viele Funktionen in einem Programm</li>
</ul>
<h2 class="head1">ALV-Tree</h2>
<ul>
<li>SAPSIMPLE_TREE_CONTROL_DEMO</li>
<li>R_ALV_TREE_TOOLBAR_MANAGER</li>
<li>BCALV_GRID_DND_TREE</li>
<li>BCALV_GRID_DND_TREE_SIMPLE</li>
<li>BCALV_TEST_COLUMN_TREE</li>
<li>BCALV_TEST_SIMPLE_TREE</li>
<li>BCALV_TREE_01</li>
<li>BCALV_TREE_02</li>
<li>BCALV_TREE_03</li>
<li>BCALV_TREE_04</li>
<li>BCALV_TREE_05</li>
<li>BCALV_TREE_06</li>
<li>BCALV_TREE_DEMO</li>
<li>BCALV_TREE_DND</li>
<li>BCALV_TREE_DND_MULTIPLE</li>
<li>BCALV_TREE_EVENT_RECEIVER</li>
<li>BCALV_TREE_EVENT_RECEIVER01</li>
<li>BCALV_TREE_ITEMLAYOUT</li>
<li>BCALV_TREE_MOVE_NODE_TEST</li>
<li>BCALV_TREE_SIMPLE_DEMO</li>
<li>Doku:<br />
<a href="http://help.sap.com/printdocu/core/print46b/de/data/de/pdf/BCCITREE.pdf" target="_blank" rel="noopener noreferrer">http://help.sap.com/printdocu/core/print46b/de/<br />
data/de/pdf/BCCITREE.pdf</a></li>
</ul>
<h2 class="head1">Dialogbox</h2>
<ul>
<li>
<div class="text1">RSDEMO_DIALOGBOX_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_TOOLBAR_DIALOGBOX</div>
</li>
</ul>
<h2 class="head1">Drawer (Vertikales Tabstrip)</h2>
<ul>
<li>
<div class="text1">RSBPT_CONTAINER_BAR_3</div>
</li>
</ul>
<h2 class="head1">Context Menu</h2>
<ul>
<li>RSDEMO_CONTEXT_MENU_DYNPR</li>
<li>
<div class="text1">RSDEMO_CONTEXT_MENU_LIST</div>
</li>
<li>
<div class="text1">R_ALV_TREE_TOOLBAR_MANAGER</div>
</li>
</ul>
<h2 class="head1">Grafik</h2>
<ul>
<li>
<div class="text1">GRAPHICS_GUI_CE_DEMO</div>
</li>
</ul>
<h2 class="head1">Drag and Drop</h2>
<ul>
<li>
<div class="text1">RSDEMO_DRAG_DROP_EDIT_TREE</div>
</li>
<li>
<div class="text1">RSDEMO_DRAG_DROP_TREE_MULTI</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_DRAGDROP</div>
</li>
<li>
<div class="text1">BCALV_GRID_DND_TREE</div>
</li>
<li>
<div class="text1">BCALV_GRID_DND_TREE_SIMPLE</div>
</li>
<li>
<div class="text1">SAPCALENDAR_DRAG_DROP</div>
</li>
<li>
<div class="text1">BCALV_TEST_DRAG_DROP_02</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_EVENTS</div>
</li>
</ul>
<h2 class="head1">Textedit</h2>
<ul>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_1</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_3</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_DRAGDROP</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_1</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_2</div>
</li>
<li>
<div class="text1"><span style="line-height: 1.5em;">SAPTEXTEDIT_TEST_EVENTS</span></div>
</li>
<li>SAPBTFEDITOR_DEMO Demonstriert die Verwendung des BTF-Editors</li>
<li>SAPBTFFRAMEWORK_DEMO</li>
</ul>
<h2 class="head2">HTML</h2>
<ul>
<li>
<div class="text1">SAPHTML_SCRIPT_DEMO</div>
<div class="text1"></div>
</li>
<li>
<div class="text1">RSDEMO_HTML_VIEWER</div>
</li>
<li>
<div class="text1">RSDEMO_HTML_VIEWER_WORKSHOP</div>
</li>
<li>RSTXHTML</li>
<li>SAPHTML_DEMO_CN</li>
<li>SAPHTML_DEMO1</li>
<li>SAPHTML_EVENTS_DEMO</li>
<li>SAPHTML_LONGTEXT_DEMO</li>
<li>SAPHTML_R3HTTP_DEMO</li>
<li>SAPHTML_R3HTTP_XML</li>
<li>SAPHTML_SCRIPT_DEMO</li>
<li>SAPHTML_SET_GUI_CHARSET</li>
<li>SAPHTML_SSO_DEMO</li>
<li>SAPHTML_UI_DEMO</li>
<li>SAPHTML_USE_DEFAULT_CHARSET</li>
<li>SAPHTMLPAGEEDITOR_DEMO1</li>
</ul>
<h2 class="head1">Dynamische Dokumente/ ABAP-Renderer</h2>
<table style="height: 115px;" width="665">
<tbody>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_FLOW</span></li>
</ul>
</td>
<td>Demonstriert die Verwendung der Element FLOW des Gestaltungsobjekts</td>
</tr>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID</span></li>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID_1</span></li>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID_2</span></li>
</ul>
</td>
<td style="vertical-align: top;">Demonstriert die Verwendung der Element GRID des Gestaltungsobjekts</td>
</tr>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_TEST</span></li>
</ul>
</td>
<td> Testprogramm für das ALV Gestaltungsobjekt</td>
</tr>
</tbody>
</table>
<h2 class="head1">Mail</h2>
<ul>
<li>
<div class="text1">RSSOHTMLGIF (Sehr schönen Beispiel, um eine HTML Seite mit eingebundenen Bildern zu versenden)</div>
</li>
</ul>
<h2 class="head1">Calendar</h2>
<ul>
<li>RSDEMO_CALENDAR_CONTROL</li>
<li>SAPCALENDAR_DRAG_DROP</li>
</ul>
<h2 class="head1">Sonstige</h2>
<ul>
<li>
<div class="text1">RSDEMO_CUSTOM_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_EVENT_ON_FIELD</div>
</li>
<li>
<div class="text1">RSDEMO_DOCKING_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_DROPDOWN_LISTBOX</div>
</li>
<li>
<div class="text1">RSDEMO_EASY_SPLITTER_CONTROL</div>
</li>
<li>RSDEMO_PICTURE_CONTROL</li>
<li>
<div class="text1">RSDEMO_SAP_LIST_TREE</div>
</li>
<li>
<div class="text1">RSDEMO_SPLITTER_CONTROL</div>
</li>
<li>TEST_FRONTEND_SERVICES</li>
<li>DEMO_COLORSEL</li>
</ul>
<h2 class="head1">Old-Fashioned</h2>
<ul>
<li>
<div class="text1">RSDEMO_SUBSCREEN</div>
</li>
<li>
<div class="text1">RSDEMO_TABLE_CONTROL</div>
</li>
<li>RSDEOM02 (Table Control)</li>
<li>DEMO_LIST_FORMAT_COLOR_1 Farben in Listen</li>
<li>DEMO_LIST_FORMAT_COLOR_2 Verwendung von Farben in Listen</li>
</ul>
<h2>Grafik</h2>
<p><a href="https://tricktresor.com/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg"><img fetchpriority="high" decoding="async" class="alignnone size-full wp-image-654991" src="https://tricktresor.com/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg" alt="2016-05-31_10-13-35" width="615" height="477" srcset="/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg 615w, /wp-content/uploads/2007/08/2016-05-31_10-13-35-300x233.jpg 300w" sizes="(max-width: 615px) 100vw, 615px" /></a></p>
<p>Report RGRAPALL listet die folgenden Grafikbeispiele auf:</p>
<ul>
<li>BARCBO01 Demoprogramm: Balkenplan im Anzeigemodus</li>
<li>BARCBO02 Demoprogramm: Balkenplan im Pflegemodus</li>
<li>BARCBO03 Demoprogramm: Balkenplan im Pflegemodus (Plantafel)</li>
<li>BARCBO04 Demoprogramm: Gegenseitiges Aktualisieren von Balkenplan und Dynpro</li>
<li>BARCOCX1 Demoprogramm: Balkenplancontrol</li>
<li>DEMO_GFW_PRES_SHOW Anwendungsbeispiel für den Funktionsbaustein GFW_PRES_SHOW</li>
<li>DEMO_GFW_PRES_SHOW_MULT Anwendungsbeispiel für den Funktionsbaustein GFW_PRES_SHOW_MULT</li>
<li>GFW_DEMO_HIER1 GFW: Demonstration einer einfachen Hierarchiegrafik mit SAP-Tree</li>
<li>GFW_DEMO_HIER2 GFW: Demonstration einer Hierarchiegrafik (4 in Splitter, Drag&amp;Drop)</li>
<li>GFW_DEMO_HIER3 GFW: Demonstration einer Hierarchie-/Präsentationsgrafik (Drag&amp;Drop)</li>
<li>GFW_DEMO_PRES GFW: Demonstration von GFW mit sichtbarem Datencontainer</li>
<li>GFW_DEMO_PRES1 GFW: Demonstration von Präsentationsgrafiken mit GFW</li>
<li>GFW_PROG_BAR GFW: Programmierbeispiel für ein Balkendiagramm</li>
<li>GFW_PROG_COLUMNS_AND_TI GFW: Programmierbeispiel für ein Balkendiagramm mit Zeitachse</li>
<li>GFW_PROG_HISTOGRAM GFW: Programmierbeispiel für ein Histogramm</li>
<li>GFW_PROG_LABELS GFW: Programmierbeispiel für dieselben Beschriftungen, lange Beschr.</li>
<li>GFW_PROG_MTA GFW: Programmierbeispiel für eine Meilensteintrendanalyse</li>
<li>GFW_PROG_PIE GFW: Programmierbeispiel für ein Kreisdiagramm</li>
<li>GFW_PROG_POINT_WITH_LAB GFW: Programmierbeispiel für Diagramm mit gekennzeichnetem Punkt</li>
<li>GFW_PROG_TIME_AXIS GFW: Programmierbeispiel für ein Punktdiagramm mit Zeitachse</li>
<li>GFW_PROG_TUTORIAL GFW: Programmierbeispiel für eine einfache PräsGrafik = GFW-Tutorial</li>
<li>GFW_PROG_SPEEDOMETER GFW: Programmierbeispiel für ein Balkendiagramm<br />
<a href="https://tricktresor.com/wp-content/uploads/2016/05/SNAG-0001.png"><img decoding="async" class="alignnone size-full wp-image-1018035" src="https://tricktresor.com/wp-content/uploads/2016/05/SNAG-0001.png" alt="" width="531" height="417" srcset="/wp-content/uploads/2016/05/SNAG-0001.png 531w, /wp-content/uploads/2016/05/SNAG-0001-300x236.png 300w, /wp-content/uploads/2016/05/SNAG-0001-117x91.png 117w" sizes="(max-width: 531px) 100vw, 531px" /></a></li>
<li>GRBMAT_1 Demoprogramm: Pushbuttongrafik</li>
<li>GRBMAT_2 Demoprogramm: Pushbuttongrafik / 2</li>
<li>GRBUSG_1 Demoprogramm: SAP-Präsentationsgrafik 2D</li>
<li>GRBUSG_2 Demoprogramm: SAP-Präsentationsgrafik 3D</li>
<li>GRBUSG_3 Demoprogramm: Präsentationsgrafik Umsatzvergleich</li>
<li>GRBUSG_4 Demoprogramm: Präsentationsgrafik 2D &#8211; 3D &#8211; 4D</li>
<li>GRCNETC1 Demoprogramm: Ansteuern des Clustereditors im Anzeigemodus</li>
<li>GRCNETC2 Demoprogramm: Ansteuern des Clustereditors (erweiterte Version)</li>
<li>GRGANT_2 Demoprogramm: Gantt-Diagramm / 2</li>
<li>GRHIER_1 Demoprogramm: Hierarchiegrafik</li>
<li>GRHIER_2 Demoprogramm: Hierarchie</li>
<li>GRHPGL_1 Demoprogramm: HPGL-Display</li>
<li>GRPORT_0 Demonstration Portfolio-Grafik</li>
<li>GRSTAT_1 Demoprogramm: Trigonometrische Funktionen mit der Statistikgrafik</li>
<li>GRSTAT_2 Demoprogramm: Funktionsdarstellung mit der Statistikgrafik</li>
<li>HIER_BO1 Demoprogramm: Hierarchiegrafik im Anzeigemodus</li>
<li>HIER_BO2 Demoprogramm: Hierarchiegrafik im Pflegemodus</li>
<li>NETZOCX1 Demoprogramm: Netzplancontrol</li>
<li>NETZOCX2 Demoprogramm: Netzplancontrol mit Callbackverarbeitung</li>
<li>NETZ_BO1 Demoprogramm: Netzplangrafik im Anzeigemodus</li>
<li>NETZ_BO2 Demoprogramm: Netzplangrafik im Pflegemodus</li>
<li>NETZ_BO3 Demoprogramm: Netzplangrafik im Pflegemodus (erweiterte Form)</li>
</ul>
<p>Der Beitrag <a href="/blog/sap-demoprogramme/">SAP-Demoprogramme</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Formeleditor</title>
		<link>/blog/formeleditor/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 16 Jul 2014 18:30:52 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[Formeln]]></category>
		<category><![CDATA[Formeleditor]]></category>
		<category><![CDATA[Eigene Felder]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Eigenes]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4946</guid>

					<description><![CDATA[<p>Der Formeleditor ist ein mächtiges Werkzeug, der sich für viele Gelegenheiten nutzen lässt. Viele Beispielprogramme demonstrieren die Verwendung. Die hier vorgestellten Funktionen lösen die alten Funktionsbausteine EVAL_FORMULA und CHECK_FORMULA zum evaluieren einer Formel ab. </p>
<p>Der Beitrag <a href="/blog/formeleditor/">Formeleditor</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Im Beitrag <a title="Formelberechnung" href="https://tricktresor.com/blog/formelberechnung/">Formelberechnung </a>habe ich bereits gezeigt, wie man eigene Formeln verwenden kann. Für eine Anwendung wäre es jedoch schön, wenn der Anwender selbst Formeln erstellen könnte und zwar mit vorgegebenen Feldern und Operationen.</p>
<p>Dies ist möglich mit dem Formeleditor. Gleichzeitig wird hier für die Prüfung und Evaluierung der Formeln keine Funktionsbausteine mehr verwendet, sondern Klassen. Aber der Reihe nach&#8230;</p>
<h2>Formeleditor</h2>
<p>Der Formeleditor wird durch den Funktionsbaustein <!--StartFragment -->FOBU_DIALOG_START aufgerufen. Die Verwendung wird in mehreren Beispielprogrammen gut demonstriert (siehe unten).</p>
<p>In einem Eingabefeld kann man die Formel entweder direkt eingeben (Expertenmodus) oder man kann die einzelnen Komponenten per Drag and Drop oder Doppelklick einfügen.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200715.jpg"><img decoding="async" class="alignnone size-medium wp-image-4951" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200715-300x144.jpg" alt="Formeleditor Eingabe" width="300" height="144" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_200715-300x144.jpg 300w, /wp-content/uploads/2014/07/Bild_2014_07_16_200715.jpg 510w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Elemente des Editors lassen sich gezielt steuern. In den Beispielprogrammen wird ersichtlich, was wie verwendet werden kann.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200704.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4950" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200704-300x85.jpg" alt="Formeleditor" width="300" height="85" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_200704-300x85.jpg 300w, /wp-content/uploads/2014/07/Bild_2014_07_16_200704-624x177.jpg 624w, /wp-content/uploads/2014/07/Bild_2014_07_16_200704.jpg 835w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Einige Formeln lassen sich mit einer Hilfefunktion einfügen (Kleines grünes PLUS-Icon rechts neben den Sortieren Buttons):</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200725.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4957" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200725-300x81.jpg" alt="Formel einfügen" width="300" height="81" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_200725-300x81.jpg 300w, /wp-content/uploads/2014/07/Bild_2014_07_16_200725-624x169.jpg 624w, /wp-content/uploads/2014/07/Bild_2014_07_16_200725.jpg 758w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h2>Klassen</h2>
<h3>CL_FOBU_FORMULA</h3>
<p>Um mit dem Editor kommunizieren zu können, wird diese Klasse benötigt.</p>
<h3>CL_FOEV_FORMULA</h3>
<p>Diese Klasse wird verwendet, um die Formeln zu speichern, zu laden, zu prüfen und auszuwerten.</p>
<h3>CL_FOBU_CONNECTOR</h3>
<p>Sobald eigene Felder verwendet werden sollen, müssen diese mithilfe der Klasse definiert und bekannt gemacht werden. Für jedes Feld kann ein eigenes Icon definiert werden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200712.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4952 size-full" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200712.jpg" alt="Formeleditor eigene Felder" width="377" height="231" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_200712.jpg 377w, /wp-content/uploads/2014/07/Bild_2014_07_16_200712-300x183.jpg 300w" sizes="(max-width: 377px) 100vw, 377px" /></a></p>
<h3>Demoprogramme</h3>
<table>
<tbody>
<tr>
<th> Programm</th>
<th> Bezeichnung</th>
</tr>
<tr>
<td> SFBE_EXAMPLE1</td>
<td>Beispielprogramme FoBuEv: Einfachst-Aufruf</td>
</tr>
<tr>
<td> SFBE_EXAMPLE2</td>
<td>Beispielprogramme FoBuEv: Aufruf mit eigenen Feldern</td>
</tr>
<tr>
<td> SFBE_EXAMPLE3</td>
<td>Beisp.Prog FoBuEv: Aufruf mitTypprüfung, eigenem GUI-Status und TraceDer Trace wird im Menü eingeschaltet!</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200706.jpg"><img loading="lazy" decoding="async" class="alignnone size-thumbnail wp-image-4949" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200706-300x300.jpg" alt="Formel_trace" width="150" height="150" /></a></td>
</tr>
<tr>
<td> SFBE_EXAMPLE4</td>
<td>Beisp.Prog FoBuEv: Aufruf mit eigenen Funktionen</td>
</tr>
<tr>
<td> SFBE_EXAMPLE5</td>
<td>Beisp.Prog FoBuEv: Implementierung einer Methode per FoBuEv</td>
</tr>
<tr>
<td> SFBE_EXAMPLE6</td>
<td>Beisp.Prog FoBuEv: Aufruf mit eigenen Drucktasten und IF-Funktion</td>
</tr>
<tr>
<td> SFBE_EXAMPLE8</td>
<td>Beisp.Prog FoBuEv: Rechnen mit Währungsbeträgen, Mengen und Preisen</td>
</tr>
<tr>
<td>RS_FOBU_METHOD_EXAMPLE</td>
<td>Beispielprogramm für Formula Builder Methoden</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/formeleditor/">Formeleditor</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Drag&#8217;n&#8217;Drop-Framwork ALV-Grid</title>
		<link>/blog/dragndrop-framwork-alv-grid/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 13 Jun 2014 16:13:04 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[grid]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Liste]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Zuordnung]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[ALV]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4805</guid>

					<description><![CDATA[<p>Usability ist bei SAP ja so eine Sache... Heute habe ich eine Klasse gefunden, die Zuordnungen intuitiv und benutzerfreundlich macht. In diesem kleinen Demoprogramm zeige ich euch, wie man die Klassen benutzt.</p>
<p>Der Beitrag <a href="/blog/dragndrop-framwork-alv-grid/">Drag&#8217;n&#8217;Drop-Framwork ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Heute bin ich beim Surfen im SAP-System über die Klasse CL_ALV_DD_LISTBOX gestolpert. Dolle Sache:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_170651.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4806" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_170651.jpg" alt="Bild_2014_06_13_170651" width="729" height="351" srcset="/wp-content/uploads/2014/06/Bild_2014_06_13_170651.jpg 729w, /wp-content/uploads/2014/06/Bild_2014_06_13_170651-300x144.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_13_170651-624x300.jpg 624w" sizes="(max-width: 729px) 100vw, 729px" /></a></p>
<p>&nbsp;</p>
<p>Einfach zwei Datentabellen definieren, zwei Grids erzeugen, der Instanz von  cl_alv_dd_double_listbox übergeben und die zwei Funktionscodes zum Bewegen der Einträge definieren. Aufrufen und am Ende hat man in seinen zwei Datentabellen die vom Anwender definierten Einträge.</p>
<p>Die Anregung stammt aus dem Report RSPLS_ENQUEUE_INFO.</p>
<h2>Coding</h2>
<pre>DATA gr_dd     TYPE REF TO cl_alv_dd_double_listbox.
DATA gr_grid_s TYPE REF TO cl_alv_dd_listbox.              "source
DATA gr_grid_t TYPE REF TO cl_alv_dd_listbox.              "target
DATA gr_cont_s TYPE REF TO cl_gui_custom_container.        "source
DATA gr_cont_t TYPE REF TO cl_gui_custom_container.        "target
DATA gs_layo_s TYPE lvc_s_layo.
DATA gs_layo_t TYPE lvc_s_layo.

DATA gt_fcat   TYPE lvc_t_fcat.
DATA gt_sort   TYPE lvc_t_sort.

DATA gt_data_s TYPE STANDARD TABLE OF t006a.
DATA gt_data_t TYPE STANDARD TABLE OF t006a.


START-OF-SELECTION.

  PERFORM init.

  CALL SCREEN 100.


*----------------------------------------------------------------------*
*  MODULE pbo OUTPUT
*----------------------------------------------------------------------*
MODULE pbo OUTPUT.

  SET PF-STATUS 'DD_GRID'.

  PERFORM prepare_grid USING gr_grid_s
                             gr_cont_s
                             'CONT_SOURCE'
                             gs_layo_s
                             gt_data_s.

  PERFORM prepare_grid USING gr_grid_t
                             gr_cont_t
                             'CONT_TARGET'
                             gs_layo_t
                             gt_data_t.

  IF gr_dd IS INITIAL.
    CREATE OBJECT gr_dd
      EXPORTING
        i_grid1 = gr_grid_s
        i_grid2 = gr_grid_t.
  ENDIF.

ENDMODULE.                                                 "pbo OUTPUT


*----------------------------------------------------------------------*
*  MODULE pai INPUT
*----------------------------------------------------------------------*
MODULE pai INPUT.
  CASE sy-ucomm.
    WHEN 'BACK'.
      SET SCREEN 0. LEAVE SCREEN.

    WHEN 'MOVE_TO_TARGET'.
      CALL METHOD gr_dd-&gt;movetogrid2
        EXPORTING
          i_ok_code = sy-ucomm.

    WHEN 'MOVE_TO_SOURCE'.
      CALL METHOD gr_dd-&gt;movetogrid1
        EXPORTING
          i_ok_code = sy-ucomm.
  ENDCASE.

*  IF NOT gr_dd IS INITIAL.
*    CALL METHOD gr_dd-&gt;set_grids_state( abap_true ). "X = display/ space = edit
*  ENDIF.

ENDMODULE.                                                 "pai INPUT


*&amp;---------------------------------------------------------------------*
*&amp;      Form  prepare_grid
*&amp;---------------------------------------------------------------------*
FORM prepare_grid USING grid TYPE REF TO cl_alv_dd_listbox
                        cont TYPE REF TO cl_gui_custom_container
                        name TYPE        clike
                        layo TYPE        lvc_s_layo
                        data TYPE STANDARD TABLE.

  IF cont IS INITIAL.
*==   create container
    CREATE OBJECT cont
      EXPORTING
        container_name = name.
  ENDIF.

  IF grid IS INITIAL.
*== create grid
    CREATE OBJECT grid
      EXPORTING
        i_parent     = cont
        i_grid_style = 1.

*== set  grid
    CALL METHOD grid-&gt;set_table_for_first_display
      EXPORTING
        is_layout       = layo
      CHANGING
        it_outtab       = data
        it_fieldcatalog = gt_fcat
        it_sort         = gt_sort.
  ELSE.
*== refresh
    CALL METHOD grid-&gt;set_frontend_fieldcatalog
      EXPORTING
        it_fieldcatalog = gt_fcat.
    CALL METHOD grid-&gt;set_frontend_layout
      EXPORTING
        is_layout = gs_layo_s.
    CALL METHOD grid-&gt;refresh_table_display.
  ENDIF.

ENDFORM.                    "prepare_grid

*&amp;---------------------------------------------------------------------*
*&amp;      Form  init
*&amp;---------------------------------------------------------------------*
FORM init.

*== local data
  FIELD-SYMBOLS  LIKE LINE OF gt_fcat.

*== get source data
  SELECT * FROM t006a INTO TABLE gt_data_s
      UP TO 20 ROWS
   WHERE spras = sy-langu.


*== set title for source:
  gs_layo_s-grid_title = text-003.
  gs_layo_s-smalltitle = 'X'.
  gs_layo_s-cwidth_opt = 'X'.
  gs_layo_s-sel_mode   = 'A'.

*== set title for target:
  gs_layo_t-grid_title = text-004.
  gs_layo_t-smalltitle = 'X'.
  gs_layo_t-cwidth_opt = 'X'.
  gs_layo_t-sel_mode   = 'A'.

*== get fieldcatalog
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'T006A'
      i_client_never_display = 'X'
    CHANGING
      ct_fieldcat            = gt_fcat
    EXCEPTIONS
      OTHERS                 = 3.

*== display only unit and text
  LOOP AT gt_fcat ASSIGNING .
    CASE -fieldname.
      WHEN 'MSEHI' OR 'MSEH3' OR 'MSEH6'.
        -tech = abap_true.
    ENDCASE.
  ENDLOOP.

ENDFORM.                    "init</pre>
<h2>Dynpro</h2>
<h3>Ablauflogik</h3>
<p>PROCESS BEFORE OUTPUT.<br />
MODULE pbo.<br />
*<br />
PROCESS AFTER INPUT.<br />
MODULE pai.</p>
<h2><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_180645.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4808" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_180645.jpg" alt="Bild_2014_06_13_180645" width="562" height="423" srcset="/wp-content/uploads/2014/06/Bild_2014_06_13_180645.jpg 562w, /wp-content/uploads/2014/06/Bild_2014_06_13_180645-300x225.jpg 300w" sizes="(max-width: 562px) 100vw, 562px" /></a></h2>
<h2>GUI-Status</h2>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_180616.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4807" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_180616.jpg" alt="Bild_2014_06_13_180616" width="808" height="483" srcset="/wp-content/uploads/2014/06/Bild_2014_06_13_180616.jpg 808w, /wp-content/uploads/2014/06/Bild_2014_06_13_180616-300x179.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_13_180616-624x373.jpg 624w" sizes="(max-width: 808px) 100vw, 808px" /></a></p>
<p>[notice type = &#8216;info&#8217;]Leider haben die Klassen eine kleine Macken. Sobald die ersten Einträge per Funktionstasten verschoben wurden, erscheint die Markierspalte und es ist kein Drag-and-Drop mehr möglich&#8230; :([/notice]</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/dragndrop-framwork-alv-grid/">Drag&#8217;n&#8217;Drop-Framwork ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Drop Files in ALV-Grid</title>
		<link>/blog/drop-files-in-alv-grid/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 21 Feb 2014 13:43:34 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Datei]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Explorer]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4499</guid>

					<description><![CDATA[<p>In diesem Artikel erfährst du, wie du ein ALV-Grid dazu verwenden kannst, um Dateien aus dem Explorer per Drag and Drop in SAP zu übernehmen. Dabei werden jedoch nicht die Dateien selbst, sondern nur der Pfad und Dateiname zur Verfügung gestellt.</p>
<p>Der Beitrag <a href="/blog/drop-files-in-alv-grid/">Drop Files in ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><a class="keychainify-checked" href="https://tricktresor.com/wp-content/uploads/2014/02/02_21_14_37_32.jpg"><img loading="lazy" decoding="async" class="size-full wp-image-4500 alignright" src="https://tricktresor.com/wp-content/uploads/2014/02/02_21_14_37_32.jpg" alt="drag files in grid" width="263" height="231" /></a></p>
<p>Seit etwa 2012 ist es möglich, Dateien aus dem Explorer in ein ALV-Grid zu ziehen und die Namen dort zu verarbeiten (<a class="keychainify-checked" title="Drop External Files | SAP Note" href="http://search.sap.com/notes?id=0001748468">SAP Note 1748468</a>). Ob das in deinem SAP-System bereits funktioniert, kannst du daran erkennen, dass die Klasse CL_GUI_ALV_GRID die Methode GET_DROPPED_EXTERNAL_FILES hat.</p>
<p>Das Event DROP_EXTERNAL_FILES muss registriert werden und mit der Methode DRAG_ACCEPT_FILES( 1 ) muss die Funktionalität aktiviert werden.</p>
<p>Es kann das gesamte ALV-Grid-Control als &#8220;Ablagefläche&#8221; genutzt werden, also auch dort, wo keine Zeilen vorhanden sind. Werden die Dateien auf einer Zelle abgelegt, dann kann diese Zelle bestimmte werden. In dem Beispielcoding werden die Dateien der Spalte hinzugefügt, auf der sie abgelegt wurden.</p>
<h2>Coding</h2>
<pre>REPORT zz_drop_files_on_grid.

*----------------------------------------------------------------------*
*       CLASS lcl_appl DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_appl DEFINITION.

  PUBLIC SECTION.

*== type for Grid-Demonstration: Columns EINS, ZWEI and DREI
    TYPES: BEGIN OF ty_files,
             eins TYPE string,
             zwei TYPE string,
             drei TYPE string,
           END OF ty_files.

*== table containing the data (text/ files)
    CLASS-DATA gt_data TYPE STANDARD TABLE OF ty_files.
*== ALV-Grid
    CLASS-DATA gr_grid TYPE REF TO cl_gui_alv_grid.

*== setup ALV-Grid
    CLASS-METHODS init.
*== get dropped files and display in grid
    CLASS-METHODS get_dropped_files FOR EVENT drop_external_files OF cl_gui_alv_grid
                                    IMPORTING files.

ENDCLASS.                    "lcl_appl DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_appl IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_appl IMPLEMENTATION.

  METHOD init.

*== local data
    DATA lt_fcat         TYPE lvc_t_fcat.
    FIELD-SYMBOLS &lt;fcat&gt; LIKE LINE OF lt_fcat.
    FIELD-SYMBOLS &lt;data&gt; LIKE LINE OF gt_data.

    CHECK gr_grid IS INITIAL.

*== set initial data
    DO 5 TIMES.
      APPEND INITIAL LINE TO gt_data ASSIGNING &lt;data&gt;.
      &lt;data&gt;-eins = 'Drop'.
      &lt;data&gt;-zwei = 'Files'.
      &lt;data&gt;-drei = 'Here'.
    ENDDO.

*== Create Grid-control
    CREATE OBJECT gr_grid
      EXPORTING
        i_parent = cl_gui_container=&gt;screen0.

*== build field catalog
    APPEND INITIAL LINE TO lt_fcat ASSIGNING &lt;fcat&gt;.
    &lt;fcat&gt;-fieldname = 'EINS'.
    &lt;fcat&gt;-reptext   = 'Eins'.
    &lt;fcat&gt;-style     = 1.
    &lt;fcat&gt;-datatype  = 'STRG'.
    APPEND INITIAL LINE TO lt_fcat ASSIGNING &lt;fcat&gt;.
    &lt;fcat&gt;-fieldname = 'ZWEI'.
    &lt;fcat&gt;-reptext   = 'Zwei'.
    &lt;fcat&gt;-style     = 2.
    &lt;fcat&gt;-datatype  = 'STRG'.
    APPEND INITIAL LINE TO lt_fcat ASSIGNING &lt;fcat&gt;.
    &lt;fcat&gt;-fieldname = 'DREI'.
    &lt;fcat&gt;-reptext   = 'Drei'.
    &lt;fcat&gt;-style     = 4.
    &lt;fcat&gt;-datatype  = 'STRG'.

*== display grid
    gr_grid-&gt;set_table_for_first_display(
      CHANGING it_fieldcatalog = lt_fcat
               it_outtab       = gt_data ).

*== Allow drop files action
    gr_grid-&gt;drag_accept_files( 1 ).

*== set handler to react on file drop
    SET HANDLER get_dropped_files FOR gr_grid ACTIVATION abap_true.

  ENDMETHOD.                                               "init

  METHOD get_dropped_files.

*== local data
    DATA lt_files        TYPE filetable.
    FIELD-SYMBOLS &lt;file&gt; LIKE LINE OF lt_files.
    DATA lv_row_id       TYPE i.
    DATA lv_col_id       TYPE i.
    FIELD-SYMBOLS &lt;data&gt; LIKE LINE OF gt_data.

*== get dropped files in a table
    gr_grid-&gt;get_dropped_external_files(
       IMPORTING  files     = lt_files
                  row_id    = lv_row_id
                  col_id    = lv_col_id
       EXCEPTIONS OTHERS    = 3 ).

*== put file names in grid
    IF lt_files IS NOT INITIAL.
      CLEAR gt_data.
      LOOP AT lt_files ASSIGNING &lt;file&gt;.
        APPEND INITIAL LINE TO gt_data ASSIGNING &lt;data&gt;.
        CASE lv_col_id.
          WHEN 1. &lt;data&gt;-eins = &lt;file&gt;.
          WHEN 2. &lt;data&gt;-zwei = &lt;file&gt;.
          WHEN 3. &lt;data&gt;-drei = &lt;file&gt;.
        ENDCASE.
      ENDLOOP.
*== refresh display
      gr_grid-&gt;refresh_table_display( ).
    ENDIF.

  ENDMETHOD.                                               "get_dropped_files

ENDCLASS.                                                  "lcl_appl IMPLEMENTATION

START-OF-SELECTION.

<!--StartFragment --><span class="L0S52">START-OF-SELECTION</span><span class="L0S55">.</span>
  <span class="L0S52">WRITE </span><span class="L0S33">'nothign to see here...!'</span><span class="L0S55">.</span>
  lcl_appl<span class="L0S70">=&gt;</span>init<span class="L0S55">( </span><span class="L0S55">)</span><span class="L0S55">.</span></pre>
<p>Der Beitrag <a href="/blog/drop-files-in-alv-grid/">Drop Files in ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Category Order and Taxonomy Terms Order [Plugin]</title>
		<link>/blog/category-order-and-taxonomy-terms-order-plugin/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 22 Jan 2014 23:17:42 +0000</pubDate>
				<category><![CDATA[plugins]]></category>
		<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4325</guid>

					<description><![CDATA[<p>Wieder ein Plugin aus der Kategorie "Unscheinbar aber unentbehrlich". Beliebige Taxonomien können beliebig sortiert und geordnet werden.</p>
<p>Der Beitrag <a href="/blog/category-order-and-taxonomy-terms-order-plugin/">Category Order and Taxonomy Terms Order [Plugin]</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Das Plugin ist auch ein sehr unscheinbares Plugin. Es leistet jedoch wie so viele Plugins sehr gute Dienste. Ich benötige dieses Plugin, um die Kategorien in die richtige Reihenfolge zu bringen.</p>
<p><img loading="lazy" decoding="async" class="size-full wp-image-4326 alignright" alt="" src="https://tricktresor.com/wp-content/uploads/2014/01/img_52e04f3e0d370.png" width="308" height="445" srcset="/wp-content/uploads/2014/01/img_52e04f3e0d370.png 308w, /wp-content/uploads/2014/01/img_52e04f3e0d370-207x300.png 207w" sizes="(max-width: 308px) 100vw, 308px" /></p>
<p>Die Kategorien können so einfach per Drag and Drop sortiert werden. Im Standard WordPress werden die Kategorien nach Name oder Slug sortiert. Das Plugin <span style="line-height: 1.5em;"> </span><a style="line-height: 1.5em;" title="Category Order and Taxonomy Terms Order | http://www.nsp-code.com/" href="http://wordpress.org/plugins/taxonomy-terms-order/" target="_blank">Category Order and Taxonomy Terms Order</a> <span style="line-height: 1.5em;">erlaubt es, die Kategorien beliebig zu sortieren. So kann ich genau festlegen, in welcher Reihenfolge die einzelnen Kategorien erscheinen sollen.</span></p>
<p>Da ich nur die Taxonomie <em>Beiträge</em> habe, kann ich über die Verwendung mit anderen Taxonomien nichts sagen. Ich gehe aber davon aus, dass die Sortierung ebenso gut funktioniert. Im jeweiligen Backend-Menü &#8211; in diesem Fall <em>Beiträge</em> &#8211; gibt es nun einen Menüpunkt <em>Taxonomy Order</em>.</p>
<p><img loading="lazy" decoding="async" width="334" height="344" class="alignnone size-full wp-image-4329" alt="" src="https://tricktresor.com/wp-content/uploads/2014/01/img_52e050d8eb685.png" srcset="/wp-content/uploads/2014/01/img_52e050d8eb685.png 334w, /wp-content/uploads/2014/01/img_52e050d8eb685-291x300.png 291w" sizes="(max-width: 334px) 100vw, 334px" /></p>
<p>Hier können Sie die Reihenfolge wie gewünscht festlegen.</p>
<p>Der Beitrag <a href="/blog/category-order-and-taxonomy-terms-order-plugin/">Category Order and Taxonomy Terms Order [Plugin]</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Drag&#8217;n&#8217;Drop mit Datei</title>
		<link>/blog/dragndrop-mit-datei/</link>
					<comments>/blog/dragndrop-mit-datei/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 25 Nov 2011 17:01:49 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[TextEditControl]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[docker]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[cl_gui_docking_container]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[cl_gui_html_viewer]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=631</guid>

					<description><![CDATA[<p>In diesem Beispiel zeigen wir, wie Sie eine Datei aus dem Windows-Explorer auf ein SAP-Control ziehen k&#246;nnen und den Dateipfad sowie Dateinamen angezeigt bekommen. So l&#228;sst sich z.B. eine Anwendung programmieren, die Dateien per Drag'n'Drop entgegen nimmt und auf den Application server hoch l&#228;dt.</p>
<p>Der Beitrag <a href="/blog/dragndrop-mit-datei/">Drag&#8217;n&#8217;Drop mit Datei</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><a href="https://tricktresor.com/wp-content/uploads/2011/11/02_21_15_35_20.jpg"><img loading="lazy" decoding="async" class="alignright size-medium wp-image-4505" alt="Drag and drop html" src="https://tricktresor.com/wp-content/uploads/2011/11/02_21_15_35_20-300x158.jpg" width="300" height="158" srcset="/wp-content/uploads/2011/11/02_21_15_35_20-300x158.jpg 300w, /wp-content/uploads/2011/11/02_21_15_35_20-624x330.jpg 624w, /wp-content/uploads/2011/11/02_21_15_35_20.jpg 625w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>In diesem Beispiel zeigen wir, wie Sie eine Datei aus dem Windows-Explorer auf ein SAP-Control ziehen können und den Dateipfad sowie Dateinamen angezeigt bekommen. So lässt sich z.B. eine Anwendung programmieren, die Dateien per Drag&#8217;n&#8217;Drop entgegen nimmt und auf den Application server hoch lädt.<br />
SAP-Controls und Drag&#8217;n&#8217;Drop</p>
<p>SAP-Controls können normalerweise nur DragDropObjekte aufnehmen, die auch von einem SAP-Control erzeugt wurden.</p>
<p>Ausnahmen sind der ABAP-Editor und das TextEditControl: Sie können eine Textdatei auf das Control ziehen und der Inhalt wird im Control dargestellt.</p>
<p>Leider feuert kein Control ein Event &#8220;DropComplete&#8221;, auf das man reagieren könnte, geschweige denn, dass man schon bei &#8220;onDrop&#8221; entscheiden könnte, ob man dieses Objekt haben möchte oder nicht.</p>
<p>Eine Ausnahme bildet das HTML-Control, das ja den Internet Explorer verwendet um HTML- oder PDF-Dateien anzuzeigen.</p>
<p>Das Control CL_GUI_HTML_VIEWER erzeugt das Ereignis &#8220;NAVIGATE_COMPLETE&#8221;, sobald die &#8220;Navigation&#8221; abgeschlossen wurde. Eine Datei, die per Drag and Drop auf dieses Control gezogen wird, löst ebenfalls dieses Ereignis aus.</p>
<h2>Beschreibung</h2>
<p>Dieses Programm dockt das HTML-Control an das Selektionsbild an und zeigt die URL einer ge-drop-ten Datei an.</p>
<h2>Code</h2>
<pre>REPORT z_dock_drop.
*** Selection screen
PARAMETERS: p_url     TYPE string.
INITIALIZATION.
  PERFORM create_objects.

*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS:
      handle_navigate_complete
          FOR EVENT navigate_complete
          OF cl_gui_html_viewer
            IMPORTING url sender.
ENDCLASS.                    "lcl_event_receiver DEFINITION
*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_event_receiver IMPLEMENTATION.

  METHOD handle_navigate_complete.
    p_url = url.
*    sender-&gt;go_back( ). "If object should not be displayed
  ENDMETHOD.                    "handle_sapevent
ENDCLASS.                    "lcl_event_receiver IMPLEMENTATION

*&amp;---------------------------------------------------------------------*
*&amp;      Form  CREATE_OBJECTS
*&amp;---------------------------------------------------------------------*
FORM create_objects.
*** Data
  DATA cl_docker         TYPE REF TO cl_gui_docking_container.
  DATA t_events        TYPE cntl_simple_events.
  DATA wa_event        LIKE LINE OF t_events.
  DATA event_receiver  TYPE REF TO lcl_event_receiver.
  DATA t_html          TYPE STANDARD TABLE OF text8192
                       WITH NON-UNIQUE DEFAULT KEY.
  DATA html            LIKE LINE OF t_html.
  DATA url             TYPE text1000.
  DATA cl_html         TYPE REF TO cl_gui_html_viewer.

*** create docker
  CREATE OBJECT cl_docker
    EXPORTING
      extension               = 300
      side                    = cl_gui_docking_container=&gt;dock_at_bottom
      no_autodef_progid_dynnr = 'X'.

*** create HTML
  CREATE OBJECT cl_html
    EXPORTING
      parent = cl_docker.

*** Register NAVIGATE_COMPLETE
  CALL METHOD cl_html-&gt;get_registered_events
    IMPORTING
      events = t_events.
      wa_event-eventid    = cl_gui_html_viewer=&gt;m_id_navigate_complete.
      wa_event-appl_event = 'X'.
  READ TABLE t_events TRANSPORTING NO FIELDS
        WITH KEY eventid = wa_event-eventid.
  IF sy-subrc &lt;&gt; 0.
    APPEND wa_event TO t_events.
  ENDIF.
  CALL METHOD cl_html-&gt;set_registered_events
    EXPORTING
      events = t_events.
SET HANDLER lcl_event_receiver=&gt;handle_navigate_complete FOR cl_html.

*** Build HTML-Code
  CONCATENATE  '&lt;html&gt;'
               '&lt;head&gt;&lt;title&gt;Dropzone&lt;/title&gt;'
               '&lt;/head&gt;'
               '&lt;body bgcolor="#22FF22"&gt;'
               '&lt;p&gt;&lt;font size= 30&gt;hierher mit den Bildern!!&lt;/font&gt;&lt;/p&gt;'
               '&lt;/body&gt;'
               '&lt;/html&gt;'
          INTO html.
  APPEND html TO t_html.

*** load HTML
  CALL METHOD cl_html-&gt;load_data
    IMPORTING
      assigned_url = url
    CHANGING
      data_table   = t_html.

*** Show HTML page
  CALL METHOD cl_html-&gt;show_url
    EXPORTING
      url = url.
ENDFORM.                    " CREATE_OBJECTS</pre>
<p>Der Beitrag <a href="/blog/dragndrop-mit-datei/">Drag&#8217;n&#8217;Drop mit Datei</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/dragndrop-mit-datei/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Drag&#8217;n&#8217;Drop im TreeControl</title>
		<link>/blog/dragndrop-im-treecontrol/</link>
					<comments>/blog/dragndrop-im-treecontrol/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 20 Jul 2004 10:43:21 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[Controls]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=274</guid>

					<description><![CDATA[<p>Dieses Programm erzeugt einen TreeControl, in dem die L&#228;nder nach Anfangsbuchstabe gruppiert werden. F&#252;r jeden Buchstaben wird eine Gruppe erzeugt. Die L&#228;nder k&#246;nnen dann in andere Gruppen verschoben oder kopiert werden.</p>
<p>Der Beitrag <a href="/blog/dragndrop-im-treecontrol/">Drag&#8217;n&#8217;Drop im TreeControl</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Dieses Programm erzeugt einen TreeControl, in dem die Länder nach Anfangsbuchstabe gruppiert werden. Für jeden Buchstaben wird eine Gruppe erzeugt. Die Länder können dann in andere Gruppen verschoben oder kopiert werden.</p>
<p class="text1">Um das Beispiel nutzen zu können, müssen Sie noch den Screen 100 anlegen. Definieren sie auf dem Dynpro 100 einen CustomControl über die gesamte Größe und benennen ihn mit <strong><span style="color: #008952;">TREE_CONTAINER</span></strong>.</p>
<p class="text1">Tragen Sie bitte in der Elementliste die Variable &#8220;<strong>G_OK_CODE</strong>&#8221; in das Feld &#8220;<strong>OK_CODE</strong>&#8221; ein.</p>
<p class="text1">Ausserdem müssen Sie noch das PBO-Modul &#8220;<strong><span style="color: #008952;">STATUS_0100</span></strong>&#8221; im PBO und das PAI-Modul &#8220;<strong><span style="color: #008952;">USER_COMMAND_0100</span></strong>&#8221; im PAI einbinden.</p>
<p class="text1">Zusätzlich müssen Sie noch den GUI-Status &#8220;<strong><span style="color: #008952;">MAIN</span></strong>&#8221; erzeugen und der F3-Taste den Ok-Code &#8220;BACK&#8221; zuordnen.</p>
<p class="text1"><strong>Weitere Hilfe unter: <a href="http://help.sap.com/printdocu/core/print46b/en/data/en/pdf/BCCITREE.pdf" target="_blank" rel="noopener">SAP-Print-Doku</a> </strong></p>
<p class="head1">So sieht&#8217;s aus:</p>
<p><img decoding="async" class="alignnone" src="/wp-content/uploads/tt_images/tree.jpg" /></p>
<h2>Code</h2>
<pre class="lang:abap decode:true ">REPORT zzTreeDragAndDrop MESSAGE-ID zs.

*** Bekanntmachung Klassen
CLASS cl_gui_cfw      DEFINITION LOAD.

*** Types
TYPES:
      item_table_type LIKE STANDARD TABLE OF mtreeitm
      WITH DEFAULT KEY.

*** Datendefinition
DATA: g_custom_container TYPE REF TO cl_gui_custom_container,
      g_tree             TYPE REF TO cl_gui_list_tree,
      g_ok_code          TYPE sy-ucomm.

*-- Drag and Drop
DATA: behaviour_drag     TYPE REF TO cl_dragdrop,
      behaviour_drop     TYPE REF TO cl_dragdrop,
      handle_drag        TYPE i,
      handle_drop        TYPE i,
      node               TYPE treev_node,
      item               TYPE mtreeitm,
      node_key_dragged   TYPE mtreesnode-node_key,
      node_key_dropped   TYPE mtreesnode-node_key.

*-- Baumzweige
DATA: node_table         TYPE treev_ntab,
      item_table         TYPE item_table_type,
      node_table_add     TYPE treev_ntab,
      item_table_add     TYPE item_table_type,
      nodekey(12)        TYPE n,
      nodekeyx(12)       TYPE c.

*-- Variablen zum Ändern des Baumes
DATA: node_table_upd     TYPE STANDARD TABLE OF treev_unod,
      node_upd           TYPE treev_unod,
      item_table_upd     TYPE STANDARD TABLE OF treemuctit,
      item_upd           TYPE treemuctit.


*---------------------------------------------------------------------*
*       CLASS lcl_drag_object DEFINITION
*---------------------------------------------------------------------*
CLASS lcl_drag_object DEFINITION.
  PUBLIC SECTION.
    DATA: text      TYPE mtreesnode-text,
          node_key  TYPE mtreesnode-node_key.
ENDCLASS.


*---------------------------------------------------------------------*
*       CLASS lcl_dragdrop_receiver DEFINITION
*---------------------------------------------------------------------*
CLASS lcl_dragdrop_receiver DEFINITION.
  PUBLIC SECTION.
    METHODS:

*-- Drag'n'Drop: DRAG
     tree_drag
        FOR EVENT on_drag
        OF cl_gui_list_tree
        IMPORTING node_key item_name drag_drop_object,
*-- Drag'n'Drop: DROP
     tree_drop
        FOR EVENT on_drop
        OF cl_gui_list_tree
        IMPORTING node_key drag_drop_object,
*-- Drag'n'Drop: DROP COMPLETE
     drop_complete
        FOR EVENT on_drop_complete
        OF cl_gui_list_tree
        IMPORTING node_key drag_drop_object.

ENDCLASS.


*---------------------------------------------------------------------*
*       CLASS lcl_dragdrop_receiver IMPLEMENTATION
*---------------------------------------------------------------------*
CLASS lcl_dragdrop_receiver IMPLEMENTATION.

*_____________________________________________________*
*                                                     *
* TREE_DRAG
*_____________________________________________________*

  METHOD tree_drag.
    DATA drag_object TYPE REF TO lcl_drag_object.
    CREATE OBJECT drag_object.
    drag_object-&gt;node_key    = node_key.
    node_key_dragged         = node_key.
    drag_drop_object-&gt;object = drag_object.
  ENDMETHOD.

*_____________________________________________________*
*                                                     *
* TREE_DROP
*_____________________________________________________*

  METHOD tree_drop.
    DATA drag_object TYPE REF TO lcl_drag_object.
    CATCH SYSTEM-EXCEPTIONS move_cast_error = 1.
      drag_object ?= drag_drop_object-&gt;object.
    ENDCATCH.
    IF sy-subrc = 1.
      CALL METHOD drag_drop_object-&gt;abort.
      EXIT.
    ENDIF.
* Synchronize Automation Queue after Get Methods
    CALL METHOD cl_gui_cfw=&gt;flush.
    node_key_dropped = node_key.
  ENDMETHOD.

*_____________________________________________________*
*                                                     *
* DROP_COMPLETE
*_____________________________________________________*

  METHOD drop_complete.

    IF drag_drop_object-&gt;flavor = 'DragAndDrop'.

      CASE drag_drop_object-&gt;effect.
*-- Knoten kopieren
        WHEN cl_dragdrop=&gt;copy.
*-- Tabellen zum Hinzufügen eines neuen Knotens löschen
          CLEAR node_table_add.
          CLEAR item_table_add.
*-- selektierten Knoten kopieren:
          LOOP AT node_table
               INTO node WHERE node_key  = node_key_dragged.
            node-relatkey   = node_key_dropped.
            ADD 1 TO nodekey.
            node-node_key = nodekey.
            APPEND node TO: node_table_add,
                            node_table.
*-- Items zum Knoten kopieren
            LOOP AT item_table INTO item
                 WHERE node_key = node_key_dragged.
              item-node_key = node-node_key.
              APPEND item TO: item_table_add,
                              item_table.
            ENDLOOP. "Node
          ENDLOOP.   "Item

*-- Eintrag zu Drop-Zone hinzufügen
          CALL METHOD g_tree-&gt;add_nodes_and_items
            EXPORTING
              node_table                     = node_table_add
              item_table                     = item_table_add
              item_table_structure_name      = 'MTREEITM'.

        WHEN cl_dragdrop=&gt;move.
*-- Knoten verschieben
          CALL METHOD g_tree-&gt;move_node
            EXPORTING
              node_key           = node_key_dragged
              relatkey           = node_key_dropped
              relatship          = cl_gui_list_tree=&gt;relat_last_child
            EXCEPTIONS
              OTHERS             = 8.

      ENDCASE.
    ENDIF.

  ENDMETHOD.

ENDCLASS.


START-OF-SELECTION.

  SET SCREEN 100.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  STATUS_0100  OUTPUT
*&amp;---------------------------------------------------------------------*
MODULE status_0100 OUTPUT.

  SET PF-STATUS 'MAIN'.
  SET TITLEBAR '100'.

  IF g_tree IS INITIAL.
    PERFORM create_and_init_dragdrop.
    PERFORM create_and_init_tree.
  ENDIF.

ENDMODULE.                 " STATUS_0100  OUTPUT

*---------------------------------------------------------------------*
*       FORM create_and_init_dragdrop                                 *
*---------------------------------------------------------------------*
FORM create_and_init_dragdrop.

  DATA: effect_lv TYPE i.
  effect_lv = cl_dragdrop=&gt;move + cl_dragdrop=&gt;copy.

*-- Definition Drag'n'Drop-Verhalten: Quelle
  CREATE OBJECT behaviour_drag.
  CALL METHOD behaviour_drag-&gt;add
    EXPORTING
      flavor     = 'DragAndDrop'
      dragsrc    = 'X'
      droptarget = ' '
      effect     = effect_lv.

  CALL METHOD behaviour_drag-&gt;get_handle
    IMPORTING handle = handle_drag.

*-- Definition Drag'n'Drop-Verhalten: Ziel
  CREATE OBJECT behaviour_drop.
  CALL METHOD behaviour_drop-&gt;add
    EXPORTING
      flavor     = 'DragAndDrop'
      dragsrc    = ' '
      droptarget = 'X'
      effect     = effect_lv.

  CALL METHOD behaviour_drop-&gt;get_handle
    IMPORTING handle = handle_drop.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM create_and_init_tree                                     *
*---------------------------------------------------------------------*
FORM create_and_init_tree.

  DATA: events TYPE cntl_simple_events,
        event  TYPE cntl_simple_event.

* create a container for the tree control
  CREATE OBJECT g_custom_container
    EXPORTING
      container_name = 'TREE_CONTAINER'.

* Tree control erzeugen
  CREATE OBJECT g_tree
    EXPORTING
      parent                = g_custom_container
      node_selection_mode   = cl_gui_list_tree=&gt;node_sel_mode_single
      item_selection        = 'X'
      with_headers          = ' '.

*-- Baum aus der Ländertabelle erzeugen
  PERFORM build_node_and_item_table.

*-- Knoten hinzufügen
  CALL METHOD g_tree-&gt;add_nodes_and_items
    EXPORTING
      node_table                     = node_table
      item_table                     = item_table
      item_table_structure_name      = 'MTREEITM'.

*-- Knoten "Root" aufklappen
    CALL METHOD g_tree-&gt;expand_node
         EXPORTING node_key = 'Root'.
  ENDIF.

*-- Drag'n'Drop-Ereignisse erzeugen
  DATA dragdrop TYPE REF TO lcl_dragdrop_receiver.
  CREATE OBJECT dragdrop.
  SET HANDLER dragdrop-&gt;tree_drag     FOR g_tree.
  SET HANDLER dragdrop-&gt;tree_drop     FOR g_tree.
  SET HANDLER dragdrop-&gt;drop_complete FOR g_tree.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM build_node_and_item_table                                *
*---------------------------------------------------------------------*
FORM build_node_and_item_table.

  DATA:
    first_letter,
    t_t005t LIKE t005t OCCURS 0 WITH HEADER LINE.

  nodekey = 1.
*-- Node with key 'Root'
  CLEAR node.
  node-node_key  = 'Root'.
  node-hidden    = ' '.
  node-disabled  = ' '.
  node-isfolder  = 'X'.
  APPEND node TO node_table.

*-- Item to key 'Root'
  CLEAR item.
  item-node_key  = 'Root'.
  item-item_name = '1'.
  item-class     = cl_gui_list_tree=&gt;item_class_text.
  item-alignment = cl_gui_list_tree=&gt;align_auto.
  item-font      = cl_gui_list_tree=&gt;item_font_prop.
  item-text      = 'Root'.
  APPEND item TO item_table.

*-- Selektion der Länder
  SELECT * FROM t005t INTO TABLE t_t005t WHERE spras = 'D'.

*-- Sortieren
  sort t_t005t by land1.

  CLEAR first_letter.

  LOOP AT t_t005t.
    IF first_letter &lt;&gt; t_t005t-land1(1).
*-- Verzeichnis "Länder mit Buchstabe (x)" erstellen
      first_letter = t_t005t-land1(1).
      CLEAR node.
      ADD 1 TO nodekey.
      node-node_key   = nodekey.
      nodekeyx        = nodekey.
      node-relatkey   = 'Root'.
      node-relatship  = cl_gui_list_tree=&gt;relat_last_child.
      node-dragdropid = handle_drop.
      node-hidden     = ' '.
      node-disabled   = ' '.
      node-isfolder   = 'X'.
      APPEND node TO node_table.

*-- Item zum Verzeichnis
      CLEAR item.
      item-node_key  = node-node_key.
      item-item_name = '1'.
      item-class     = cl_gui_list_tree=&gt;item_class_text.
      item-alignment = cl_gui_list_tree=&gt;align_auto.
      item-font      = cl_gui_list_tree=&gt;item_font_prop.
      CONCATENATE 'Länder mit' first_letter
             INTO item-text separated by space.
      APPEND item TO item_table.
    ENDIF.

*-- Nun die Länder anhängen und dem jeweiligen Verzeichnis zuordnen
    CLEAR node.
    ADD 1 TO nodekey.
    node-node_key   = nodekey.
    node-relatkey   = nodekeyx.
    node-relatship  = cl_gui_list_tree=&gt;relat_last_child.
    node-dragdropid = handle_drag.
    node-hidden     = ' '.
    node-disabled   = ' '.
    node-isfolder   = ' '.
    APPEND node TO node_table.

*-- Item "Land"
    CLEAR item.
    item-node_key  = node-node_key.
    item-item_name = '1'.
    item-style     = cl_gui_list_tree=&gt;style_intensified.
    item-class     = cl_gui_list_tree=&gt;item_class_text.
    item-alignment = cl_gui_list_tree=&gt;align_auto.
    item-font      = cl_gui_list_tree=&gt;item_font_fixed.
    item-text      = t_t005t-land1.
    APPEND item TO item_table.

*-- Item "Länderbezeichnung"
    CLEAR item.
    item-node_key  = node-node_key.
    item-item_name = '2'.
    item-class     = cl_gui_list_tree=&gt;item_class_text.
    item-alignment = cl_gui_list_tree=&gt;align_auto.
    item-font      = cl_gui_list_tree=&gt;item_font_prop.
    item-text      = t_t005t-landx.
    APPEND item TO item_table.

  ENDLOOP.

ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_0100  INPUT
*&amp;---------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  DATA: return_code TYPE i.
* CL_GUI_CFW=&gt;DISPATCH must be called if events are registered
* that trigger PAI
* this method calls the event handler method of an event
  CALL METHOD cl_gui_cfw=&gt;dispatch
    IMPORTING return_code = return_code.
  IF return_code &lt;&gt; cl_gui_cfw=&gt;rc_noevent.
    CLEAR g_ok_code.
    EXIT.
  ENDIF.

  CASE g_ok_code.

    WHEN 'BACK'.
*-- Verlassen des Dynpros: Vorher aufräumen!
      IF NOT g_custom_container IS INITIAL.
        g_custom_container-&gt;free( ).
        CLEAR g_custom_container.
        CLEAR g_tree.
      ENDIF.
      SET SCREEN 0. LEAVE SCREEN.
  ENDCASE.

ENDMODULE.                 " USER_COMMAND_0100  INPUT</pre>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/dragndrop-im-treecontrol/">Drag&#8217;n&#8217;Drop im TreeControl</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/dragndrop-im-treecontrol/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
