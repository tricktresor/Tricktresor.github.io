<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Dynamische Programmierung Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/dynamische-programmierung/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:25:04 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Dynamische Programmierung Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Das ABAP Kochbuch</title>
		<link>/blog/abap-kochbuch/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 13 Jun 2013 16:20:03 +0000</pubDate>
				<category><![CDATA[Featured]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[Generic Object Services]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Änderungsbelege]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[Tools]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP Kochbuch]]></category>
		<category><![CDATA[programmierung]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=675</guid>

					<description><![CDATA[<p>Das ABAP Kochbuch. Rezepte zum Nachkochen. Erstellen Sie eine komplette Ticket-Anwendung und lernen Sie dabei die nützlichsten Tools und die einfachsten Techniken für eigene Anwendungen kennen. Tipps von Profis für Profis und solche, die es werden wollen.</p>
<p>Der Beitrag <a href="/blog/abap-kochbuch/">Das ABAP Kochbuch</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Rezepte zum Nachkochen. Erstellen Sie eine komplette Ticket-Anwendung und lernen Sie dabei die nützlichsten Tools und die einfachsten Techniken für eigene Anwendungen kennen. Es beginnt mit Tabellenpflegedialogen und Viewclustern. Dann werden etliche Module mithilfe von Enjoy-Controls erstellt. Diese werden unter Verwendung des Schubladen-Controls und eines eigens erstellten Frameworks in den Ticketdialog eingebunden. Sie erfahren etwas über Änderungsbelege, Tree-Controls, Drag&#8217;n&#8217;Drop, Smart Forms und Generic Object Services. Und auch E-Mail-Versand, Dynamische Programmierung und Webservices werden angesprochen. Da ist eigentlich für jeden etwas dabei!</p>
<p><a href="http://www.amazon.de/dp/383622108X?tag=tricktresor07-21&amp;camp=2906&amp;creative=19474&amp;linkCode=as4&amp;creativeASIN=383622108X&amp;adid=04DF95BB2B3XJKZHC1XD&amp;&amp;ref-refURL=http%3A%2F%2Frcm-eu.amazon-adsystem.com%2Fe%2Fcm%3Flt1%3D_blank%26bc1%3D000000%26IS2%3D1%26bg1%3DFFFFFF%26fc1%3D000000%26lc1%3D0000FF%26t%3Dtricktresor07-21%26o%3D3%26p%3D8%26l%3Das4%26m%3Damazon%26f%3Difr%26ref%3Dss_til%26asins%3D383622108X"><img fetchpriority="high" decoding="async" class="alignnone size-medium wp-image-4043" alt="ABAP Kochbuch" src="http://tricktresor.com/wp-content/uploads/2013/06/ABAP_Kochbuch-300x245.jpg" width="300" height="245" srcset="/wp-content/uploads/2013/06/ABAP_Kochbuch-300x245.jpg 300w, /wp-content/uploads/2013/06/ABAP_Kochbuch-624x511.jpg 624w, /wp-content/uploads/2013/06/ABAP_Kochbuch.jpg 976w" sizes="(max-width: 300px) 100vw, 300px" /></a><br />
<a title="Das ABAP Kochbuch bei Amazon kaufen" href="http://www.amazon.de/gp/product/383622108X/ref=as_li_ss_tl?ie=UTF8&amp;camp=1638&amp;creative=19454&amp;creativeASIN=383622108X&amp;linkCode=as2&amp;tag=tricktresor07-21" target="_blank">Das ABAP Kochbuch bei Amazon</a></p>
<p><a title="Powered by Inwerken AG" href="http://www.Inwerken.de/" target="_blank">Powered by Inwerken AG</a></p>
<p>Der Beitrag <a href="/blog/abap-kochbuch/">Das ABAP Kochbuch</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Interne Tabelle mit COMPONENTS</title>
		<link>/blog/interne-tabelle-mit-components/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 29 Aug 2012 15:03:25 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[cl_abap_structdescr]]></category>
		<category><![CDATA[cl_abap_elemdescr]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[select]]></category>
		<category><![CDATA[create data]]></category>
		<category><![CDATA[assign]]></category>
		<category><![CDATA[cl_abap_tabledescr]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=657</guid>

					<description><![CDATA[<p>Hier wird eine interne Tabelle anhand von einer beliebigen Anzahl Feldern generiert.</p>
<p>Der Beitrag <a href="/blog/interne-tabelle-mit-components/">Interne Tabelle mit COMPONENTS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Hier wird eine interne Tabelle anhand von einer beliebigen Anzahl Feldern generiert.</p>
<p>Die Tabelle, aus der die Daten gelesen werden sollen, muss angegeben werden. Dann müssen die Felder EINZELN in der Select-Option eingetragen werden. Die Feldnamen müssen mit dem Namen des Datenelements übereinstimmen.</p>
<p>Eine schönere Version wäre die Komponenten der angegebenen Tabelle zu ermitteln (CL_ABAP_STRUCTDESCR-&gt;GET_COMPONENTS).</p>
<p><strong><span style="text-decoration: underline;">Achtung:</span><br />
</strong>Es erfolgt keine Prüfung ob die Felder in der Tabelle vorhanden sind! Wenn Feldnamen angegeben werden, die nicht in der angegebenen Tabelle existieren, kommt es zu einem Dump!</p>
<p>Es erfolgt keine Ausgabe der Daten!</p>
<h2 class="head1">Coding</h2>
<pre class="lang:abap decode:true  ">*== Create internal table dynamically by given fields
 DATA: gr_element   TYPE REF TO cl_abap_elemdescr,
 gr_struc     TYPE REF TO cl_abap_structdescr,
 gr_table     TYPE REF TO cl_abap_tabledescr,
 gt_comp      TYPE cl_abap_structdescr=&gt;component_table,
 gs_comp      LIKE LINE OF lt_comp,
 gr_data      TYPE REF TO data,
 gt_fields    TYPE STANDARD TABLE OF string,
 hf_fieldname TYPE fieldname.

FIELD-SYMBOLS &lt;table&gt; TYPE ANY TABLE.

*== selection screen
 PARAMETERS p_table TYPE tabname DEFAULT 'MARA'.
 SELECT-OPTIONS s_fields FOR hf_fieldname.
 

START-OF-SELECTION.

  LOOP AT s_fields.
 CLEAR: gs_comp.

*== Element Description for field
 gr_element ?= cl_abap_elemdescr=&gt;describe_by_name( s_fields-low ).
 *== Field name
 gs_comp-name = s_fields-low.
 *== Field type (element)
 gs_comp-type = gr_element.
 *== add element to components table
 APPEND gs_comp TO gt_comp.

*== add column to selection table
 APPEND s_fields-low TO gt_fields.

  ENDLOOP.

*== Create structure/ work area
 gr_struc = cl_abap_structdescr=&gt;create( gt_comp ).

*== create table by structure reference
 gr_table = cl_abap_tabledescr=&gt;create(
 p_line_type  = gr_struc
 p_table_kind = cl_abap_tabledescr=&gt;tablekind_std
 p_unique     = abap_false ).

*== create data handle for table
 CREATE DATA gr_data TYPE HANDLE gr_table.

*== assign data to table-pointer
 ASSIGN gr_data-&gt;* TO &lt;table&gt;.

*== Select data into dynamic internal table
 SELECT (gt_fields) FROM  (p_table)
 INTO CORRESPONDING FIELDS OF TABLE &lt;table&gt;
 UP TO 10 ROWS.</pre>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/interne-tabelle-mit-components/">Interne Tabelle mit COMPONENTS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Beliebige Tabelle anzeigen</title>
		<link>/blog/beliebige-tabelle-anzeigen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 29 Aug 2012 14:29:20 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[cl_salv_table]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=656</guid>

					<description><![CDATA[<p>Das SALV-Model eignet sich wunderbar, um eine interne Tabelle anzuzeigen. Der gro&#223;e Vorteil gegen&#252;ber der klassischen ALV-Grid Klassen ist, dass weder Strukturname noch Feldkatalog &#252;bergeben werden m&#252;ssen. Das sucht sich der SALV selbst zusammen.</p>
<p>Der Beitrag <a href="/blog/beliebige-tabelle-anzeigen/">Beliebige Tabelle anzeigen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Das SALV-Model eignet sich wunderbar, um eine interne Tabelle anzuzeigen. Der große Vorteil gegenüber der klassischen ALV-Grid Klassen ist, dass weder Strukturname noch Feldkatalog übergeben werden müssen. Das sucht sich der SALV selbst zusammen.</p>
<p>Das ist alles an Coding, was nötig ist:</p>
<p class="sap1">  DATA: gref_salv TYPE REF TO cl_salv_table.</p>
<p>TRY.<br />
CALL METHOD cl_salv_table=&gt;factory<br />
IMPORTING<br />
r_salv_table = gref_salv<br />
CHANGING<br />
t_table      = gt_itab.<br />
CATCH cx_salv_msg .<br />
ENDTRY.</p>
<p>gref_salv-&gt;display( ).</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/beliebige-tabelle-anzeigen/">Beliebige Tabelle anzeigen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Interne Tabelle DDIC</title>
		<link>/blog/interne-tabelle-ddic/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 29 Aug 2012 13:57:36 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[color]]></category>
		<category><![CDATA[create data]]></category>
		<category><![CDATA[assign]]></category>
		<category><![CDATA[cl_abap_tabledescr]]></category>
		<category><![CDATA[assign component]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_abap_typedescr]]></category>
		<category><![CDATA[DDIC]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=655</guid>

					<description><![CDATA[<p>Eine interne Tabelle anhand einer gegebenen DDIC-Struktur erzeugen und Ausgabe als einfache Liste</p>
<p>Der Beitrag <a href="/blog/interne-tabelle-ddic/">Interne Tabelle DDIC</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Eine interne Tabelle anhand einer gegebenen DDIC-Struktur erzeugen und Ausgabe als einfache Liste</p>
<p class="head1">Verwendung</p>
<p>Die in diesem Beispiel verwendete Möglichkeit interne Tabellen und Arbeitsbereiche dynamisch zu erzeugen kann verwendet werden, wenn der Inhalt einer Datenbanktabelle ausgelesen werden soll.</p>
<p>So könnte man zum Beispiel ein Programm schreiben, das alle Tabellen ausliest, in denen das Datenelement &#8220;MATNR&#8221; vor kommt. Für jede Tabelle wird dann dynamisch eine interne Tabelle generiert und mittels ASSIGN COMPONENT &#8216;MATNR&#8217; könnten dynamisch Prüfungen auf die Materialnummer erfolgen.</p>
<p class="head1">Coding</p>
<p class="sap1"><span style="color: #fb2412;">*== data</span><br />
DATA gr_struct     TYPE REF TO cl_abap_structdescr.<br />
DATA gr_table      TYPE REF TO cl_abap_tabledescr.<br />
DATA gd_table      TYPE REF TO data.<br />
DATA gd_line       TYPE REF TO data.</p>
<p class="sap1"><span style="color: #fb2412;">*== field symbols</span><br />
FIELD-SYMBOLS &lt;workarea&gt; TYPE ANY.<br />
FIELD-SYMBOLS &lt;table&gt;    TYPE ANY TABLE.<br />
FIELD-SYMBOLS &lt;value&gt;    TYPE ANY.</p>
<p class="sap1">PARAMETERS p_table TYPE tabname DEFAULT &#8216;T000&#8217;.</p>
<p class="sap1">START-OF-SELECTION.</p>
<p class="sap1"><span style="color: #fb2412;">*== get structure description</span><br />
gr_struct  ?= cl_abap_typedescr=&gt;describe_by_name( p_table ).<br />
*== create table description using structure description<br />
gr_table   ?= cl_abap_tabledescr=&gt;create( gr_struct ).</p>
<p class="sap1"><span style="color: #fb2412;">*== create work area</span><br />
CREATE DATA gd_line TYPE HANDLE gr_struct.<br />
ASSIGN gd_line-&gt;* TO &lt;workarea&gt;.</p>
<p class="sap1"><span style="color: #fb2412;">*== create internal table</span><br />
CREATE DATA gd_table TYPE HANDLE gr_table.<br />
ASSIGN gd_table-&gt;* TO &lt;table&gt;.</p>
<p class="sap1"><span style="color: #fb2412;">*== select data from database into dynamically generated internal table</span><br />
SELECT * FROM (p_table)<br />
INTO CORRESPONDING FIELDS OF TABLE &lt;table&gt; UP TO 20 ROWS.</p>
<p class="sap1"><span style="color: #fb2412;">*== loop at all table lines for output</span><br />
LOOP AT &lt;table&gt; ASSIGNING &lt;workarea&gt;.<br />
NEW-LINE.<br />
DO.<br />
<span style="color: #fb2412;">*== loop at all components of the structure</span><br />
ASSIGN COMPONENT sy-index OF STRUCTURE &lt;workarea&gt; TO &lt;value&gt;.<br />
IF sy-subrc &gt; 0.<br />
EXIT.<br />
ELSE.<br />
<span style="color: #fb2412;">*== and write into list</span><br />
WRITE &lt;value&gt; COLOR COL_NORMAL.<br />
ENDIF.<br />
ENDDO.<br />
ENDLOOP.</p>
<p>Der Beitrag <a href="/blog/interne-tabelle-ddic/">Interne Tabelle DDIC</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
