<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Tree Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/tree/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 04 Jan 2022 13:53:18 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Tree Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>SAP-Demoprogramme</title>
		<link>/blog/sap-demoprogramme/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 31 May 2016 08:26:29 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Workshop]]></category>
		<category><![CDATA[Dynamische Dokumente]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[Demo-Programme]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[abap]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=431</guid>

					<description><![CDATA[<p>Demoprogramme der SAP. CALENDAR_CONTROL CONTEXT_MENU_DYNPR CONTEXT_MENU_LIST CUSTOM_CONTROL DIALOGBOX_CONTROL DOCKING_CONTROL DRAG_DROP_EDIT_TREE DRAG_DROP_TREE_MULTI  DROPDOWN_LISTBOX HTML_VIEWER HTML_VIEWER_WORKSHOP PICTURE_CONTROL SAP_LIST_TREE SPLITTER_CONTROL SUBSCREEN TABLE_CONTROL TOOLBAR_DIALOGBOX</p>
<p>Der Beitrag <a href="/blog/sap-demoprogramme/">SAP-Demoprogramme</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Demoprogramme der SAP. CALENDAR_CONTROL CONTEXT_MENU_DYNPR CONTEXT_MENU_LIST CUSTOM_CONTROL DIALOGBOX_CONTROL DOCKING_CONTROL DRAG_DROP_EDIT_TREE DRAG_DROP_TREE_MULTI DROPDOWN_LISTBOX HTML_VIEWER HTML_VIEWER_WORKSHOP PICTURE_CONTROL SAP_LIST_TREE SPLITTER_CONTROL SUBSCREEN TABLE_CONTROL TOOLBAR_DIALOGBOX</p>
<p>[notice type=&#8217;info&#8217;]Viele DEMO-Programme finden sich im Paket SLIS!</p>
<p>Demoprogramme beginnen häufig mit DEMO* oder RSDEMO* [/notice]</p>
<h2 class="head1">Toolbar</h2>
<ul>
<li>
<div class="text1">RSDEMO_TOOLBAR_DIALOGBOX</div>
</li>
<li>SAPTOOLBAR_IN_SPLITTER</li>
<li>SAPTOOLBAR_DEMO1</li>
<li>BCALV_GRID_07</li>
</ul>
<h2 class="head1">ALV-Grid</h2>
<ul>
<li>BCALV*</li>
<li><span style="color: #fb2412;"><strong>BCALV_VERIFY_DATATYPES</strong></span><br />
Das Mega-Test-Programm für jegliche Optionen des ALV-Grid</li>
<li><span style="color: #fb2412;"><strong>BCALV_TEST_SUITE</strong><br />
</span>Viele Funktionen in einem Programm</li>
</ul>
<h2 class="head1">ALV-Tree</h2>
<ul>
<li>SAPSIMPLE_TREE_CONTROL_DEMO</li>
<li>R_ALV_TREE_TOOLBAR_MANAGER</li>
<li>BCALV_GRID_DND_TREE</li>
<li>BCALV_GRID_DND_TREE_SIMPLE</li>
<li>BCALV_TEST_COLUMN_TREE</li>
<li>BCALV_TEST_SIMPLE_TREE</li>
<li>BCALV_TREE_01</li>
<li>BCALV_TREE_02</li>
<li>BCALV_TREE_03</li>
<li>BCALV_TREE_04</li>
<li>BCALV_TREE_05</li>
<li>BCALV_TREE_06</li>
<li>BCALV_TREE_DEMO</li>
<li>BCALV_TREE_DND</li>
<li>BCALV_TREE_DND_MULTIPLE</li>
<li>BCALV_TREE_EVENT_RECEIVER</li>
<li>BCALV_TREE_EVENT_RECEIVER01</li>
<li>BCALV_TREE_ITEMLAYOUT</li>
<li>BCALV_TREE_MOVE_NODE_TEST</li>
<li>BCALV_TREE_SIMPLE_DEMO</li>
<li>Doku:<br />
<a href="http://help.sap.com/printdocu/core/print46b/de/data/de/pdf/BCCITREE.pdf" target="_blank" rel="noopener noreferrer">http://help.sap.com/printdocu/core/print46b/de/<br />
data/de/pdf/BCCITREE.pdf</a></li>
</ul>
<h2 class="head1">Dialogbox</h2>
<ul>
<li>
<div class="text1">RSDEMO_DIALOGBOX_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_TOOLBAR_DIALOGBOX</div>
</li>
</ul>
<h2 class="head1">Drawer (Vertikales Tabstrip)</h2>
<ul>
<li>
<div class="text1">RSBPT_CONTAINER_BAR_3</div>
</li>
</ul>
<h2 class="head1">Context Menu</h2>
<ul>
<li>RSDEMO_CONTEXT_MENU_DYNPR</li>
<li>
<div class="text1">RSDEMO_CONTEXT_MENU_LIST</div>
</li>
<li>
<div class="text1">R_ALV_TREE_TOOLBAR_MANAGER</div>
</li>
</ul>
<h2 class="head1">Grafik</h2>
<ul>
<li>
<div class="text1">GRAPHICS_GUI_CE_DEMO</div>
</li>
</ul>
<h2 class="head1">Drag and Drop</h2>
<ul>
<li>
<div class="text1">RSDEMO_DRAG_DROP_EDIT_TREE</div>
</li>
<li>
<div class="text1">RSDEMO_DRAG_DROP_TREE_MULTI</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_DRAGDROP</div>
</li>
<li>
<div class="text1">BCALV_GRID_DND_TREE</div>
</li>
<li>
<div class="text1">BCALV_GRID_DND_TREE_SIMPLE</div>
</li>
<li>
<div class="text1">SAPCALENDAR_DRAG_DROP</div>
</li>
<li>
<div class="text1">BCALV_TEST_DRAG_DROP_02</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_EVENTS</div>
</li>
</ul>
<h2 class="head1">Textedit</h2>
<ul>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_1</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_3</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_DEMO_DRAGDROP</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_1</div>
</li>
<li>
<div class="text1">SAPTEXTEDIT_TEST_2</div>
</li>
<li>
<div class="text1"><span style="line-height: 1.5em;">SAPTEXTEDIT_TEST_EVENTS</span></div>
</li>
<li>SAPBTFEDITOR_DEMO Demonstriert die Verwendung des BTF-Editors</li>
<li>SAPBTFFRAMEWORK_DEMO</li>
</ul>
<h2 class="head2">HTML</h2>
<ul>
<li>
<div class="text1">SAPHTML_SCRIPT_DEMO</div>
<div class="text1"></div>
</li>
<li>
<div class="text1">RSDEMO_HTML_VIEWER</div>
</li>
<li>
<div class="text1">RSDEMO_HTML_VIEWER_WORKSHOP</div>
</li>
<li>RSTXHTML</li>
<li>SAPHTML_DEMO_CN</li>
<li>SAPHTML_DEMO1</li>
<li>SAPHTML_EVENTS_DEMO</li>
<li>SAPHTML_LONGTEXT_DEMO</li>
<li>SAPHTML_R3HTTP_DEMO</li>
<li>SAPHTML_R3HTTP_XML</li>
<li>SAPHTML_SCRIPT_DEMO</li>
<li>SAPHTML_SET_GUI_CHARSET</li>
<li>SAPHTML_SSO_DEMO</li>
<li>SAPHTML_UI_DEMO</li>
<li>SAPHTML_USE_DEFAULT_CHARSET</li>
<li>SAPHTMLPAGEEDITOR_DEMO1</li>
</ul>
<h2 class="head1">Dynamische Dokumente/ ABAP-Renderer</h2>
<table style="height: 115px;" width="665">
<tbody>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_FLOW</span></li>
</ul>
</td>
<td>Demonstriert die Verwendung der Element FLOW des Gestaltungsobjekts</td>
</tr>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID</span></li>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID_1</span></li>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_DEMO_LAYOUT_GRID_2</span></li>
</ul>
</td>
<td style="vertical-align: top;">Demonstriert die Verwendung der Element GRID des Gestaltungsobjekts</td>
</tr>
<tr>
<td>
<ul>
<li><span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 11px;">SALV_FORM_TEST</span></li>
</ul>
</td>
<td> Testprogramm für das ALV Gestaltungsobjekt</td>
</tr>
</tbody>
</table>
<h2 class="head1">Mail</h2>
<ul>
<li>
<div class="text1">RSSOHTMLGIF (Sehr schönen Beispiel, um eine HTML Seite mit eingebundenen Bildern zu versenden)</div>
</li>
</ul>
<h2 class="head1">Calendar</h2>
<ul>
<li>RSDEMO_CALENDAR_CONTROL</li>
<li>SAPCALENDAR_DRAG_DROP</li>
</ul>
<h2 class="head1">Sonstige</h2>
<ul>
<li>
<div class="text1">RSDEMO_CUSTOM_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_EVENT_ON_FIELD</div>
</li>
<li>
<div class="text1">RSDEMO_DOCKING_CONTROL</div>
</li>
<li>
<div class="text1">RSDEMO_DROPDOWN_LISTBOX</div>
</li>
<li>
<div class="text1">RSDEMO_EASY_SPLITTER_CONTROL</div>
</li>
<li>RSDEMO_PICTURE_CONTROL</li>
<li>
<div class="text1">RSDEMO_SAP_LIST_TREE</div>
</li>
<li>
<div class="text1">RSDEMO_SPLITTER_CONTROL</div>
</li>
<li>TEST_FRONTEND_SERVICES</li>
<li>DEMO_COLORSEL</li>
</ul>
<h2 class="head1">Old-Fashioned</h2>
<ul>
<li>
<div class="text1">RSDEMO_SUBSCREEN</div>
</li>
<li>
<div class="text1">RSDEMO_TABLE_CONTROL</div>
</li>
<li>RSDEOM02 (Table Control)</li>
<li>DEMO_LIST_FORMAT_COLOR_1 Farben in Listen</li>
<li>DEMO_LIST_FORMAT_COLOR_2 Verwendung von Farben in Listen</li>
</ul>
<h2>Grafik</h2>
<p><a href="https://tricktresor.com/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg"><img fetchpriority="high" decoding="async" class="alignnone size-full wp-image-654991" src="https://tricktresor.com/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg" alt="2016-05-31_10-13-35" width="615" height="477" srcset="/wp-content/uploads/2007/08/2016-05-31_10-13-35.jpg 615w, /wp-content/uploads/2007/08/2016-05-31_10-13-35-300x233.jpg 300w" sizes="(max-width: 615px) 100vw, 615px" /></a></p>
<p>Report RGRAPALL listet die folgenden Grafikbeispiele auf:</p>
<ul>
<li>BARCBO01 Demoprogramm: Balkenplan im Anzeigemodus</li>
<li>BARCBO02 Demoprogramm: Balkenplan im Pflegemodus</li>
<li>BARCBO03 Demoprogramm: Balkenplan im Pflegemodus (Plantafel)</li>
<li>BARCBO04 Demoprogramm: Gegenseitiges Aktualisieren von Balkenplan und Dynpro</li>
<li>BARCOCX1 Demoprogramm: Balkenplancontrol</li>
<li>DEMO_GFW_PRES_SHOW Anwendungsbeispiel für den Funktionsbaustein GFW_PRES_SHOW</li>
<li>DEMO_GFW_PRES_SHOW_MULT Anwendungsbeispiel für den Funktionsbaustein GFW_PRES_SHOW_MULT</li>
<li>GFW_DEMO_HIER1 GFW: Demonstration einer einfachen Hierarchiegrafik mit SAP-Tree</li>
<li>GFW_DEMO_HIER2 GFW: Demonstration einer Hierarchiegrafik (4 in Splitter, Drag&amp;Drop)</li>
<li>GFW_DEMO_HIER3 GFW: Demonstration einer Hierarchie-/Präsentationsgrafik (Drag&amp;Drop)</li>
<li>GFW_DEMO_PRES GFW: Demonstration von GFW mit sichtbarem Datencontainer</li>
<li>GFW_DEMO_PRES1 GFW: Demonstration von Präsentationsgrafiken mit GFW</li>
<li>GFW_PROG_BAR GFW: Programmierbeispiel für ein Balkendiagramm</li>
<li>GFW_PROG_COLUMNS_AND_TI GFW: Programmierbeispiel für ein Balkendiagramm mit Zeitachse</li>
<li>GFW_PROG_HISTOGRAM GFW: Programmierbeispiel für ein Histogramm</li>
<li>GFW_PROG_LABELS GFW: Programmierbeispiel für dieselben Beschriftungen, lange Beschr.</li>
<li>GFW_PROG_MTA GFW: Programmierbeispiel für eine Meilensteintrendanalyse</li>
<li>GFW_PROG_PIE GFW: Programmierbeispiel für ein Kreisdiagramm</li>
<li>GFW_PROG_POINT_WITH_LAB GFW: Programmierbeispiel für Diagramm mit gekennzeichnetem Punkt</li>
<li>GFW_PROG_TIME_AXIS GFW: Programmierbeispiel für ein Punktdiagramm mit Zeitachse</li>
<li>GFW_PROG_TUTORIAL GFW: Programmierbeispiel für eine einfache PräsGrafik = GFW-Tutorial</li>
<li>GFW_PROG_SPEEDOMETER GFW: Programmierbeispiel für ein Balkendiagramm<br />
<a href="https://tricktresor.com/wp-content/uploads/2016/05/SNAG-0001.png"><img decoding="async" class="alignnone size-full wp-image-1018035" src="https://tricktresor.com/wp-content/uploads/2016/05/SNAG-0001.png" alt="" width="531" height="417" srcset="/wp-content/uploads/2016/05/SNAG-0001.png 531w, /wp-content/uploads/2016/05/SNAG-0001-300x236.png 300w, /wp-content/uploads/2016/05/SNAG-0001-117x91.png 117w" sizes="(max-width: 531px) 100vw, 531px" /></a></li>
<li>GRBMAT_1 Demoprogramm: Pushbuttongrafik</li>
<li>GRBMAT_2 Demoprogramm: Pushbuttongrafik / 2</li>
<li>GRBUSG_1 Demoprogramm: SAP-Präsentationsgrafik 2D</li>
<li>GRBUSG_2 Demoprogramm: SAP-Präsentationsgrafik 3D</li>
<li>GRBUSG_3 Demoprogramm: Präsentationsgrafik Umsatzvergleich</li>
<li>GRBUSG_4 Demoprogramm: Präsentationsgrafik 2D &#8211; 3D &#8211; 4D</li>
<li>GRCNETC1 Demoprogramm: Ansteuern des Clustereditors im Anzeigemodus</li>
<li>GRCNETC2 Demoprogramm: Ansteuern des Clustereditors (erweiterte Version)</li>
<li>GRGANT_2 Demoprogramm: Gantt-Diagramm / 2</li>
<li>GRHIER_1 Demoprogramm: Hierarchiegrafik</li>
<li>GRHIER_2 Demoprogramm: Hierarchie</li>
<li>GRHPGL_1 Demoprogramm: HPGL-Display</li>
<li>GRPORT_0 Demonstration Portfolio-Grafik</li>
<li>GRSTAT_1 Demoprogramm: Trigonometrische Funktionen mit der Statistikgrafik</li>
<li>GRSTAT_2 Demoprogramm: Funktionsdarstellung mit der Statistikgrafik</li>
<li>HIER_BO1 Demoprogramm: Hierarchiegrafik im Anzeigemodus</li>
<li>HIER_BO2 Demoprogramm: Hierarchiegrafik im Pflegemodus</li>
<li>NETZOCX1 Demoprogramm: Netzplancontrol</li>
<li>NETZOCX2 Demoprogramm: Netzplancontrol mit Callbackverarbeitung</li>
<li>NETZ_BO1 Demoprogramm: Netzplangrafik im Anzeigemodus</li>
<li>NETZ_BO2 Demoprogramm: Netzplangrafik im Pflegemodus</li>
<li>NETZ_BO3 Demoprogramm: Netzplangrafik im Pflegemodus (erweiterte Form)</li>
</ul>
<p>Der Beitrag <a href="/blog/sap-demoprogramme/">SAP-Demoprogramme</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>High Definition SAP? Ein Erfahrungsbericht</title>
		<link>/blog/high-definition-sap-ein-erfahrungsbericht/</link>
					<comments>/blog/high-definition-sap-ein-erfahrungsbericht/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 19 Jun 2014 19:14:57 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Hilfe]]></category>
		<category><![CDATA[Schriftgröße]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Generell]]></category>
		<category><![CDATA[Materialstamm]]></category>
		<category><![CDATA[Rahmen]]></category>
		<category><![CDATA[SAPGUI]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[auflösung]]></category>
		<category><![CDATA[Performance]]></category>
		<category><![CDATA[elemente]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Darstellung]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[skalierung]]></category>
		<category><![CDATA[Tree]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4819</guid>

					<description><![CDATA[<p>Mehr ist besser. Das gilt für Geschwindigkeit, Speicher und auch die Auflösung. Dass dies jedoch im Falle der Auflösung nicht unbedingt der Fall ist, möchte ich dir in diesem Artikel zeigen. Ein Notebook mit der Auflösung von 2880x1620 Bildpunkten sollte ein scharfes Bild und gemütliches Arbeiten garantieren. Leider ist dem nicht so, denn nicht nur das Betriebssystem muss mitspielen, sondern auch alle anderen Programme. Wie auch der SAPGUI...</p>
<p>Der Beitrag <a href="/blog/high-definition-sap-ein-erfahrungsbericht/">High Definition SAP? Ein Erfahrungsbericht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ich habe ein neues Notebook: Lenovo T540p. Ein tolles Gerät! Schnell, lautlos und eine Auflösung von 2880&#215;1620 Bildpunkten. Bringt die hohe Auflösung etwas bei der Arbeit mit SAP? Um es gleich vorweg zu nehmen: Nein. Im Gegenteil, es bereitet eher Probleme, denn nicht alle GUI-Elemente werden entsprechend vergrößert.</p>
<h2>Generell</h2>
<p>Eine hohe Auflösung ist erst einmal toll, denn das Bild wird schärfer. Theoretisch jedenfalls, denn praktisch müssen alle beteiligten Komponenten mithelfen. Bei einer hohen Auflösung wird erst einmal alles kleiner, denn viele GUI-Elemente werden in Pixel gemessen und nicht in ihrer wahren Darstellungsgröße. Ein Desktopicon von Windows XP hat eine feste Größe von 32&#215;32 Pixeln. Moderne Betriebssysteme haben zwar inzwischen deutliche größere Icons, jedoch ist das gesamte Zusammenspiel zwischen Fenster, Fensterrahmen, Icons, GUI-Elementen (Dropdownboxen, Scrollbalken, Kontextmenus etc) und der Schrift wichtig. Nicht nur das Betriebssystem muss eine Skalierung der Darstellungsgröße unterstützen, sondern auch die Software. Meine Testsoftware ist in diesem Fall der SAPGUI.</p>
<h2>SAPGUI 730</h2>
<p>Den SAPGUI kann man skalieren indem man die Schriftgröße einstellt:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190643.jpg"><img decoding="async" class="alignnone wp-image-4835 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190643-300x229.jpg" alt="Bild_2014_06_19_190643" width="300" height="229" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190643-300x229.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190643-1024x782.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190643-624x476.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190643.jpg 1604w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Der Dialog sieht im Großen und Ganzen gut aus. Auffällig ist, dass die <em>Aufklapper</em> am TreeControl äußerst klein ausfallen. Dieser Umstand zieht sich leider durch den gesamten SAPGUI. Aus diesem Grund muss man bei der Arbeit mit einer hohen Auflösung auch bei einer großen Darstellung der Objekte eine ruhige Maushand haben.</p>
<h2>Windows-Einstellungen</h2>
<p>Im Folgenden möchte ich euch einfach mehr oder weniger kommentarlos ein paar Screenshots zeigen, die ich mit einer Windows-Skalierung von (meistens) 200% gemacht habe:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190619.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4823 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190619-300x184.jpg" alt="Bild_2014_06_19_190619" width="300" height="184" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190619-300x184.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190619-624x384.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190619.jpg 812w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Zum Angeben hier noch ein Screenshot meiner Auflösung:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190637.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4824 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190637-300x136.jpg" alt="Bild_2014_06_19_190637" width="300" height="136" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190637-300x136.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190637-624x283.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190637.jpg 908w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Icons und Fenster werden dadurch im Windows so dargestellt, dass ich nicht nach zwei Stunden Arbeit mit Augenkrebs rechnen muss.</p>
<h2>Testen der SAPGUI-Elemente</h2>
<p>Die folgenden Testst habe ich mit dem <a title="Signature Theme | SAP Design Guild" href="http://www.sapdesignguild.org/resources/visualdesign_mic.asp">Signature-Theme</a> gemacht. Um die einzelnen Controls auszuprobieren, habe ich die gängigen Entwicklungswerkzeuge geprüft und bin die SAP-Demoprogramme durchgegangen.</p>
<p>Als erstes viel mir auf, dass die Standardicons leider alle unscharf dargestellt werden:</p>
<p><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4843" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190653.jpg" alt="Bild_2014_06_19_190653" width="145" height="55" /></p>
<p>Auch die Suchhilfe sieht unschön aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190631.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4840 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190631-300x130.jpg" alt="Bild_2014_06_19_190631" width="300" height="130" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190631-300x130.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190631-1024x446.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190631-624x272.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190631.jpg 1552w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Im Startmenü sieht man deutlich, wie klein die <em>Baumaufklapper</em> sind. Auch ist gut zu erkennen, dass die Standardelemente unscharf sind:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190610.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4837 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190610-300x269.jpg" alt="Bild_2014_06_19_190610" width="300" height="269" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190610-300x269.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190610-624x560.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190610.jpg 760w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Hilfe zum SAPGUI ist okay:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190601.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4829 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190601-300x287.jpg" alt="Bild_2014_06_19_190601" width="300" height="287" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190601-300x287.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190601-624x597.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190601.jpg 972w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Eine Registerkarte verschluckt ein Teil der Beschriftung. Die Icons sowie die Schrift auf Drucktasten sieht sehr gequetscht aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190658.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4836 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190658-300x55.jpg" alt="Bild_2014_06_19_190658" width="300" height="55" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190658-300x55.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190658-624x115.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190658-800x148.jpg 800w, /wp-content/uploads/2014/06/Bild_2014_06_19_190658.jpg 803w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Icons im SAPLOGON werden nicht skaliert:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190604.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4822 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190604-300x90.jpg" alt="Bild_2014_06_19_190604" width="300" height="90" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190604-300x90.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190604-624x188.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190604.jpg 752w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die F1-Hilfe im Performance-Assistant hat ein Problem mit dem Splitter:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190628.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4830 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190628-300x84.jpg" alt="Bild_2014_06_19_190628" width="300" height="84" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190628-300x84.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190628-1024x288.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190628-624x175.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190628.jpg 1100w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h3>Entwicklungswerkzeuge</h3>
<p>Der Formulareditor sieht erstaunlicherweise sehr gut aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190659.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4847 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190659-300x68.jpg" alt="Bild_2014_06_19_190659" width="300" height="68" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190659-300x68.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190659-1024x233.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190659-624x142.jpg 624w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die grafische Tabellendarstellung ist okay (Transaktion SE11)</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190645.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4846 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190645-300x158.jpg" alt="Bild_2014_06_19_190645" width="300" height="158" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190645-300x158.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190645-1024x541.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190645-624x329.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190645.jpg 1302w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die SE80 hat große Probleme bei der Darstellung der Web-Elemente:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190645.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4820 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190651-300x148.jpg" alt="Bild_2014_06_19_190651" width="300" height="148" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190651-300x148.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651-1024x507.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651-624x308.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651.jpg 1036w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Schriftart im Editor lässt sich im übrigen einfach in der unteren rechten Ecke einstellen. Dies geht unabhängig von der Skalierung sehr gut:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_210641.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4848 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_210641-300x194.jpg" alt="Bild_2014_06_19_210641" width="300" height="194" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_210641-300x194.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_210641-624x404.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_210641.jpg 742w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Zum Vergleich: So sollte die SE80 aussehen:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_200629.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4827 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_200629-300x184.jpg" alt="Bild_2014_06_19_200629" width="300" height="184" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_200629-300x184.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_200629-624x384.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_200629.jpg 710w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Der grafische Dynproeditor sieht ebenfalls merkwürdig aus. Die Dynpro-Elemente sind deutlich größer als der Rest der Anwendung;</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190625.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4821 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190625-300x208.jpg" alt="Bild_2014_06_19_190625" width="300" height="208" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190625-300x208.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190625-1024x712.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190625-624x434.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190625.jpg 1299w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Der Quickviewer sieht auf den ersten Blick gut aus. Auf den zweiten Blick fällt auf, dass die Schlüsselfelder mit einem äußerst kleinen Symbol gekennzeichnet sind. Die Überschrift in der Navigation passt nicht 100%ig. In der Drucktastenleiste sieht man wieder sehr schön, dass die Icons unscharf sind:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190602.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4845 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190602-300x253.jpg" alt="Bild_2014_06_19_190602" width="300" height="253" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190602-300x253.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190602-1024x866.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190602-624x527.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190602.jpg 1026w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h3>Controls</h3>
<p>Als erstes habe ich das Calendar Control getestet. Gruselig und nicht zu verwenden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190651-2.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4844" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190651-2.jpg" alt="Bild_2014_06_19_190651 (2)" width="666" height="221" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190651-2.jpg 666w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651-2-300x99.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190651-2-624x207.jpg 624w" sizes="(max-width: 666px) 100vw, 666px" /></a></p>
<p>Dropdown-Listboxen werden gut dargestellt:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190609.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4842 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190609-300x192.jpg" alt="Bild_2014_06_19_190609" width="300" height="192" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190609-300x192.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190609-624x399.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190609.jpg 687w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die HTML-Elemente auf Dynamischen Dokumenten sehen nicht wirklich gut aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190639.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4841 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190639-300x144.jpg" alt="Bild_2014_06_19_190639" width="300" height="144" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190639-300x144.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190639-1024x494.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190639-624x301.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190639.jpg 1129w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Das Text Control &#8211; hier ein Beispiel aus dem Materialstamm &#8211; sieht gut aus. Alle Elemente habe eine einheitliche Größe:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190654.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4839 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190654-300x140.jpg" alt="Bild_2014_06_19_190654" width="300" height="140" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190654-300x140.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190654-1024x480.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190654-624x292.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190654.jpg 1343w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Im ALV-Grid-Control fällt wieder auf, dass die Icons in der Toolbar unscharf sind. Das Element &#8220;Alle Einträge markieren&#8221; ist zu klein:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190616.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4838 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190616-300x102.jpg" alt="Bild_2014_06_19_190616" width="300" height="102" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190616-300x102.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190616-1024x348.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_190616-624x212.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190616.jpg 1363w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Im Tree Control fallen erneut lediglich die kleinen Aufklapper auf (bzw. eigentlich fallen sie gar nicht auf, weil sie so klein sind&#8230;):</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_200604.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4828 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_200604-300x87.jpg" alt="Bild_2014_06_19_200604" width="300" height="87" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_200604-300x87.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_200604-1024x298.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_19_200604-624x182.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_200604.jpg 1498w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Der grafische Texteditor ist okay auch wenn die Listboxen zur Auswahl der Formate zu klein sind:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190618.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4833 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190618-300x80.jpg" alt="Bild_2014_06_19_190618" width="300" height="80" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190618-300x80.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_19_190618-624x166.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_19_190618.jpg 1016w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Druckansicht zeigt ein deutliches Missverhältnis zwischen Rahmen und Vorschautext:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190626-2.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4832 size-full" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_19_190626-2.jpg" alt="Bild_2014_06_19_190626 (2)" width="290" height="309" srcset="/wp-content/uploads/2014/06/Bild_2014_06_19_190626-2.jpg 290w, /wp-content/uploads/2014/06/Bild_2014_06_19_190626-2-281x300.jpg 281w" sizes="(max-width: 290px) 100vw, 290px" /></a></p>
<h2>Fazit</h2>
<p>Eine große Auflösung ist toll. Leider macht die Software noch nicht komplett mit. Das gilt nicht nur für den SAPGUI, auch andere Softwareprodukte haben Schwierigkeiten mit der hohen Auflösung. Die meisten Probleme sind eher kleiner Natur, jedoch stören sie für mein Empfinden den tollen Gesamteindruck eines so stark ausgestatteten Rechners. Immerhin möchte ich mit einem besseren Computer als vorher ein besseres Ergebnis haben und kein schlechteres. Ich kann also nicht empfehlen, einen Windows-Computer mit einer so hohen Auflösung zu kaufen. In vielen Fällen bringt dies Probleme mit sich. Es wird sicherlich noch ein paar Entwicklungszyklen brauchen, bis die Darstellung auf hochauflösenden Displays zufriedenstellend sein wird.</p>
<p>Die Skalierung des SAPGUI funktioniert in den meisten Fällen gut. Anwender dürften wenig Probleme haben. Ich kann mir gut vorstellen, dass SAP in den nächsten SAPGUI-Updates die ärgerlichsten Fehler beheben wird und vielleicht gibt es demnächst auch ein High-Definition-Theme von SAP?</p>
<p>Interessant wäre noch, wie sich das <a title="Corbu Design | SAP Design Guild" href="http://help.sap.com/saphelp_nw73ehp1/helpdata/de/13/20a20fb440434da696cb450d2a6bd3/content.htm">Corbu-Design</a> verhält.</p>
<h2>Problemlösung</h2>
<p>Nachdem die Darstellung des SAPGUI teilweise wirklich gruselig war und das Arbeiten im Falle der SE80 sogar stark behindert, habe ich mich entschieden, die Auflösung des Notebook-Displays einfach auf 1920&#215;1080 Pixel einzustellen. Die Auflösung des Bildschirms ist einerseits so hoch, dass ich keine Verzerrung und kein Verschwimmen bemerke und auf der anderen Seite ist sie hoch genug um viel Programm anzuzeigen. Es ist ein kleiner Wermutstropfen wenn ich meine Pferdestärken nicht ausfahren kann, aber das können mein Ego und ich verschmerzen&#8230;</p>
<h2>Nachtrag</h2>
<p>Wie bereits erwähnt wäre noch interessant, wie sich das Corbu-Theme verhält. Dies habe ich auch noch ausprobiert.</p>
<p>Leider sind auch hier &#8211; wie zu erwarten &#8211; die Icons unscharf, da sie nur in einer geringen Auflösung vorliegen:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180655.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4860 size-medium" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180655-300x175.jpg" alt="Corbu-Theme groß" width="300" height="175" srcset="/wp-content/uploads/2014/06/Bild_2014_06_23_180655-300x175.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_23_180655-1024x598.jpg 1024w, /wp-content/uploads/2014/06/Bild_2014_06_23_180655-624x364.jpg 624w, /wp-content/uploads/2014/06/Bild_2014_06_23_180655.jpg 1027w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>Auch der SAPGUI in der Version 740 bringt leider keine Besserung&#8230;</p>
<p>Der Beitrag <a href="/blog/high-definition-sap-ein-erfahrungsbericht/">High Definition SAP? Ein Erfahrungsbericht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/high-definition-sap-ein-erfahrungsbericht/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>Das ABAP Kochbuch</title>
		<link>/blog/abap-kochbuch/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 13 Jun 2013 16:20:03 +0000</pubDate>
				<category><![CDATA[Featured]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[ABAP Kochbuch]]></category>
		<category><![CDATA[programmierung]]></category>
		<category><![CDATA[Generic Object Services]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Änderungsbelege]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[Tools]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=675</guid>

					<description><![CDATA[<p>Das ABAP Kochbuch. Rezepte zum Nachkochen. Erstellen Sie eine komplette Ticket-Anwendung und lernen Sie dabei die nützlichsten Tools und die einfachsten Techniken für eigene Anwendungen kennen. Tipps von Profis für Profis und solche, die es werden wollen.</p>
<p>Der Beitrag <a href="/blog/abap-kochbuch/">Das ABAP Kochbuch</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Rezepte zum Nachkochen. Erstellen Sie eine komplette Ticket-Anwendung und lernen Sie dabei die nützlichsten Tools und die einfachsten Techniken für eigene Anwendungen kennen. Es beginnt mit Tabellenpflegedialogen und Viewclustern. Dann werden etliche Module mithilfe von Enjoy-Controls erstellt. Diese werden unter Verwendung des Schubladen-Controls und eines eigens erstellten Frameworks in den Ticketdialog eingebunden. Sie erfahren etwas über Änderungsbelege, Tree-Controls, Drag&#8217;n&#8217;Drop, Smart Forms und Generic Object Services. Und auch E-Mail-Versand, Dynamische Programmierung und Webservices werden angesprochen. Da ist eigentlich für jeden etwas dabei!</p>
<p><a href="http://www.amazon.de/dp/383622108X?tag=tricktresor07-21&amp;camp=2906&amp;creative=19474&amp;linkCode=as4&amp;creativeASIN=383622108X&amp;adid=04DF95BB2B3XJKZHC1XD&amp;&amp;ref-refURL=http%3A%2F%2Frcm-eu.amazon-adsystem.com%2Fe%2Fcm%3Flt1%3D_blank%26bc1%3D000000%26IS2%3D1%26bg1%3DFFFFFF%26fc1%3D000000%26lc1%3D0000FF%26t%3Dtricktresor07-21%26o%3D3%26p%3D8%26l%3Das4%26m%3Damazon%26f%3Difr%26ref%3Dss_til%26asins%3D383622108X"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4043" alt="ABAP Kochbuch" src="http://tricktresor.com/wp-content/uploads/2013/06/ABAP_Kochbuch-300x245.jpg" width="300" height="245" srcset="/wp-content/uploads/2013/06/ABAP_Kochbuch-300x245.jpg 300w, /wp-content/uploads/2013/06/ABAP_Kochbuch-624x511.jpg 624w, /wp-content/uploads/2013/06/ABAP_Kochbuch.jpg 976w" sizes="(max-width: 300px) 100vw, 300px" /></a><br />
<a title="Das ABAP Kochbuch bei Amazon kaufen" href="http://www.amazon.de/gp/product/383622108X/ref=as_li_ss_tl?ie=UTF8&amp;camp=1638&amp;creative=19454&amp;creativeASIN=383622108X&amp;linkCode=as2&amp;tag=tricktresor07-21" target="_blank">Das ABAP Kochbuch bei Amazon</a></p>
<p><a title="Powered by Inwerken AG" href="http://www.Inwerken.de/" target="_blank">Powered by Inwerken AG</a></p>
<p>Der Beitrag <a href="/blog/abap-kochbuch/">Das ABAP Kochbuch</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Event NODE_KEYPRESS</title>
		<link>/blog/event-node_keypress/</link>
					<comments>/blog/event-node_keypress/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 19 Aug 2011 09:49:29 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[keypress]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[node]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[expand_root_nodes]]></category>
		<category><![CDATA[Generell]]></category>
		<category><![CDATA[CL_GUI_SIMPLE_TREE]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=612</guid>

					<description><![CDATA[<p>Mit dem Ereignis NODE_KEYPRESS kann man im Programm auf verschiedene Tastendr&#252;cke reagieren: F1, F4, Enter, Einf&#252;gen, L&#246;schen, STRG+X, STRG+C, STRG+V.</p>
<p>Der Beitrag <a href="/blog/event-node_keypress/">Event NODE_KEYPRESS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mit dem Ereignis NODE_KEYPRESS kann man im Programm auf verschiedene Tastendrücke reagieren: F1, F4, Enter, Einfügen, Löschen, STRG+X, STRG+C, STRG+V.</p>
<p class="head1">Beschreibung</p>
<p>Das folgende Programm generiert einen kleinen Baum mithilfe des Control CL_GUI_SIMPLE_TREE. Bei Programmstart wird der Focus sofort auf das TreeControl gesetzt, so dass der Anwender mithilfe der Cursortasten in dem Baum navigieren kann.</p>
<p>Steht der Cursor auf einem Eintrag, so können die Tasten &#8220;F1&#8221;, &#8220;Enter&#8221; oder &#8220;Löschen&#8221; gedrückt werden. Das Ereignis NODE_KEYPRESS muss dafür natürlich registriert werden.</p>
<p>Zusätzlich müssen aber die Tasten, auf die der Tree reagieren soll auch noch bekannt gegeben werden. Das passiert mit der Methode ADD_KEY_STROKE der Klasse CL_GUI_SIMPLE_TREE.</p>
<p class="head1">Tasten</p>
<p>Folgende Tasten können registriert werden:</p>
<ul>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>F1</strong>: Funktionstaste F1</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>F4</strong>: Funktionstaste F4</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>INSERT</strong>: Taste Einfügen</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>DELETE</strong>: Taste Entfernen</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>ENTER</strong>: Enter-Taste</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>CUT</strong>: Strg+X</li>
<li>CL_TREE_CONTORL_BASE=&gt;KEY_<strong>COPY</strong>: Strg+C</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>PASTE</strong>: Strg+V</li>
</ul>
<p class="head1">Screenshot</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/Tree/Bild548.jpg" /><br />
Der kleine Demo-Baum</td>
</tr>
</tbody>
</table>
<p class="head1">Code</p>
<p class="sap1">REPORT  zz_tree_keypress_demo.<br />
<span style="color: #fb2412;">*** we use icons&#8230;</span><br />
TYPE-POOLS icon.</p>
<p class="sap1"><span style="color: #fb2412;">*** global data:</span><br />
<span style="color: #fb2412;">*== Custom Container</span><br />
DATA gr_cuco TYPE REF TO cl_gui_custom_container.<br />
<span style="color: #fb2412;">*== Simple Tree</span><br />
DATA gr_tree TYPE REF TO cl_gui_simple_tree.</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*       CLASS lcl_event_handler_class DEFINITION<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
CLASS lcl_event_handler_class DEFINITION.<br />
PUBLIC SECTION.<br />
CLASS-METHODS handle_keypress<br />
FOR EVENT node_keypress   OF cl_gui_simple_tree<br />
IMPORTING node_key key.<br />
ENDCLASS.                    &#8220;lcl_event_handler_class DEFINITION</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*       CLASS lcl_event_handler_class IMPLEMENTATION<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
CLASS lcl_event_handler_class IMPLEMENTATION.<br />
METHOD handle_keypress.<br />
IF node_key IS NOT INITIAL.<br />
<span style="color: #fb2412;">*** we only get a node id for active nodes (not disabled):</span><br />
MESSAGE i000(oo) WITH &#8216;Knoten:&#8217; node_key &#8216;- Taste:&#8217; key.<br />
ENDIF.<br />
ENDMETHOD.                    &#8220;message<br />
ENDCLASS.                    &#8220;lcl_event_handler_class IMPLEMENTATION</p>
<p class="sap1">START-OF-SELECTION.</p>
<p class="sap1"><span style="color: #fb2412;">*** Call screen</span><br />
CALL SCREEN 1.</p>
<p class="sap1">
<span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*  MODULE status_0001 OUTPUT<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
MODULE status_0001 OUTPUT.</p>
<p class="sap1">*** Set status<br />
SET PF-STATUS &#8216;STLI&#8217; OF PROGRAM &#8216;SAPMSSY0&#8217;.<br />
*** Init Controls<br />
PERFORM init_controls.</p>
<p class="sap1">ENDMODULE.                 &#8221; STATUS_0100  OUTPUT</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*  MODULE user_command_0001 INPUT<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
</span>MODULE user_command_0001 INPUT.</p>
<p class="sap1">  CASE sy-ucomm.<br />
WHEN &#8216;BACK&#8217; OR &#8216;%EX&#8217; OR &#8216;RW&#8217;.<br />
SET SCREEN 0.<br />
LEAVE SCREEN.<br />
ENDCASE.</p>
<p class="sap1">ENDMODULE.                 &#8221; USER_COMMAND_0100  INPUT</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  init_controls<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
* &#8211; create custom container<br />
* &#8211; create tree control<br />
* &#8211; register events<br />
* &#8211; build tree structure<br />
* &#8211; set focus on tree control<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
</span>FORM init_controls.</p>
<p class="sap1"><span style="color: #fb2412;">*** initial build up<br />
</span>  CHECK gr_cuco IS INITIAL.</p>
<p class="sap1"><span style="color: #fb2412;">*** create custom container</span><br />
CREATE OBJECT gr_cuco<br />
EXPORTING<br />
container_name = &#8216;TREE&#8217;.</p>
<p class="sap1"><span style="color: #fb2412;">*** Create simple tree; single node selection</span><br />
CREATE OBJECT gr_tree<br />
EXPORTING<br />
parent              = gr_cuco<br />
node_selection_mode = cl_gui_simple_tree=&gt;node_sel_mode_single.</p>
<p class="sap1"><span style="color: #fb2412;">*** register events</span><br />
PERFORM register_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** build tree structure</span><br />
PERFORM build_tree.</p>
<p class="sap1"><span style="color: #fb2412;">*** Set focus on tree control so that user instantly can<br />
*** navigate with cursor keys</span><br />
cl_gui_control=&gt;set_focus( gr_tree ).</p>
<p class="sap1">ENDFORM.                    &#8220;init_controls</p>
<p class="sap1">
<span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  register_events<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*</span><br />
FORM register_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** Data</span><br />
DATA: lt_events TYPE cntl_simple_events,<br />
ls_event  TYPE cntl_simple_event.</p>
<p class="sap1"><span style="color: #fb2412;">*** NODE_KEYPRESS-Event</span><br />
ls_event-eventid = cl_gui_simple_tree=&gt;eventid_node_keypress.<br />
APPEND ls_event TO lt_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** Register Event</span><br />
CALL METHOD gr_tree-&gt;set_registered_events<br />
EXPORTING<br />
events = lt_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** tell tree which keys to mention for NODE_KEPRESS:<br />
*==&gt; ENTER</span><br />
gr_tree-&gt;add_key_stroke( cl_gui_simple_tree=&gt;key_enter )  .<br />
<span style="color: #fb2412;">*==&gt; F1</span><br />
gr_tree-&gt;add_key_stroke( cl_gui_simple_tree=&gt;key_f1 )  .<br />
<span style="color: #fb2412;">*==&gt; DELETE</span><br />
gr_tree-&gt;add_key_stroke( cl_gui_simple_tree=&gt;key_delete )  .</p>
<p class="sap1"><span style="color: #fb2412;">*** Set handler for registered events</span><br />
SET HANDLER lcl_event_handler_class=&gt;handle_keypress FOR gr_tree.</p>
<p class="sap1">ENDFORM.                    &#8220;register_events</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  build_tree<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
* Build static tree structure:<br />
* Group<br />
*  +- ONE<br />
*  +- TWO<br />
* THREE<br />
* FOUR<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
FORM build_tree.</p>
<p class="sap1"><span style="color: #fb2412;">*** Data</span><br />
DATA ls_node  TYPE mtreesnode.<br />
DATA lt_nodes TYPE STANDARD TABLE OF mtreesnode.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;Group&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;GROUP1&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-disabled  = &#8216;X&#8217;.<br />
ls_node-isfolder  = &#8216;X&#8217;.<br />
ls_node-n_image   = icon_activity_group.<br />
ls_node-exp_image = icon_activity_group.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_intensified.<br />
ls_node-text      = &#8216;Gruppe&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;ONE&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;ONE&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-relatkey  = &#8216;GROUP1&#8217;.<br />
ls_node-n_image   = icon_led_yellow.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_intensified.<br />
ls_node-text      = &#8216;Eins&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;TWO&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;TWO&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-relatkey  = &#8216;GROUP1&#8217;.<br />
ls_node-n_image   = icon_led_green.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_default.<br />
ls_node-text      = &#8216;ZWEI&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;THREE&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;THREE&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-disabled  = &#8216;X&#8217;.<br />
ls_node-n_image   = icon_led_inactive.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_inactive.<br />
ls_node-text      = &#8216;DREI&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;FOUR&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;FOUR&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-disabled  = space.<br />
ls_node-n_image   = icon_led_red.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_intensifd_critical.<br />
ls_node-text      = &#8216;VIER&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Add nodes</span><br />
CALL METHOD gr_tree-&gt;add_nodes<br />
EXPORTING<br />
table_structure_name = &#8216;MTREESNODE&#8217;<br />
node_table           = lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Expand all root nodes</span><br />
gr_tree-&gt;expand_root_nodes( ).</p>
<p class="sap1">ENDFORM.                    &#8220;init_controls</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/event-node_keypress/">Event NODE_KEYPRESS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/event-node_keypress/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Vererbungsübersicht</title>
		<link>/blog/vererbungsuebersicht/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 05 Apr 2011 14:10:32 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[Code Inspector]]></category>
		<category><![CDATA[RS_TOOL_ACCESS]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[CL_GUI_SIMPLE_TREE]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[vererbung]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[SE24]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=585</guid>

					<description><![CDATA[<p>Folgendes kleines Programm zeigt die Vererbungshierarchien von Klassen auf. Die Root- oder Super-Klasse wird auf der obersten Ebene angezeigt. Darunter werden die von ihr erbenden Klassen aufgelistet. Mit einem Doppelklick auf eine Klasse wird in den Class Builder (SE24) verzweigt.</p>
<p>Der Beitrag <a href="/blog/vererbungsuebersicht/">Vererbungsübersicht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Folgendes kleine Programm zeigt die Vererbungshierarchien von Klassen auf. Die Root- oder Super-Klasse wird auf der obersten Ebene angezeigt. Darunter werden die von ihr erbenden Klassen aufgelistet. Mit einem Doppelklick auf eine Klasse wird in den Class Builder (SE24) verzweigt.</p>



<p>Beschreibung</p>



<p>Die Vererbungsübersicht kann man sich normalerweise auch in der SE80 anschauen. Hier ist jedoch immer ein &#8220;Zwischenschritt&#8221; über den Punkt &#8220;Superklassen&#8221; oder &#8220;Subklassen&#8221; notwendig. Dieses Programm liefert eine direkt Übersicht:</p>



<figure class="wp-block-table"><table><tbody><tr><td><img decoding="async" src="/wp-content/uploads/tt_images/Bild097.jpg" alt=""><br>Übersicht über alle Unterklassen von &#8220;CL_CI_TEST_ROOT&#8221;</td></tr></tbody></table></figure>



<h2 class="wp-block-heading" id="features">Features</h2>



<p>Kundeneigene Klassen (Z- und /-Namensraum) werden hervor gehoben.</p>



<p>Doppelklick auf eine Klasse verzweigt in den Class Builder (Transaktion SE24).</p>



<h2 class="wp-block-heading" id="interessante-klassen">Interessante Klassen</h2>



<p>Folgende Klassen sind interessant, da sie eine große &#8220;Erbengemeinschaft&#8221; haben:</p>



<ul><li><div class="text1">IF_CI_TEST (Interface von Code Inspector Prüfungen)</div></li><li>CL_GUI_OBJECT </li><li><div class="text1">CL_GUI_CONTROL</div></li><li>CL_GUI_CONTAINER</li><li>CL_ABAP_TYPEDESCR </li><li>Ausnahmeklassen <ul><li>CX_STATIC_CHECK</li><li>CX_DYNAMIC_CHECK</li><li>CX_NO_CHECK </li></ul></li></ul>



<h2 class="wp-block-heading" id="coding">Coding</h2>



<div class="wp-block-group"><div class="wp-block-group__inner-container is-layout-flow wp-block-group-is-layout-flow">
<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*<br>*&amp; Report&nbsp; Z_INHERITING_CLASSES<br>*&amp;---------------------------------------------------------------------*<br>* displays all inheriting classes of a super class in simple tree.<br>* double click on class calls SE24 for this class in display mode.<br>*----------------------------------------------------------------------*<br></span>REPORT Z_INHERITING_CLASSES.</pre>



<p>CLASS lcl_application DEFINITION DEFERRED.</p>



<pre class="wp-block-preformatted">DATA go_application&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE REF TO lcl_application.<br>DATA gt_classes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF seoclsname.<br>DATA gt_metarel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF seometarel.<br>DATA gs_metarel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE seometarel.<br>DATA go_tree&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE REF TO cl_gui_simple_tree.<br>DATA gt_nodes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF mtreesnode.<br>DATA gs_node&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE mtreesnode.<br>DATA gt_expand_nodes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF lvc_nkey.<br>DATA gv_top_node&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE lvc_nkey.<br>DATA gv_level&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE i.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*** SELECTION SCREEN ***<br>*==&gt; Super class name (root)<br></span>PARAMETERS p_class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE seoclsname DEFAULT 'IF_CI_TEST'.<br><span style="color: #fb2412;">*==&gt; Expand up to this level<br></span>PARAMETERS p_level&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DEFAULT 3.</pre>



<pre class="wp-block-preformatted">AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_class.<br>CALL FUNCTION 'F4_DD_ALLTYPES'<br>EXPORTING<br>object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = p_class<br>suppress_selection&nbsp;&nbsp; = 'X'<br>display_only&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = ' '<br>only_types_for_clifs = 'X'<br>IMPORTING<br>RESULT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = p_class.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*----------------------------------------------------------------------*<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CLASS LCL_APPLICATION DEFINITION<br>*----------------------------------------------------------------------*<br></span>CLASS lcl_application DEFINITION.</pre>



<pre class="wp-block-preformatted">&nbsp; PUBLIC SECTION.<br>METHODS:<br>handle_node_double_click<br>FOR EVENT node_double_click<br>OF cl_gui_simple_tree<br>IMPORTING node_key.</pre>



<pre class="wp-block-preformatted">ENDCLASS.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "LCL_APPLICATION DEFINITION</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*----------------------------------------------------------------------*<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CLASS LCL_APPLICATION IMPLEMENTATION<br>*----------------------------------------------------------------------*<br></span>CLASS lcl_application IMPLEMENTATION.</pre>



<pre class="wp-block-preformatted">  METHOD  handle_node_double_click.
    DATA lv_classname TYPE seoclsname.
    READ TABLE gt_classes INTO lv_classname INDEX node_key.</pre>



<pre class="wp-block-preformatted">    CALL FUNCTION 'RS_TOOL_ACCESS'
      EXPORTING
        operation   = 'SHOW'
        object_name = lv_classname
        object_type = 'CLAS'.</pre>



<pre class="wp-block-preformatted">&nbsp; ENDMETHOD.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "HANDLE_NODE_DOUBLE_CLICK</pre>



<pre class="wp-block-preformatted">ENDCLASS.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "LCL_APPLICATION IMPLEMENTATION</pre>



<pre class="wp-block-preformatted">START-OF-SELECTION.</pre>



<pre class="wp-block-preformatted">&nbsp; PERFORM do_read USING p_class.</pre>



<pre class="wp-block-preformatted">  CHECK gt_metarel IS NOT INITIAL.
  cl_abap_list_layout=>suppress_toolbar( ).</pre>



<pre class="wp-block-preformatted">  WRITE 1.
  INSERT p_class INTO gt_classes INDEX 1.
  PERFORM init_tree.
  PERFORM add_node USING p_class space.
  PERFORM display_tree.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*<br>*&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form&nbsp; do_read<br>*&amp;---------------------------------------------------------------------*<br></span>FORM do_read USING iv_classname TYPE seoclsname.</pre>



<pre class="wp-block-preformatted">&nbsp; DATA lt_metarel TYPE STANDARD TABLE OF seometarel.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*** Select all inheriting classes&nbsp;</span><br>SELECT * FROM seometarel INTO TABLE lt_metarel<br>WHERE refclsname = iv_classname.</pre>



<pre class="wp-block-preformatted">  LOOP AT lt_metarel INTO gs_metarel.
<span style="color: #fb2412;">    "collect class for having a node name later on (TABIX)</span>
    COLLECT gs_metarel-clsname INTO gt_classes.
    <span style="color: #fb2412;">"recursive call for class</span>
    PERFORM do_read USING gs_metarel-clsname.
  ENDLOOP.</pre>



<pre class="wp-block-preformatted">&nbsp; APPEND LINES OF lt_metarel TO gt_metarel.</pre>



<pre class="wp-block-preformatted">ENDFORM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "do_read</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*<br>*&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form&nbsp; init_tree<br>*&amp;---------------------------------------------------------------------*<br></span>FORM init_tree.</pre>



<pre class="wp-block-preformatted">  DATA events TYPE cntl_simple_events.
  DATA event  TYPE cntl_simple_event.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "Create simple tree</span>
  CREATE OBJECT go_tree
    EXPORTING
      parent              = cl_gui_container=>screen0
      node_selection_mode = cl_gui_simple_tree=>node_sel_mode_single.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "Create application handler</span>
  CREATE OBJECT go_application.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "define event "node double_click"
</span>  event-eventid    = cl_gui_simple_tree=>eventid_node_double_click.
  event-appl_event = 'X'. " process PAI if event occurs
  APPEND event TO events.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "register event "Double click"
</span>  go_tree->set_registered_events( events ).</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "assign event handlers in the application class
</span>  SET HANDLER go_application->handle_node_double_click FOR go_tree.</pre>



<pre class="wp-block-preformatted">ENDFORM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "init_tree</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*
*&amp;      Form  add_node
*&amp;---------------------------------------------------------------------*
</span>FORM add_node 
  USING 
    iv_classname TYPE seoclsname
    iv_refclass  TYPE seoclsname.</pre>



<pre class="wp-block-preformatted">  ADD 1 TO gv_level.
  CLEAR gs_node.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "get key for node</span>
  READ TABLE gt_classes TRANSPORTING NO FIELDS WITH KEY iv_classname.
  gs_node-node_key = sy-tabix.</pre>



<pre class="wp-block-preformatted">  IF iv_refclass IS INITIAL.
    CLEAR gs_node-relatkey.
    CLEAR gs_node-relatship.
  ELSE.
<span style="color: #fb2412;">  "get key of related class</span>
    READ TABLE gt_classes TRANSPORTING NO FIELDS WITH KEY iv_refclass.
    gs_node-relatkey = sy-tabix.
    gs_node-relatship = cl_gui_simple_tree=>relat_last_child.
  ENDIF.</pre>



<pre class="wp-block-preformatted">&nbsp; IF gv_level &lt;= p_level.<br><span style="color: #fb2412;">*** Expand this level</span><br>IF gt_expand_nodes IS INITIAL.<br><span style="color: #fb2412;">*** remember this node for&nbsp;setting the top node<br></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gv_top_node = gs_node-node_key.<br>ENDIF.<br><span style="color: #fb2412;">*** remember this node for later expansion</span><br>APPEND gs_node-node_key TO gt_expand_nodes.<br>ENDIF.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*** add node "class"</span><br>gs_node-isfolder = 'X'.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " a folder.<br>gs_node-text = iv_classname.<br>CASE iv_classname(1).<br>WHEN 'Z'.<br><span style="color: #fb2412;">*** highlight customer classes (Z)</span><br>gs_node-style = cl_gui_simple_tree=&gt;style_emphasized_negative.<br>WHEN '/'.<br><span style="color: #fb2412;">*** highlight customer classes (/xyz/)</span><br>gs_node-style = cl_gui_simple_tree=&gt;style_emphasized_positive.<br>ENDCASE.<br>APPEND gs_node TO gt_nodes.</pre>



<pre class="wp-block-preformatted">  LOOP AT gt_metarel INTO gs_metarel WHERE refclsname = iv_classname.
    PERFORM add_node USING gs_metarel-clsname gs_metarel-refclsname.
  ENDLOOP.</pre>



<pre class="wp-block-preformatted">&nbsp; SUBTRACT 1 FROM gv_level.</pre>



<p>ENDFORM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;add_node</p>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*<br>*&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form&nbsp; display_tree<br>*&amp;---------------------------------------------------------------------*<br></span>FORM display_tree.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "add nodes</span>
  go_tree->add_nodes(
    table_structure_name = 'MTREESNODE'
    node_table           = gt_nodes ).</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "Expand up to desired level</span>
  go_tree->expand_nodes(
    EXPORTING
      node_key_table = gt_expand_nodes
    EXCEPTIONS
     OTHERS         = 5).</pre>



<pre class="wp-block-preformatted">  <span style="color: #fb2412;">"set top node</span>
  go_tree->set_top_node( node_key = gv_top_node ).</pre>



<pre class="wp-block-preformatted">ENDFORM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "display_tree</pre>
</div></div>
<p>Der Beitrag <a href="/blog/vererbungsuebersicht/">Vererbungsübersicht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Grafischer Belegfluß</title>
		<link>/blog/grafischer-belegfluss/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 19 Mar 2008 16:59:48 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Vertrieb]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Verkauf]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[Hilfsprogramme]]></category>
		<category><![CDATA[Container]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=467</guid>

					<description><![CDATA[<p>Auf http://www.erpgenie.com/ wurde ein Programm bereitgestellt, mit dem man den Belegfluss zu Belegen grafisch darstellen kann. Es ist ein sehr nettes Tool, das vielleicht bei der täglichen Arbeit weiter hilft.</p>
<p>Der Beitrag <a href="/blog/grafischer-belegfluss/">Grafischer Belegfluß</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Auf http://www.erpgenie.com/ wurde ein Programm bereitgestellt, mit dem man den Belegfluss zu Belegen grafisch darstellen kann. Es ist ein sehr nettes Tool, das vielleicht bei der täglichen Arbeit weiter hilft.</p>
<p class="text1">Das hier vorgestellte Coding ist leicht verschlankt. Eine Version mit Doppelklick-Funktionalität und Screenshots sehen Sie bei <a title="Sales Order Workflow | ERP Genie" href="http://www.erpgenie.com/sap/abap/SalesOrderFlow.htm" target="_blank">ERPgenie</a>.</p>
<h2>Screenshot</h2>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/screenshots/Bild006.jpg" /> Belegfluss für Aufträge</p>
<h2 class="head1">Coding</h2>
<pre>*Sales Order Flow - Tree Report
REPORT z_sales_tree_rpt .
*http://www.erpgenie.com/sap/abap/SalesOrderFlow.htm

* Table Definitions
TABLES: vbak,            "Sales Document: Header Data
        vbfa.            "Sales Document Flow

* Type definitions
TYPES: BEGIN OF itab_type,
         folder   TYPE flag,
         node_key TYPE mtreeitm,
         relatkey TYPE tv_nodekey,
         type     LIKE vbak-vbtyp,
         vbeln    LIKE vbak-vbeln,
         posnn    LIKE vbfa-posnn,
         rfmng(10) TYPE c,
         rfwrt(12) TYPE c,
       END OF itab_type.

TYPES: BEGIN OF sel_type,
         vbeln    LIKE vbak-vbeln,
         vbtyp    LIKE vbak-vbtyp,
       END OF sel_type.

* Data Definitions
DATA: okcode    LIKE sy-ucomm,
      itab_data TYPE itab_type OCCURS 0,
      itab_selection TYPE sel_type OCCURS 0.
DATA: BEGIN OF it_vbfa OCCURS 0.
        INCLUDE STRUCTURE vbfa.
DATA: END OF it_vbfa,

      is_vbfa   LIKE LINE OF it_vbfa,
      is_vbc06  LIKE vbco6,
      wa_vbelv  LIKE vbfa-vbelv,
      wj_vbelv  LIKE vbfa-vbelv,
      wa_posnv  LIKE vbfa-posnv,
      wj_posnv  LIKE vbfa-posnv,
      wa_nodekey TYPE tv_nodekey,
      t_screen(3) TYPE c,
      t_dynnr LIKE sy-dynnr,
      wa_data   TYPE itab_type.

* Tree list definitions

CLASS cl_gui_cfw      DEFINITION LOAD.

TYPES: item_table_type LIKE STANDARD TABLE OF mtreeitm  WITH DEFAULT KEY.

DATA: g_custom_container TYPE REF TO cl_gui_custom_container,
      g_tree             TYPE REF TO cl_gui_list_tree,
      g_ok_code          TYPE sy-ucomm.

*******************************************************************
*  Create a tree report of sales orders to deliveries to invoices *
*******************************************************************

SELECTION-SCREEN BEGIN OF BLOCK a0 WITH FRAME TITLE text-001.

SELECT-OPTIONS:
  s_vbeln FOR vbak-vbeln,
  s_erdat FOR vbak-erdat,
  s_ernam FOR vbak-ernam.
PARAMETERS: p_vbtyp LIKE vbfa-vbtyp_n DEFAULT 'C'.

SELECTION-SCREEN END OF BLOCK a0.

*----------------------------------------------------------------------*
* Start of Selection
*----------------------------------------------------------------------*
START-OF-SELECTION.

  REFRESH: itab_data, itab_selection.
  PERFORM update_selection_table TABLES itab_selection.
  PERFORM create_input_table TABLES itab_data
                                    itab_selection.

  IF NOT itab_data IS INITIAL.
    CALL SCREEN 2000.
  ENDIF.

END-OF-SELECTION.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  create_and_init_tree
*&amp;---------------------------------------------------------------------*
FORM create_and_init_tree.

  DATA: node_table TYPE treev_ntab,
        item_table TYPE item_table_type.

* create a container for the tree control
  CREATE OBJECT g_custom_container
    EXPORTING
      container_name = 'TREE_CONTROL'.

* create a list tree control
  CREATE OBJECT g_tree
    EXPORTING
      parent              = g_custom_container
      node_selection_mode = cl_gui_list_tree=&gt;node_sel_mode_single
      item_selection     = 'X'
      with_headers       = ' '.

  PERFORM build_node_and_item_table USING node_table item_table.

  CALL METHOD g_tree-&gt;add_nodes_and_items
    EXPORTING
      node_table                     = node_table
      item_table                     = item_table
      item_table_structure_name      = 'MTREEITM'.

ENDFORM.                    " create_and_init_tree

*&amp;---------------------------------------------------------------------*
*&amp;      Form  build_node_and_item_table
*&amp;---------------------------------------------------------------------*
FORM build_node_and_item_table  USING
                                       node_table TYPE treev_ntab
                                       item_table TYPE item_table_type.
  DATA: node TYPE treev_node,
        item TYPE mtreeitm.

* Build the node and item table.
  LOOP AT itab_data INTO wa_data.
    CLEAR node.

    node-node_key = wa_data-node_key-node_key.
    node-relatkey = wa_data-relatkey.
    node-isfolder = wa_data-folder.
    IF wa_data-relatkey IS INITIAL.
      CLEAR: node-relatship,
             node-exp_image,
             node-expander.
      node-hidden = ' '.
      node-disabled = ' '.
    ELSE.
      node-relatship = cl_gui_list_tree=&gt;relat_last_child.
    ENDIF.
    APPEND node TO node_table.

* Update Items
    CLEAR item.
    item-node_key   = wa_data-node_key-node_key.
    item-item_name  = '1'.
    item-length     = 10.
    item-class      = cl_gui_list_tree=&gt;item_class_text. " Text Item
    item-alignment  = cl_gui_list_tree=&gt;align_auto.
    item-font       = cl_gui_list_tree=&gt;item_font_prop.
    CASE wa_data-type.
      WHEN 'C'.
        item-text = 'Order'.
      WHEN 'J'.
        item-text = 'Delivery'.
      WHEN 'M'.
        item-text = 'Invoice'.
      WHEN '+'.
        item-text = 'Payment'.
      WHEN 'Q'.
        item-text = 'Warehouse Xfer'.
      WHEN 'R'.
        item-text = 'Goods Mvmt'.
      WHEN 'H'.
        item-text = 'Return Gds'.
    ENDCASE.
    APPEND item TO item_table.

    CLEAR item.
    item-node_key   = wa_data-node_key-node_key.
    item-item_name  = '2'.
    item-length     = 10.
    item-class      = cl_gui_list_tree=&gt;item_class_text. " Text Item
    item-alignment  = cl_gui_list_tree=&gt;align_auto.
    item-font       = cl_gui_list_tree=&gt;item_font_prop.
    item-text       = wa_data-vbeln.
    APPEND item TO item_table.

    CLEAR item.
    item-node_key   = wa_data-node_key-node_key.
    item-item_name  = '3'.
    item-length     = 6.
    item-class      = cl_gui_list_tree=&gt;item_class_text. " Text Item
    item-alignment  = cl_gui_list_tree=&gt;align_auto.
    item-font       = cl_gui_list_tree=&gt;item_font_prop.
    item-text       = wa_data-posnn.
    APPEND item TO item_table.

    CLEAR item.
    item-node_key   = wa_data-node_key-node_key.
    item-item_name  = '4'.
    item-length     = 10.
    item-class      = cl_gui_list_tree=&gt;item_class_text. " Text Item
    item-alignment  = cl_gui_list_tree=&gt;align_auto.
    item-font       = cl_gui_list_tree=&gt;item_font_prop.
    item-text       = wa_data-rfmng.
    APPEND item TO item_table.

    CLEAR item.
    item-node_key   = wa_data-node_key-node_key.
    item-item_name  = '5'.
    item-length     = 10.
    item-class      = cl_gui_list_tree=&gt;item_class_text. " Text Item
    item-alignment  = cl_gui_list_tree=&gt;align_auto.
    item-font       = cl_gui_list_tree=&gt;item_font_prop.
    item-text       = wa_data-rfwrt.
    APPEND item TO item_table.

  ENDLOOP.

ENDFORM.                    " build_node_and_item_table

*&amp;---------------------------------------------------------------------*
*&amp;      Form  create_input_table
*&amp;---------------------------------------------------------------------*
FORM create_input_table TABLES   p_itab_data LIKE itab_data
                                 p_itab_selection LIKE itab_selection.

  DATA: l_tabix LIKE sy-tabix,
        lm_tabix LIKE sy-tabix,
        BEGIN OF wl_data,
          vbeln   LIKE vbfa-vbeln,
          posnn   LIKE vbfa-posnn,
        END OF  wl_data,
        t_counter(4) TYPE n,
        t_parent(4) TYPE c,
        t_parent1(4) TYPE c,
        t_exit TYPE flag,
        is_del_data LIKE LINE OF itab_data,
        it_inv_data TYPE itab_type OCCURS 0.

  t_counter = 1.
  LOOP AT p_itab_selection.

    CLEAR: t_parent, t_parent1, t_exit.
    REFRESH it_vbfa.
    is_vbc06-vbeln = p_itab_selection-vbeln.
    CALL FUNCTION 'RV_ORDER_FLOW_INFORMATION'
      EXPORTING
        aufbereitung        = '2'
        comwa               = is_vbc06
        nachfolger          = 'X'
        n_stufen            = '50'
        vorgaenger          = 'X'
        v_stufen            = '50'
      TABLES
        vbfa_tab            =  it_vbfa
      EXCEPTIONS
        no_vbfa             = 1
        no_vbuk_found       = 2
        OTHERS              = 3.

    CLEAR: wa_data.
    wa_data-folder = 'X'.
    WRITE t_counter TO wa_data-node_key-node_key..
    wa_data-relatkey = t_parent.
    wa_data-type     = p_itab_selection-vbtyp.
    wa_data-vbeln    = p_itab_selection-vbeln.
    wa_data-posnn    = '0'.
    APPEND wa_data TO p_itab_data.
    t_parent = t_counter.
    ADD 1 TO t_counter.

* Find any deliveries for this order
    LOOP AT it_vbfa WHERE vbtyp_n = 'J'.      " Delivery

      CLEAR: wa_data.
      wa_data-folder = 'X'.
      WRITE t_counter TO wa_data-node_key-node_key..
      wa_data-relatkey = t_parent.
      wa_data-type     = it_vbfa-vbtyp_n.
      wa_data-vbeln    = it_vbfa-vbeln.
      wa_data-posnn    = it_vbfa-posnn.
      wa_data-rfmng    = it_vbfa-rfmng.
      is_del_data      = wa_data.
*
      t_parent1 = t_counter.
      ADD 1 TO t_counter.
      wa_vbelv  = it_vbfa-vbeln.
      wa_posnv  = it_vbfa-posnn.
      l_tabix   = sy-tabix.
* Find any invoices Warehouse xfers or Goods Movements for this delivery
      REFRESH: it_inv_data.
      LOOP AT it_vbfa WHERE vbelv = wa_vbelv
                      AND   posnv = wa_posnv.

        CASE it_vbfa-vbtyp_n.
          WHEN 'M'.    "Invoice
            CLEAR: wa_data.
            wa_data-folder = ' '.
            wa_data-node_key-node_key = t_counter.
            wa_data-relatkey = t_parent1.
            wa_data-type     = it_vbfa-vbtyp_n.
            wa_data-vbeln    = it_vbfa-vbeln.
            wa_data-posnn    = it_vbfa-posnn.
            wa_data-rfmng    = it_vbfa-rfmng.
            wa_data-rfwrt    = it_vbfa-rfwrt.
            APPEND wa_data TO it_inv_data.
            wj_vbelv         = it_vbfa-vbeln.
            wj_posnv         = it_vbfa-posnn.
            wa_nodekey       = wa_data-node_key.
            DESCRIBE TABLE it_inv_data LINES lm_tabix.
            ADD 1 TO t_counter.
            PERFORM get_payment  TABLES it_inv_data USING t_counter.
            PERFORM get_returns  TABLES it_inv_data USING t_counter.
            DESCRIBE TABLE it_inv_data LINES l_tabix.
            IF l_tabix &gt; lm_tabix.
              READ TABLE it_inv_data INDEX lm_tabix INTO wa_data.
              wa_data-folder = 'X'.
             MODIFY it_inv_data INDEX lm_tabix FROM wa_data.
            ENDIF.

          WHEN 'Q' OR 'R'.    " WMS transfer, or Goods Mvmt
            CLEAR: wa_data.
            wa_data-folder = ' '.
            wa_data-node_key-node_key = t_counter.
            wa_data-relatkey = t_parent1.
            wa_data-type     = it_vbfa-vbtyp_n.
            wa_data-vbeln    = it_vbfa-vbeln.
            wa_data-posnn    = it_vbfa-posnn.
            wa_data-rfmng    = it_vbfa-rfmng.
            APPEND wa_data TO it_inv_data.
            ADD 1 TO t_counter.
          WHEN OTHERS.
        ENDCASE.

      ENDLOOP.              " finding any matching invoices
      IF it_inv_data IS INITIAL.
        is_del_data-folder = ' '.
      ENDIF.
     APPEND is_del_data TO p_itab_data.
     APPEND LINES OF it_inv_data TO p_itab_data.
      REFRESH: it_inv_data.
    ENDLOOP.                " finding any deliveries

  ENDLOOP.
  CLEAR: t_parent, t_parent1, t_exit.

ENDFORM.                    " create_input_table

*&amp;---------------------------------------------------------------------*
*&amp;      Form  update_selection_table
*&amp;---------------------------------------------------------------------*
FORM update_selection_table TABLES  itab_selection.

  IF NOT s_ernam IS INITIAL OR
     NOT s_erdat IS INITIAL OR
     NOT p_vbtyp IS INITIAL OR
     NOT s_vbeln IS INITIAL.

    SELECT vbeln vbtyp INTO CORRESPONDING FIELDS OF
    TABLE  itab_selection
    FROM   vbak
    WHERE vbeln IN s_vbeln AND
          erdat IN s_erdat AND
          ernam IN s_ernam AND
          vbtyp =  p_vbtyp.
  ENDIF.

ENDFORM.                    " update_selection_table

*&amp;---------------------------------------------------------------------*
*&amp;      Form  get_payment
*&amp;---------------------------------------------------------------------*
FORM get_payment  TABLES it_inv_data USING pt_counter .

  LOOP AT it_vbfa WHERE vbelv = wj_vbelv
                  AND   posnv = wj_posnv
                  AND   vbtyp_n = '+'.
    wa_data-folder = ' '.
    wa_data-relatkey = wa_nodekey.
    wa_data-node_key-node_key = pt_counter.
    wa_data-type     = it_vbfa-vbtyp_n.
    wa_data-vbeln    = it_vbfa-vbeln.
    wa_data-posnn    = it_vbfa-posnn.
    wa_data-rfmng    = it_vbfa-rfmng.
    wa_data-rfwrt    = it_vbfa-rfwrt.
    APPEND wa_data TO it_inv_data.
    ADD 1 TO pt_counter.
  ENDLOOP.

ENDFORM.                    " get_payment

*&amp;---------------------------------------------------------------------*
*&amp;      Form  get_returns
*&amp;---------------------------------------------------------------------*
FORM get_returns   TABLES it_inv_data USING pt_counter .

  DATA: ld_rfwrt(11) TYPE c,
        ld_tabix LIKE sy-tabix.

  LOOP AT it_vbfa WHERE vbelv = wj_vbelv
                  AND   posnv = wj_posnv
                  AND   vbtyp_n = 'H'.
    ld_tabix         = sy-tabix.
    wa_data-folder   = ' '.
    wa_data-relatkey = wa_nodekey.
    wa_data-node_key-node_key = pt_counter.
    wa_data-type     = it_vbfa-vbtyp_n.
    wa_data-vbeln    = it_vbfa-vbeln.
    wa_data-posnn    = it_vbfa-posnn.
    wa_data-rfmng    = it_vbfa-rfmng.
    ld_rfwrt         = it_vbfa-rfwrt.
    CONCATENATE ld_rfwrt '-' INTO  ld_rfwrt.
    wa_data-rfwrt    = ld_rfwrt.
    APPEND wa_data TO it_inv_data.
    ADD 1 TO pt_counter.
  ENDLOOP.

ENDFORM.                    "get_returns

*&amp;---------------------------------------------------------------------*
*&amp;      Module  STATUS_2000  OUTPUT
*&amp;---------------------------------------------------------------------*
MODULE status_2000 OUTPUT.

  SET PF-STATUS 'Z_SALES_TREE_2000'.
  SET TITLEBAR 'Z_SALES_TREE_2000'.

ENDMODULE.                 " STATUS_2000  OUTPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  init_data_2000  OUTPUT
*&amp;---------------------------------------------------------------------*
MODULE init_data_2000 OUTPUT.

  IF g_tree IS INITIAL.
    PERFORM create_and_init_tree.
  ENDIF.

ENDMODULE.                    "init_data_2000 OUTPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_2000  INPUT
*&amp;---------------------------------------------------------------------*
MODULE user_command_2000 INPUT.

  DATA: return_code TYPE i.

  CALL METHOD cl_gui_cfw=&gt;dispatch
    IMPORTING
      return_code = return_code.

  IF return_code &lt;&gt; cl_gui_cfw=&gt;rc_noevent.
    CLEAR okcode.
    EXIT.
  ENDIF.

  CASE okcode.
    WHEN 'EXIT' OR 'RETURN'. " Finish program
      IF NOT g_custom_container IS INITIAL.
        " destroy tree container (detroys contained tree control, too)
        CALL METHOD g_custom_container-&gt;free
          EXCEPTIONS
            cntl_system_error = 1
            cntl_error        = 2.
        IF sy-subrc &lt;&gt; 0.
          MESSAGE a000(tree_control_msg).
        ENDIF.
        CLEAR g_custom_container.
        CLEAR g_tree.
      ENDIF.
      LEAVE TO SCREEN 0.
  ENDCASE.

  CLEAR okcode.

ENDMODULE.                 " USER_COMMAND_2000  INPUT</pre>
<p>Der Beitrag <a href="/blog/grafischer-belegfluss/">Grafischer Belegfluß</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>The Tao Of Programming ~ English Version</title>
		<link>/blog/english-version/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 17 Mar 2004 01:05:49 +0000</pubDate>
				<category><![CDATA[Das Tao der Programmierung]]></category>
		<category><![CDATA[Office]]></category>
		<category><![CDATA[tao]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Jobs]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=220</guid>

					<description><![CDATA[<p>Die englische Version des "Tao of Programming"</p>
<p>Der Beitrag <a href="/blog/english-version/">The Tao Of Programming ~ English Version</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Die englische Originalversion des &#8220;Tao Of Programming&#8221;</p>
<p class="head1" align="center">The  Tao  Of  Programming</p>
<p class="text1" align="center">Translated   By Geoffrey James</p>
<p class="head1" align="center">Table of Contents</p>
<p class="text1">Book  1   &#8212;   The Silent Void</p>
<p>Book  2   &#8212;   The Ancient Masters</p>
<p>Book  3   &#8212;   Design</p>
<p>Book  4   &#8212;   Coding</p>
<p>Book  5   &#8212;   Maintenance</p>
<p>Book  6   &#8212;   Management</p>
<p>Book  7   &#8212;   Corporate Wisdom</p>
<p>Book  8   &#8212;   Hardware and Software</p>
<p>Book  9   &#8212;   Epilogue</p>
<p class="head1" align="center">The Silent Void  &#8211; Book One</p>
<p align="left">                   Thus spake the master programmer:<br />
&#8220;When you have learned to snatch the error code from the trap<br />
frame, it will be time for you to leave.&#8221;</p>
<p align="left">                                  1.1</p>
<p> Something mysterious is formed, born in the silent void. Waiting alone<br />
and unmoving, it is at once still and yet in constant motion. It is<br />
the source of all programs. I do not know its name, so I will call it<br />
the Tao of Programming.</p>
<p>If the Tao is great, then the operating system is great. If the<br />
operating system is great, then the compiler is great. If the compiler<br />
is great, then the application is great. The user is pleased and their<br />
is harmony in the world.</p>
<p>The Tao of Programming flows far away and returns on the wind of<br />
morning.</p>
<p>1.2</p>
<p>The Tao gave birth to machine language. Machine language gave birth to<br />
the assembler.</p>
<p>The assembler gave birth to the compiler. Now their are ten thousand<br />
languages.</p>
<p>Each language has its purpose, however humble. Each language expresses<br />
the Yin and Yang of software. Each language has its place within the<br />
Tao.</p>
<p>But do not program in COBOL if you can avoid it.</p>
<p>1.3</p>
<p>In the beginning was the Tao. The Tao gave birth to Space and Time.<br />
Therefore Space and Time are Yin and Yang of programming.</p>
<p>Programmers that do not comprehend the Tao are always running out of<br />
time and space for there programs. Programmers that comprehend the<br />
Tao always have enough time and space to accomplish their goals.</p>
<p>How could it be otherwise?</p>
<p>1.4</p>
<p>The wise programmer is told about Tao and follows it. The average<br />
programmer is told about Tao and searches for it. The foolish<br />
programmer is told about Tao and laughs at is.</p>
<p>If it were not for laughter, there would be no Tao.</p>
<p>The highest sounds are hardest to hear. Going forward is a way to<br />
retreat. Great talent shows itself late in life. Even a perfect<br />
program still has bugs.</p>
<p class="head1" align="center">The Ancient Masters &#8211; Book Two</p>
<p>                   Thus Spake the Master Programmer:<br />
&#8220;After three days without programming, life becomes meaningless.&#8221;</p>
<p>2.1</p>
<p>The programmers of old were mysterious and profound. We cannot fathom<br />
their thoughts, so all we do is describe their appearance.</p>
<p>Aware, like a fox crossing the water. Alert, like a general on the<br />
battlefield. Kind, like a hostess greeting her guests. Simple, like<br />
uncarved blocks of wood. Opaque , like black pools in darkened caves.</p>
<p>Who can tell the secrets of their hearts and minds?</p>
<p>The answer exists only in Tao.</p>
<p>2.2</p>
<p>Grand Master Turing once dreamed that he was a machine. When he awoke<br />
he exclaimed:</p>
<p>&#8220;I don&#8217;t know whether I am Turing dreaming that I am a machine,<br />
or a machine dreaming that I am Turing!.&#8221;</p>
<p>2.3</p>
<p>A programmer from a very large computer company went to a software<br />
conference and then returned to report to his manager, saying: &#8220;What<br />
sort of programmers work for other companies? They behaved badly and<br />
were unconcerned with appearances.  There hair was long and unkept<br />
and their clothes were wrinkled and old. They crashed out hospitality<br />
suite and they made rude noises during my presentation.&#8221;</p>
<p>The manager said: &#8220;I should have never sent you to the conference.<br />
Those programmers live beyond the physical world. They consider life<br />
absurd, an accidental coincidence. They come and go without knowing<br />
limitations. Without a care, they live only for their programs. Why<br />
should they bother with social conventions?</p>
<p>They are alive within the Tao.&#8221;</p>
<p>2.4</p>
<p>A novice asked the Master: &#8220;Here is a programmer that never designs,<br />
documents or tests his programs. Yet all who know him consider him<br />
one of the best programmer in the world. Why is this?&#8221;</p>
<p>The Master replies: &#8220;That programmer has mastered the Tao. He has<br />
gone beyond the need for design; he does not become angry when the<br />
system crashes, but accepts the universe without concern. He has gone<br />
beyond the need for documentation; he no longer cares if anyone else<br />
sees his code. He has gone beyond the need for testing; each of his<br />
programs are perfect within themselves, serene and elegant, their<br />
purpose self-evident.  Truly, he has entered the mystery of Tao.&#8221;</p>
<p class="head1" align="center">Design &#8211; Book Three</p>
<p>                   Thus spake the Master Programmer:<br />
&#8220;When the program is being tested, it is too late to make design<br />
changes.&#8221;</p>
<p>3.1</p>
<p>There once was a man who went to a computer trade show.  Each day as<br />
he entered, the man told the guard at the door:</p>
<p>&#8220;I am a great thief, renowned for my feats of shoplifting. Be<br />
forewarned, for this trade show shall not escape unplundered.&#8221;</p>
<p>This speech disturbed the guard greatly, because there were millions<br />
of dollars of computer equipment inside, so he watched the man<br />
carefully. But the man merely wandered from booth to booth, humming<br />
quietly to himself.</p>
<p>When the man left, the guard took him aside and searched his clothes,<br />
but nothing was to be found.</p>
<p>On the next day of the trade show, the man returned and chided the<br />
guard saying: &#8220;I escaped with a vast booty yesterday, but today will<br />
be even better.&#8221; So the guard watched him ever more closely, but to<br />
no avail.</p>
<p>On the final day of the trade show, the guard could restrain his<br />
curiosity no longer. &#8220;Sir Thief,&#8221; he said, &#8220;I am so perplexed, I<br />
cannot live in peace. Please enlighten me. What is it that you are<br />
stealing?&#8221;</p>
<p>The man smiled. &#8220;I am stealing ideas,&#8221; he said.</p>
<p>3.2</p>
<p>There once was a master programmer who wrote unstructured programs. A<br />
novice programmer, seeking to imitate him, also began to write<br />
unstructured programs. When the novice asked the master to evaluate<br />
his progress, the master criticized him for writing unstructured<br />
programs, saying &#8220;What is appropriate for the master is not<br />
appropriate for the novice. You must understand Tao before<br />
transcending structure.&#8221;</p>
<p>3.3</p>
<p>There was once a programmer who was attached to the court of the<br />
warlord of Wu. The warlord asked the programmer: &#8220;Which is easier to<br />
design: an accounting package or an operating system?&#8221;</p>
<p>&#8220;An operating system,&#8221; replied the programmer.</p>
<p>The warlord uttered an exclamation of disbelief. &#8220;Surely an<br />
accounting package is trivial next to the complexity of an operating<br />
system,&#8221; he said.</p>
<p>&#8220;Not so,&#8221; said the programmer, &#8220;when designing an accounting package,<br />
the programmer operates as a mediator between people having different<br />
ideas: how it must operate, how its reports must appear, and how it<br />
must conform to the tax laws. By contrast, an operating system is not<br />
limited by outside appearances. When designing an operating system,<br />
the programmer seeks the simplest harmony between machine and ideas.<br />
This is why an operating system is easier to design.&#8221;</p>
<p>The warlord of Wu nodded and smiled. &#8220;That is all good and well, but<br />
which is easier to debug?&#8221;</p>
<p>The programmer made no reply.</p>
<p>3.4</p>
<p>A manager went to the master programmer and showed him the<br />
requirements document for a new application. The manager asked the<br />
master: &#8220;How long will it take to design this system if I assign five<br />
programmers to it?&#8221;</p>
<p>&#8220;It will take one year,&#8221; said the master promptly.</p>
<p>&#8220;But we need this system immediately or even sooner! How long will it<br />
take if I assign ten programmers to it?&#8221;</p>
<p>The master programmer frowned. &#8220;In that case, it will take two<br />
years.&#8221;</p>
<p>&#8220;And what if I assign a hundred programmers to it?&#8221;</p>
<p>The master programmer shrugged. &#8220;Then the design will never be<br />
completed,&#8221; he said.</p>
<p class="head1" align="center">Coding &#8211; Book Four</p>
<p>                    Thus spake the master programmer:<br />
&#8220;A well-written program is its own heaven; a poorly-written<br />
program is its own hell.&#8221;</p>
<p>4.1</p>
<p>A program should be light and agile, its subroutines connected like a<br />
string of pearls. The spirit and intent of the program should be<br />
retained throughout. There should be neither too little or too much,<br />
neither needless loops nor useless variables, neither lack of<br />
structure nor overwhelming rigidity.</p>
<p>A program should follow the &#8216;Law of Least Astonishment&#8217;. What is this<br />
law? It is simply that the program should always respond to the user<br />
in the way that astonishes him least.</p>
<p>A program, no matter how complex, should act as a single unit. The<br />
program should be directed by the logic within rather than by outward<br />
appearances.</p>
<p>If the program fails in these requirements, it will be in a state of<br />
disorder and confusion. The only way to correct this is to rewrite<br />
the program.</p>
<p>4.2</p>
<p>A novice asked the master: &#8220;I have a program that sometime runs and<br />
sometimes aborts. I have followed the rules of programming, yet I am<br />
totally baffled. What is the reason for this?&#8221;</p>
<p>The master replied: &#8220;You are confused because you do not understand<br />
Tao. Only a fool expects rational behavior from his fellow humans.<br />
Why do you expect it from a machine that humans have constructed?<br />
Computers simulate determinism; only Tao is prefect.</p>
<p>The rules of programming are transitory; only Tao is eternal.<br />
Therefore you must contemplate Tao before you receive enlightenment.&#8221;</p>
<p>&#8220;But how will I know when I have received enlightenment?&#8221; asked the<br />
novice.</p>
<p>&#8220;Your program will then run correctly,&#8221; replied the master.</p>
<p>4.3</p>
<p>A master was explaining the nature of Tao of to one of his novices,</p>
<p>&#8220;The Tao is embodied in all software &#8212; regardless of how<br />
insignificant,&#8221; said the master.</p>
<p>&#8220;Is the Tao in a hand-held calculator?&#8221; asked the novice.</p>
<p>&#8220;It is,&#8221; came the reply.</p>
<p>&#8220;Is the Tao in a video game?&#8221; continued the novice.</p>
<p>&#8220;It is even in a video game,&#8221; said the master.</p>
<p>&#8220;And is the Tao in the DOS for a personal computer?&#8221;</p>
<p>The master coughed and shifted his position slightly. &#8220;The lesson<br />
is over for today,&#8221; he said.</p>
<p>4.4</p>
<p>Prince Wang&#8217;s programmer was coding software. His fingers danced upon<br />
the keyboard. The program compiled without an error message, and the<br />
program ran like a gentle wind.</p>
<p>&#8220;Excellent!&#8221; the Prince exclaimed, &#8220;Your technique is faultless!&#8221;</p>
<p>&#8220;Technique?&#8221; said the programmer turning from his terminal, &#8220;What I<br />
follow is Tao &#8212; beyond all techniques! When I first began to program<br />
I would see before me the whole problem in one mass. After three<br />
years I no longer saw this mass. Instead, I used subroutines. But now<br />
I see nothing. My whole being exists in a formless void. My senses<br />
are idle.  My spirit, free to work without plan, follows its own<br />
instinct. In short, my program writes itself. True, sometimes there<br />
are difficult problems. I see them coming, I slow down, I watch<br />
silently. Then I change a single line of code and the difficulties<br />
vanish like puffs of idle smoke. I then compile the program. I sit<br />
still and let the joy of the work fill my being. I close my eyes for<br />
a moment and then log off.&#8221;</p>
<p>Prince Wang said, &#8220;Would that all of my programmers were as wise!&#8221;</p>
<p class="head1" align="center">Maintenance &#8211; Book Five</p>
<p>                   Thus spake the master programmer:<br />
&#8220;Though a program be but three lines long, someday it will have to<br />
be maintained.&#8221;</p>
<p>5.1</p>
<p>A well-used door needs no oil on its hinges.<br />
A swift-flowing stream does not grow stagnant.<br />
Neither sound nor thoughts can travel through a vacuum.<br />
Software rots if not used.</p>
<p>These are great mysteries.</p>
<p>5.2</p>
<p>A manager asked a programmer how long it would take him to finish<br />
the program on which he was working. &#8220;I will be finished tomorrow,&#8221;<br />
the programmer promptly replied.</p>
<p>&#8220;I think you are being unrealistic,&#8221; said the manager, &#8220;Truthfully,<br />
how long will it take?&#8221;</p>
<p>The programmer thought for a moment. &#8220;I have some features that I<br />
wish to add. This will take at least two weeks,&#8221; he finally said.</p>
<p>&#8220;Even that is too much to expect,&#8221; insisted the manager, &#8220;I will be<br />
satisfied if you simply tell me when the program is complete.&#8221;</p>
<p>The programmer agreed to this.</p>
<p>Several years later, the manager retired. On the way to his<br />
retirement lunch, he discovered the programmer asleep at his<br />
terminal. He had been programming all night.</p>
<p>5.3</p>
<p>A novice programmer was once assigned to code simple financial<br />
package.</p>
<p>The novice worked furiously for many days, but when his master<br />
reviewed his program, he discovered that it contained a screen<br />
editor, a set of generalized graphics routines, an artificial<br />
intelligence interface, but not the slightest mention of anything<br />
financial.</p>
<p>When the master asked about this, the novice became indignant.<br />
&#8220;Don&#8217;t be so impatient,&#8221; he said, &#8221; I&#8217;ll put in the financial stuff<br />
eventually.&#8221;</p>
<p>5.4</p>
<p>Does a good farmer neglect a crop he has planted?<br />
Does a good teacher overlook even the most humble student?<br />
Does a good father allow a single child to starve?<br />
Does a good programmer refuse to maintain his code?</p>
<p class="head1" align="center">Management &#8211; Book Six</p>
<p>                   Thus spake the master programmer:<br />
&#8220;Let the programmer be many and the managers few &#8212; then all will<br />
be productive.&#8221;</p>
<p>6.1</p>
<p>When managers hold endless meetings, the programmers write games.<br />
When accountants talk of quarterly profits, the development budget<br />
is about to be cut. When senior scientists talk blue sky, the clouds<br />
are about to roll in.</p>
<p>Truly, this is not the Tao of Programming.</p>
<p>When managers make commitments, game programs are ignored. When<br />
accountants make long-range plans, harmony and order are about to<br />
be restored. When senior scientists address the problems at hand,<br />
the problems will soon be solved.</p>
<p>Truly, this is the Tao of Programming.</p>
<p>6.2</p>
<p>Why are programmers non-productive? Because their time is wasted<br />
in meetings.</p>
<p>Why are programmers rebellious? Because the management interferes<br />
to much.</p>
<p>Why are the programmers resigning one by one? Because they are<br />
burnt out.</p>
<p>Having worked for poor management, they no longer value their jobs.</p>
<p>6.3</p>
<p>A manager was about to be fired, but a programmer who worked for<br />
him invented a new program that became popular and sold well. As<br />
a result, the manager retained his job.</p>
<p>The manager tries to give the programmer a bonus, but the programmer<br />
refused it, saying, &#8220;I wrote the program because I thought it was<br />
an interesting concept, and thus I expect no reward.&#8221;</p>
<p>The manager upon hearing this remarked, &#8220;This programmer, though he<br />
holds a position of small esteem, understands well the proper duty<br />
of an employee. Lets promote him to the exalted position of<br />
management consultant!&#8221;</p>
<p>But when told this, the programmer once more refused, saying,<br />
&#8220;I exist so that I can program. If I were promoted, I would do<br />
nothing but waste everyone&#8217;s time. Can I go now? I have a program<br />
that I&#8217;m working on.&#8221;</p>
<p>6.4</p>
<p>A manager went to his programmers and told them: &#8220;As regards to<br />
your work hours: you are going to have to come in at nine in the<br />
morning and leave at five in the afternoon.&#8221; At this, all of them<br />
became angry and several resigned on the spot.&#8221;</p>
<p>So the manager said: &#8220;All right, in that case you may set your own<br />
working hours, as long as you finish your projects on schedule.&#8221;<br />
The programmers, now satisfied, began to come in at noon and work<br />
to the wee hours of the morning.</p>
<p class="head1" align="center">Corporate Wisdom &#8211; Book Seven</p>
<p>                   Thus spake the master programmer:<br />
&#8220;You can demonstrate a program for a corporate executive, but<br />
you can&#8217;t make him computer literate.&#8221;</p>
<p>7.1</p>
<p>A novice asked the master: &#8220;In the east there is a great tree-<br />
structure that men call &#8216;Corporate Headquarters&#8217;. It is bloated<br />
out of shape with vice presidents and accountants.  It issues a<br />
multitude of memos, each saying &#8216;Go, Hence!&#8217; or &#8216;Go, Hither!&#8217; and<br />
nobody knows what is meant. Every year new names are put onto the<br />
branches, but all to no avail. How can such an unnatural entity<br />
exist?&#8221;</p>
<p>The master replies: &#8220;You perceive this immense structure and are<br />
disturbed that it has no rational purpose. Can you not take<br />
amusement from its endless gyrations?  Do you not enjoy the<br />
untroubled ease of programming beneath its sheltering branches?<br />
Why are you bothered by its uselessness?&#8221;</p>
<p>7.2</p>
<p>In the east there is a shark which is larger than all other fish.<br />
It changes into a bird whose wings are like clouds filling the sky.<br />
When this bird moves across the land, it brings a message from<br />
Corporate Headquarters. This message it drops into the midst of the<br />
programmers, like a seagull making its mark upon the beach. Then the<br />
bird mounts on the wind and, with the blue sky at its back, returns<br />
home.</p>
<p>The novice programmer stares in wonder at the bird, for he<br />
understands it not. The average programmer dreads the coming of the<br />
bird, for he fears its message. The master programmer continues to<br />
work at his terminal, for he does not know that the bird has come<br />
and gone.</p>
<p>7.3</p>
<p>The Magician of the Ivory Tower brought his latest invention for<br />
the master programmer to examine. The magician wheeled a large<br />
black box into the master&#8217;s office while the master waited in<br />
silence.</p>
<p>&#8220;This is an integrated, distributed, general-purpose workstation,&#8221;<br />
began the magician, &#8220;ergonomically designed with a proprietary<br />
operating system, sixth generation languages, and multiple state of<br />
the art user interfaces. It took my assistants several hundred man<br />
years to construct. Is it not amazing.&#8221;</p>
<p>The master raised his eyebrows slightly. &#8220;It is indeed amazing,&#8221; he<br />
said.</p>
<p>&#8220;Corporate Headquarters has commanded,&#8221; continued the magician,<br />
&#8220;that everyone use this workstation as a platform for new programs.<br />
Do you agree to this?&#8221;</p>
<p>&#8220;Certainly,&#8221; replied the master, &#8221; I will have it transported to the<br />
data center immediately!&#8221; And the magician returned to his tower,<br />
well pleased.</p>
<p>Several days later, a novice wandered into the office of the master<br />
programmer and said, &#8220;I cannot find the listing for my new program.<br />
Do you know where it might be?&#8221;</p>
<p>&#8220;Yes,&#8221; replied the master, &#8220;the listings are stacked on the platform<br />
in the data center.&#8221;</p>
<p>7.4</p>
<p>The master programmer moves form program to program without fear.<br />
No change in management can harm him. He will not be fired, even if<br />
the project is cancelled. Why is this? He is filled with Tao.</p>
<p class="head1" align="center">Hardware and Software &#8211; Book Eight</p>
<p>                   Thus spake the master programmer:<br />
&#8220;Without the wind, the grass does not move. Without software,<br />
hardware is useless.&#8221;</p>
<p>8.1</p>
<p>A novice asked the master: &#8220;I perceive that one computer company is<br />
much larger than all others. It towers above its competition like a<br />
giant among dwarfs. Any one of its divisions could comprise an entire<br />
business. Why is this so?&#8221;</p>
<p>The master replied, &#8220;Why do you ask such foolish questions? That<br />
company is large because it is large. If it only made hardware,<br />
nobody would buy it. If it only made software, nobody would use it.<br />
If it only maintained systems, people would treat it like a servant.<br />
But because it combines all of these things, people think it one of<br />
the gods! By not seeking to strive, it conquers without effort.&#8221;</p>
<p>8.2</p>
<p>A master programmer passed a novice programmer one day. The master<br />
noted the novice&#8217;s preoccupation with a hand-held computer game.<br />
&#8220;Excuse me&#8221;, he said, &#8220;may I examine it?&#8221;</p>
<p>The novice bolted to attention and handed the device to the master. I<br />
see that the device claims to have three levels of play: Easy, Medium<br />
and Hard&#8221;, said the master. &#8220;Yet every such device has another level<br />
of play, where the device seeks not to conquer the human, nor to be<br />
conquered by the human.&#8221;</p>
<p>&#8220;Pray, great master&#8221;, implored the novice, &#8220;how does one find this<br />
mysterious settings?&#8221;</p>
<p>The master dropped the device to the ground and crushed it under<br />
foot.  And suddenly the novice was enlightened.</p>
<p>8.3</p>
<p>There was once a programmer who worked upon microprocessors. &#8220;Look at<br />
how well off I am here,&#8221; he said to a mainframe programmer who came<br />
to visit, &#8220;I have my own operating system and file storage device. I<br />
do not have to share my resources with anyone. The software is self-<br />
consistant and easy-to-use. Why do you not quit your present job and<br />
join me here?&#8221;</p>
<p>The mainframe programmer then began to describe his system to his<br />
friend, saying &#8220;The mainframe sits like an ancient sage meditating in<br />
the midst of the data center. Its disk drives lie end-to-end like a<br />
great ocean of machinery. The software is as multifaceted as a<br />
diamond, and as convoluted as a primeval jungle. The programs, each<br />
unique, move through the system like a swift-flowing river. That is<br />
why I am happy where I am.&#8221;</p>
<p>The microcomputer programmer, upon hearing this, fell silent. But the<br />
two programmers remained friends until the end of their days.</p>
<p>8.4</p>
<p>Hardware met Software on the road to Changtse. Software said: &#8220;You<br />
are Yin and I am Yang. If we travel together we will become famous<br />
and earn vast sums of money.&#8221; And so the set forth together, thinking<br />
to conquer the world.</p>
<p>Presently they met Firmware, who was dressed in tattered rage and<br />
hobbled along propped on a thorny stick. Firmware said to them: &#8220;The<br />
Tao lies beyond Yin and Yang. It is silent and still as a pool of<br />
water. It does not seek fame, therefore nobody knows its presence. It<br />
does not seek fortune, for it is complete within itself. It exists<br />
beyond space and time.&#8221;</p>
<p>Software and Hardware , ashamed, returned to their homes.</p>
<p class="head1" align="center">Epilogue &#8211; Book Nine</p>
<p>                   Thus spake the Master Programmer:<br />
&#8220;Time for you to leave.&#8221;</p>
<p>Der Beitrag <a href="/blog/english-version/">The Tao Of Programming ~ English Version</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
