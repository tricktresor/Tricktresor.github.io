<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>projekt Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/projekt/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:24:51 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>projekt Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Projektsystem: Hierarchie PSP-Element ändern</title>
		<link>/blog/projektsystem-hierarchie-psp-element-aendern/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Sun, 29 May 2016 07:00:00 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Projektsystem]]></category>
		<category><![CDATA[projekt]]></category>
		<category><![CDATA[BAPI]]></category>
		<category><![CDATA[BAPI_PROJECT_MAINTAIN]]></category>
		<category><![CDATA[PSP-Element]]></category>
		<category><![CDATA[Hierarchie]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=647155</guid>

					<description><![CDATA[<p>PSP-Elemente können in einem Projekt hierarchisch angeordnet werden. Hier zeige ich dir, wie das mit dem BAPI_PROJECT_MAINTAIN funktioniert.</p>
<p>Der Beitrag <a href="/blog/projektsystem-hierarchie-psp-element-aendern/">Projektsystem: Hierarchie PSP-Element ändern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Eine Projektstruktur ist zwangsläufig eine Hierarchie. Einzelne PSP-Elemente können ebenfalls hierarchisch angeordnet sein. Eine einfache Struktur sieht beispielsweise so aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_17-26-05.jpg"><img fetchpriority="high" decoding="async" class="alignnone size-full wp-image-647158" src="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_17-26-05.jpg" alt="2016-05-26_17-26-05" width="399" height="186" srcset="/wp-content/uploads/2016/05/2016-05-26_17-26-05.jpg 399w, /wp-content/uploads/2016/05/2016-05-26_17-26-05-300x140.jpg 300w" sizes="(max-width: 399px) 100vw, 399px" /></a><br />
[notice type=&#8217;info&#8217;]Die Projektstruktur wird im SAP-Standard mit der Transaktion CJ20n bearbeitet.[/notice]<br />
Mit dem kleinen Hierarchieänderungsprogramm soll die Struktur nun dahingehend geändert werden, dass das PSP-Element 43 unter das PSP-Element Nummer 42 gehängt wird. Der Aufruf sieht folgendermaßen aus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_18-30-54.jpg"><img decoding="async" class="alignnone size-full wp-image-647232" src="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_18-30-54.jpg" alt="2016-05-26_18-30-54" width="436" height="174" srcset="/wp-content/uploads/2016/05/2016-05-26_18-30-54.jpg 436w, /wp-content/uploads/2016/05/2016-05-26_18-30-54-300x120.jpg 300w" sizes="(max-width: 436px) 100vw, 436px" /></a></p>
<p>Die Übergabetabelle LT_HIERARCHY:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_18-32-09.jpg"><img decoding="async" class="alignnone size-full wp-image-647233" src="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_18-32-09.jpg" alt="2016-05-26_18-32-09" width="778" height="87" srcset="/wp-content/uploads/2016/05/2016-05-26_18-32-09.jpg 778w, /wp-content/uploads/2016/05/2016-05-26_18-32-09-300x34.jpg 300w, /wp-content/uploads/2016/05/2016-05-26_18-32-09-768x86.jpg 768w" sizes="(max-width: 778px) 100vw, 778px" /></a></p>
<p>Das Ergebnis ist glücklicherweise wie erwartet:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_17-27-35.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-647157" src="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_17-27-35.jpg" alt="2016-05-26_17-27-35" width="399" height="186" srcset="/wp-content/uploads/2016/05/2016-05-26_17-27-35.jpg 399w, /wp-content/uploads/2016/05/2016-05-26_17-27-35-300x140.jpg 300w" sizes="(max-width: 399px) 100vw, 399px" /></a></p>
<h2>Hinweis</h2>
<p>Wenn die Hierarchie geändert werden soll, dann kann dies leider nicht beliebig passieren. In jedem Fall muss immer die Hierarchie aller beteiligten PSP-Elemente definiert werden. Soll das PSP-Element Nummer 43 wieder &#8220;heraufgestuft&#8221; werden, dann müssen Nr. 42 und Nr. 43 jeweils mit &#8220;UP = P-0000004&#8221;  und &#8220;DOWN = space&#8221; an den Baustein übergeben werden. Nr. 4 muss ebenfalls übergeben werden. Hier der Aufruf für Nr. 43. Eigentlich müsste auch hier Nr. 42 berücksichtigt werden, da es ebenfalls beteiligt ist, denn es &#8220;verliert&#8221; ja sein Kind:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_18-36-46.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-647234" src="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_18-36-46.jpg" alt="2016-05-26_18-36-46" width="778" height="66" srcset="/wp-content/uploads/2016/05/2016-05-26_18-36-46.jpg 778w, /wp-content/uploads/2016/05/2016-05-26_18-36-46-300x25.jpg 300w, /wp-content/uploads/2016/05/2016-05-26_18-36-46-768x65.jpg 768w" sizes="(max-width: 778px) 100vw, 778px" /></a></p>
<p>Dies ist das Ergebnis:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_17-41-13.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-647161" src="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_17-41-13.jpg" alt="2016-05-26_17-41-13" width="399" height="186" srcset="/wp-content/uploads/2016/05/2016-05-26_17-41-13.jpg 399w, /wp-content/uploads/2016/05/2016-05-26_17-41-13-300x140.jpg 300w" sizes="(max-width: 399px) 100vw, 399px" /></a></p>
<p>Wie du siehst, ist die Reihenfolge vertauscht: Erst kommt Element 43, danach 42. Eine Sortierung gibt es nicht. Die &#8220;Geschwister&#8221; müssen genau definiert werden (LEFT und RIGHT). Soll die Reihenfolge anders herum sein, also erst 42, dann 43, dann muss die Übergabetabelle folgendermaßen aussehen:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_17-53-09.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-647227" src="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_17-53-09.jpg" alt="2016-05-26_17-53-09" width="778" height="87" srcset="/wp-content/uploads/2016/05/2016-05-26_17-53-09.jpg 778w, /wp-content/uploads/2016/05/2016-05-26_17-53-09-300x34.jpg 300w, /wp-content/uploads/2016/05/2016-05-26_17-53-09-768x86.jpg 768w" sizes="(max-width: 778px) 100vw, 778px" /></a></p>
<p>Die Geschwister müssen nicht immer definiert werden. Manchmal funktioniert eine Operation jedoch nur dann, wenn auch die Geschwister korrekt angegeben werden.</p>
<p>Am besten ist es, die Hierarchie 100%ig genau zu definieren. Wann sich der Baustein unvollständigen Definitionen tolerant verhält und wann nicht, ist für mich nicht nachvollziehbar.</p>
<h2>Fehler &#8220;Wurzelelement der Hierarchie darf nicht verschoben werden&#8221;</h2>
<p><em>Fehler 469(CJ)</em></p>
<p>Bei der Änderung der Hierarchie müssen alle beteiligten Elemente definiert werden! Wenn aus der Ausgangsposition &#8220;43 ist 42 untergeordnet&#8221; die Änderung &#8220;42 ist 43 untergeordnet&#8221; erfolgen soll, dann muss das ROOT-Element P-0000004 erwähnt werden. Das passiert in dem Demoprogramm, allerdings zeige ich den Fehler hier auf, weil er nicht auf die Fehlerursache schließen lässt.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_18-21-16.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-647231" src="https://tricktresor.com/wp-content/uploads/2016/05/2016-05-26_18-21-16.jpg" alt="2016-05-26_18-21-16" width="778" height="87" srcset="/wp-content/uploads/2016/05/2016-05-26_18-21-16.jpg 778w, /wp-content/uploads/2016/05/2016-05-26_18-21-16-300x34.jpg 300w, /wp-content/uploads/2016/05/2016-05-26_18-21-16-768x86.jpg 768w" sizes="(max-width: 778px) 100vw, 778px" /></a></p>
<h2>Code</h2>
<pre class="lang:abap decode:true " > PARAMETERS p_projn  TYPE ps_pspid DEFAULT 'K-0000001'.
 PARAMETERS p_root   TYPE ps_posid DEFAULT 'P-0000004'.
 PARAMETERS p_parent TYPE ps_posid DEFAULT 'P-00000042'.
 PARAMETERS p_child  TYPE ps_posid DEFAULT 'P-00000043'.
 
 START-OF-SELECTION.
 
   PERFORM go.
 
 *&amp;---------------------------------------------------------------------*
 *&amp;      Form  go
 *&amp;---------------------------------------------------------------------*
 FORM go.
 
   DATA ls_project_def      TYPE bapi_project_definition.
   DATA ls_project_def_upd  TYPE bapi_project_definition_up.
   DATA lt_messages         TYPE STANDARD TABLE OF bapi_meth_message.
   DATA ls_message          TYPE bapi_meth_message.
   DATA ls_return           TYPE bapireturn1.
   DATA lt_methods          TYPE STANDARD TABLE OF bapi_method_project.
   DATA ls_method           TYPE bapi_method_project.
   DATA lt_hierarchy        TYPE STANDARD TABLE OF bapi_wbs_hierarchie.
   DATA ls_hierarchy        TYPE bapi_wbs_hierarchie.
 
   ls_project_def-project_definition = p_projn.
 
 
   ls_method-method     = 'Create'.
   ls_method-objecttype = 'WBS-Hierarchy'.
   APPEND ls_method TO lt_methods.
 
 
   CLEAR ls_method.
   ls_method-method     = 'SaveAndWait'.
   APPEND ls_method TO lt_methods.
 
   CLEAR ls_hierarchy.
   ls_hierarchy-project_definition = p_projn.
   ls_hierarchy-wbs_element        = p_root.
   ls_hierarchy-down               = p_parent.
   APPEND ls_hierarchy TO lt_hierarchy.
 
 
   CLEAR ls_hierarchy.
   ls_hierarchy-project_definition = p_projn.
   ls_hierarchy-wbs_element        = p_parent.
   ls_hierarchy-down               = p_child.
   ls_hierarchy-up                 = p_root.
   APPEND ls_hierarchy TO lt_hierarchy.
 
   IF p_child IS NOT INITIAL.
     CLEAR ls_hierarchy.
     ls_hierarchy-project_definition = p_projn.
     ls_hierarchy-wbs_element        = p_child.
     ls_hierarchy-up                 = p_parent.
     APPEND ls_hierarchy TO lt_hierarchy.
   ENDIF.
 
 
   CALL FUNCTION 'BAPI_PROJECT_MAINTAIN'
     EXPORTING
       i_project_definition     = ls_project_def
       i_project_definition_upd = ls_project_def_upd
     IMPORTING
       return                   = ls_return
     TABLES
       e_message_table          = lt_messages
       i_method_project         = lt_methods
       i_wbs_hierarchie_table   = lt_hierarchy.
 
   WRITE: / ls_return-message.
   LOOP AT lt_messages INTO ls_message.
     WRITE: / ls_message-message_text.
   ENDLOOP.
 
   CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
     EXPORTING
       wait = abap_true.
 
 ENDFORM.                    "go</pre>
<p>Der Beitrag <a href="/blog/projektsystem-hierarchie-psp-element-aendern/">Projektsystem: Hierarchie PSP-Element ändern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>SAP-Projektgesetze</title>
		<link>/blog/sap-projektgesetze/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 25 Feb 2008 17:30:26 +0000</pubDate>
				<category><![CDATA[Weisheiten]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[fehler]]></category>
		<category><![CDATA[Texte]]></category>
		<category><![CDATA[Dokumentation]]></category>
		<category><![CDATA[Eigenentwicklungen]]></category>
		<category><![CDATA[tabelle]]></category>
		<category><![CDATA[sap]]></category>
		<category><![CDATA[projekt]]></category>
		<category><![CDATA[gesetz]]></category>
		<category><![CDATA[axiom]]></category>
		<category><![CDATA[analyse]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=460</guid>

					<description><![CDATA[<p>Die vollst&#228;ndigen SAP-Projektgesetze in freier Anlehnung an Murphys Gesetze von Joachim Graf, von M. Treder. Viel Spa&#223;!</p>
<p>Der Beitrag <a href="/blog/sap-projektgesetze/">SAP-Projektgesetze</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Die vollständigen SAP-Projektgesetze in freier Anlehnung an Murphys Gesetze von Joachim Graf, von M. Treder. Viel Spaß!</p>
<p>In freier Anlehnung an Murphys Gesetze von Joachim Graf, von M. Treder.</p>
<h2 class="head1">Generelles</h2>
<h3 class="head2">Projektplanung</h3>
<p class="text1">Durch Planung wird der Zufall zum Irrtum gemacht, d.h. glaube nicht an Wunder, verlaß dich auf sie.<br />
Schlecht geplante Projekte brauchen dreimal so lange wie geplant.<br />
Gut geplante Projekte benötigt nur viermal so lange.</p>
<h3 class="head2">SPJ-Wahn</h3>
<p>Mit genau geplanten Aktivitäten und Aufwänden, gepflegten Ressourcen- und Projektkalendern errechnet SPJ über Ausgleichsfunktionen den Projektendtermin.<br />
Gesetz der Wichtigkeit: Ein Gramm schönere Planung ist wichtiger als ein Kilo Arbeitsergebnisse.</p>
<h3 class="head2">Projektverlauf</h3>
<p>Wenn sich irgend etwas bewegt, dann in die falsche Richtung.<br />
Alles was sich nicht bewegt steht am falschen Platz.<br />
Seelenlose Dinge entziehen sich grundsätzlich jedem Zugriff.<br />
Wenn irgend etwas beschleunigt werden soll, beschleunigt sich nur das Auftreten von Problemen und Systemabstürzen.</p>
<h3 class="head2">Gestaltung systemgestützter betriebswirtschaftlicher Funktionen und<br />
Ablauforganisation</h3>
<p>Betriebswirtschaft ist die Lehre vom Geld und wie es die Gesetze der Informatik und gesundem Menschenverstand mißachtet.<br />
Informatik ist die Lehre vom Computer und wie es die Gesetze der Betriebswirtschaft und gesundem Menschenverstand mißachtet.<br />
Logik ist das Bindeglied, um mit richtigen betriebswirtschaftlichen Überlegungen zu falschen Schlußfolgerungen in der Informatik zu gelangen.</p>
<h3 class="head2">Die 80% Regeln für Geschäftsvorfälle</h3>
<p>80% der Anwender werden nur 20% der Funktionen aus den Geschäftsvorfällen anwenden.<br />
20% der Anwender benötigen die 80% der Funktionen, die die Geschäftsvorfälle nicht abdecken.<br />
Alle Teilnehmer deiner Schulung gehören mit hundertprozentiger Sicherheit zu den 20%.<br />
Die ersten 80% der Geschäftsvorfälle benötigen 80 % der eingeplanten Zeit.<br />
Die anderen 20% brauchen die restlichen 80%.<br />
Mit SAP dauert beides doppelt so lang und kostet viermal so viel.</p>
<h3 class="head2">Oktal-Erkenntnis</h3>
<p>Von je 10 Geschäftsvorfällen werden nur 8 fertiggestellt werden.</p>
<h3 class="head2">Achills-Erkenntnis</h3>
<p>Egal wie langsam sich der Endpunkt der Fertigstellung deiner Geschäftsvorfälle bewegt, du kannst den Vorsprung nicht einholen.</p>
<h3 class="head2">Axiom der Problemvermehrung</h3>
<p>In jedem Geschäftsvorfall steckt ein kleines Problem, das gerne raus will.<br />
In jedem kleinen Problem steckt ein großes, das gerne raus will.<br />
Wo überhaupt kein Problem ist, steckt ein großes, das gerne raus will.<br />
Alle Probleme bestehen aus n Gleichungen und haben n+1 Unbekannte.<br />
Folgerung: Wenn irgend jemand sagt: &#8220;Kein Problem&#8221;, dann hast du eines.</p>
<p>Erkenntnis: Mißtraue jedem, der erzählt, etwas wäre leicht zu realisieren. Es ist entweder ein Irrer, Ignorant oder Verkäufer der Software.</p>
<h3 class="head2">Dokumentation</h3>
<p>Mündliche Erklärungen von Funktionen und Abläufen sind das Papier nicht wert, auf dem sie nicht geschrieben sind.</p>
<h3 class="head2">Tautologie der Dokumentationsstandards</h3>
<p>Wenn du nicht weißt, wie dokumentiert werden soll, lies die Dokumentationsstandards</p>
<h3 class="head2">Widerlegung der Tautologie</h3>
<p>Die Dokumentationsstandards werden nicht gelesen.</p>
<h2 class="head1">ABC-FlowChart</h2>
<p>Der Unterschied zwischen Lineal mit Bleistift und ABC-FlowChart ist, daß du beide nicht vernünftig einsetzen kannst.<br />
Klickst du auf einen Kasten, um ihn zu verschieben, so wird sich seine Größe ändern.<br />
Kannst du den Kasten verschieben, dann bewegen sich auch alle anderen Symbole mit.<br />
Keiner der Vorgänge ist zu widerrufen.<br />
Kann der Vorgang widerrufen werden, so hast du zwischenzeitlich eine unsinnige Funktion ausgeführt, die widerrufen werden kann.<br />
Mit der Kurztaste ALT-D-S, an die du aus dem Winword gewöhnt bist, wolltest du Schließen, um noch einmal mit dem alten Dokument zu beginnen.<br />
Wenn du das ABC-FlowChartdiagramm ausgedruckt hast, wirst du feststellen, daß es noch nicht alles korrigiert ist.</p>
<h2 class="head1">Projektorganisation</h2>
<p>Die Summe der Intelligenz im Projekt ist konstant, die Beteiligung steigt.<br />
Die Summe des eingesetzten Organisations-Knowhows ist umgekehrt proportional zu der Zahl der den Anwendern verständlichen Abläufen und Funktionen.<br />
Die Wahrscheinlichkeit etwas zu vergessen ist direkt proportional zu &#8230;, äh,&#8230;.zu&#8230;.</p>
<h3 class="head1">Erkenntnis</h3>
<p>Inkompetenz kennt keine Grenzen von Raum und Zeit.</p>
<h3 class="head1">Postulat der Zusammenarbeit</h3>
<p>Anwender und Systementwickler werden erst vernünftig miteinander umgehen, wenn alle anderen Methoden versagt haben.</p>
<h3 class="head2">Steigerung</h3>
<p>Anwender und Systementwickler werden auch dann nicht vernünftig miteinander umgehen, wenn alle anderen Methoden versagt haben.</p>
<h3 class="head2">1. Folgerung</h3>
<p>Systementwickler sind sich darüber einig, daß ihr Leben ohne Anwender und deren unverständliche Wünsche sehr viel leichter wäre, d.h. gesegnet sei der Anwender, der nichts erwartet. Er soll nicht enttäuscht werden.</p>
<h3 class="head2">2. Folgerung</h3>
<p>Anwender sind sich darüber einig, daß ihr Leben ohne Systementwickler und deren Einwände über die Umsetzbarkeit von Systemanforderungen sehr viel leichter wäre.</p>
<h3 class="head2">Finale Ableitung</h3>
<p>Da sich also alle einig darüber sind, daß sie überflüssig sind, ist die konsequente Einführung eines computergestützten IMW der einzige Weg das System so einzustellen, daß es in der richtigen Art mißverstanden werden kann.</p>
<h3 class="head2">Definition der Arbeitsteilung</h3>
<p>Die, die können, tun<br />
Die, die nicht können, schulen<br />
Die, die nicht schulen können, planen<br />
Die, die nicht schulen oder planen können, entwickeln<br />
Die, die nicht entwickeln können, erarbeiten Richtlinien für die Entwickler</p>
<h3 class="head2">Erkenntnis aus der Arbeitsteilung</h3>
<p>Tu etwas zur Lösung der Probleme und man wird sich an dich erinnern, wenn es wieder Probleme gibt. Vorher wirst du nicht gefragt werden.</p>
<h2 class="head1">SAP-Standardsoftware</h2>
<p>SAP setzt sich aus 5% Fehlfunktionen und 95% in ABAP/4 und Assembler codierter Heimtücke zusammen.<br />
Die Möglichkeit SAP über Tabellen falsch einzustellen optimiert dieses Verhältnis zu 95% Fehlfunktionen und 95% Heimtücke.<br />
Die verbleibenden 10%, die zu einer zweihundertprozentigen Fehlersicherheit fehlen, werden durch unvollständige oder falsche Dokumentation wettgemacht.</p>
<h3 class="head1">Gesetz der komplexen Systeme</h3>
<p>SAP ist ein komplexes System.<br />
Komplexe Systeme neigen zu komplexen Fehlern.<br />
Einfache Systeme hingegen neigen zu komplexen Fehlern.<br />
In komplexen Systemen gibt es keine Relation zwischen Daten und anwendbaren Funktionen.</p>
<h3 class="head1">Analyse</h3>
<p>Was wäre, wenn Gott wirklich gewollt hätte, das SAP einfach einzuführen ist.</p>
<h3 class="head1">Das Tabellen-Axiom</h3>
<p>Jede Tabelle, die richtig eingestellt ist, wird früher oder später verstellt.</p>
<h3 class="head1">Verschärfung des Tabellen-Axioms</h3>
<p>Alles wird früher verstellt.<br />
Die Tabelle ist nicht über die 990t geschützt und wird zum ungünstigsten Zeitpunkt verstellt.<br />
Die alte Tabelleneinstellung ist entweder gelöscht oder überschrieben und nicht im F-Dokument oder FB90 dokumentiert.<br />
Jede unsinnige Einstellung wurde sofort dokumentiert.<br />
Die Entwickler, die die Tabelle eingestellt oder verstellt haben, erinnern sich nicht mehr an die richtigen Einstellungen.<br />
Wenn sie sich doch erinnern, ist die Erinnerung falsch und es kostet einen Manntag dies festzustellen. Damit hat man aber immer noch nicht die richtige Einstellung.</p>
<h3 class="head1">Übergang zum großen Funktionsschwindel</h3>
<p>Der Fehler wird sofort als neue Funktion verkauft.</p>
<h2 class="head1">Realisierung</h2>
<h3 class="head2">Das Programmier-Paradigma</h3>
<p>Durch den Einsatz von Standardsoftware erübrigen sich Eigenentwicklungen.</p>
<h3 class="head2">Ableitung</h3>
<p>Systementwickler sind für die Einführung von Standardsoftware überflüssig.</p>
<h3 class="head2">1. Folgerung</h3>
<p>SAP liefert den Quellcode und eine Entwicklungsumgebung aus.</p>
<h3 class="head2">2. Folgerung</h3>
<p>SAP bietet Kurse zur Ausbildung von Systementwicklern an.</p>
<h3 class="head2">Erkenntnis</h3>
<p>Jede Firma ist gleich oder die reale Welt ist nur ein Spezialfall des SAP-Modells.</p>
<p>Systementwickler wären die letzten, die ihre Systeme einsetzen.</p>
<p>Wenn ein Fehler entdeckt und beseitigt wurde, wird festgestellt, daß es kein Fehler war.</p>
<p>Anwenderfreundlichkeit ist das entgegenkommende, höfliche und duldsame Verhalten des Anwenders gegenüber dem unflexiblen und rätselhaften Verhalten von IV-Systemen.</p>
<p>Der Beitrag <a href="/blog/sap-projektgesetze/">SAP-Projektgesetze</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
