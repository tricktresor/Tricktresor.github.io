<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>RFC Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/rfc/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Mon, 26 Sep 2022 14:39:08 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>RFC Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Checkpoint-Gruppe &#8211; Die Fahrkarten bitte!</title>
		<link>/blog/checkpoint-gruppe-die-fahrkarten-bitte/</link>
					<comments>/blog/checkpoint-gruppe-die-fahrkarten-bitte/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 05 Feb 2015 06:00:00 +0000</pubDate>
				<category><![CDATA[Datenbanken & Datenselektion]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[saab]]></category>
		<category><![CDATA[checkpoint]]></category>
		<category><![CDATA[log-point]]></category>
		<category><![CDATA[break-point]]></category>
		<category><![CDATA[logging]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[RFC]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=5247</guid>

					<description><![CDATA[<p>Checkpoint-Gruppen sind eine nützliche Sache. Leider funktionieren Sie nur auf einem Weg: Ist ein Kontrollpunkt aktiv, verhält sich der jeweilige Befehl (LOG-POINT, BREAK-POINT, ASSERT) entsprechend. Leider kann man nicht prüfen, ob eine Protokollierung eingeschaltet ist, da die Befehle keinen SY-SUBRC liefern. Hier stelle ich eine Routine vor, die prüft, ob die Protokollierung für eine Checkpoint-Gruppe eingeschaltet ist.</p>
<p>Der Beitrag <a href="/blog/checkpoint-gruppe-die-fahrkarten-bitte/">Checkpoint-Gruppe &#8211; Die Fahrkarten bitte!</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Heute stand ich vor der Frage, wie man im Programm eine Abfrage einbaut, die man in jedem System ohne extra Parametertabelle oder ähnlichem an- oder ausschalten kann. Normalerweise gibt es dafür Parameter-Tabellen oder man könnte auch Benutzerparameter verwenden. Ersteres war jedoch zu aufwändig und die zweite Variante passte nicht, da für beliebige Benutzer (auch RFC-User) gesteuert werden sollte, ob eine Protokollierung statt findet oder nicht.</p>



<p>Da ich für die Protokollierung einiger Aktionen bereits die Checkpoint-Gruppen verwendet habe, kam ich auf die Idee, diese abzufragen. Eigentlich funktioniert der Befehl LOG-POINT anders: Die Anweisung wird eingebaut und wenn in der Transaktion SAAB die Protokollierung zum aktuellen Zeitpunkt aktiviert wurde, dann wird das Protokoll geschrieben:</p>



<pre class="wp-block-preformatted">LOG ID ztricktresor&nbsp;SUBKEY&nbsp;'CHECK1'&nbsp;FIELDS&nbsp;subrc.</pre>



<h2 class="wp-block-heading">Transaktion SAAB</h2>



<p>In der Transaktion Checkpoint-Gruppe ändern SAAB kannst du einstellen, wie sich die einzelnen Befehle LOG-POINT, ASSERT, BREAK-POINT verhalten sollen.</p>



<figure class="wp-block-image"><a class="keychainify-checked" href="https://tricktresor.com/wp-content/uploads/2015/02/2015-02-04_18-25-01.png"><img fetchpriority="high" decoding="async" width="300" height="171" src="https://tricktresor.com/wp-content/uploads/2015/02/2015-02-04_18-25-01-300x171.png" alt="2015-02-04_18-25-01" class="wp-image-5250" srcset="/wp-content/uploads/2015/02/2015-02-04_18-25-01-300x171.png 300w, /wp-content/uploads/2015/02/2015-02-04_18-25-01-624x356.png 624w, /wp-content/uploads/2015/02/2015-02-04_18-25-01.png 770w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure>



<h2 class="wp-block-heading">Andersherum wird ein Schuh draus</h2>



<p>Die Aktivierungsdaten werden in die Tabelle AAB_ID_ACT geschrieben. Zusätzlich wird gespeichert, wann die Aktivierung abläuft und welche Kontrollpunkte aktiv sind (Breakpoints, Logpoints, Assertions). Diese Tabelle lese ich aus, um zu prüfen, ob das Logging zu einer Checkpoint-Gruppe aktiv ist.</p>



<p>Welche Kontrollpunkte aktiv sind, wird im Feld ACTMODE bitweise gespeichert. Die Bits haben dabei folgende Bedeutung:</p>



<figure class="wp-block-table"><table><tbody><tr><td>Bit 1</td><td>Bit 2</td><td>Bit 3</td><td>Bit 4</td><td>Bit 5</td><td>Bit 6</td><td>Bit 7</td><td>Bit 8</td></tr><tr><td>ohne Funktion</td><td>Logging</td><td>Assertions<br>Hintergrund<br>abbrechen</td><td>Assertions<br>Hintergrund<br>protokollieren</td><td>Assertions<br>abbrechen</td><td>Assertions<br>protokollieren</td><td>Assertions<br>anhalten</td><td>Breakpoints</td></tr></tbody></table></figure>



<p>Mithilfe des Befehls GET BIT 2 OF ACTMODE bekomme ich heraus, ob das Logging eingeschaltet ist.</p>



<p>Der Wert ist dann 64, Du kannst die Konstante CL_ABAP_AAB_UTILITIES=>BITMASK_LOGPOINT verwenden.</p>



<h2 class="wp-block-heading">Globale Checkpoint-Aktivierungen</h2>



<p>In der Transaktion SAAB legt man in der Regel die Einstellungen für sich selbst an. Du kannst jedoch über <em>Alle Aktivierungen</em> [_Benutzer_] auch globale Einstellungen vornehmen. Diese sind dann für alle Benutzer gültig. Das Feld AAB_ID_ACT-USERNAME ist in dem Fall initial.</p>



<p>Ebenso kann eine Einschränkung auf Server vorgenommen werden. Ist das der Fall, dann steht im Feld AAB_ID_ACT-SERVER der Name des Applicationservers.</p>



<h2 class="wp-block-heading">Coding</h2>



<pre class="wp-block-preformatted">REPORT zz_checkpoint.

CLASS lcl_saab DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS check_active IMPORTING name          TYPE clike
                                         user          TYPE clike OPTIONAL
                               RETURNING VALUE(active) TYPE boolean.
ENDCLASS.

CLASS lcl_saab IMPLEMENTATION.
  METHOD check_active.
*== local data
    DATA ls_aabact  TYPE aab_id_act.
    DATA lv_tstamp  TYPE timestamp.
    DATA lv_actmode TYPE x.

    active = abap_false.

*== check checkpoint
    SELECT SINGLE * FROM aab_id_act INTO ls_aabact
     WHERE name     = name 
       AND username = user.
    IF sy-subrc = 0.
*== Checkpoint active
      GET TIME STAMP FIELD lv_tstamp.

      IF lv_tstamp &lt;= ls_aabact-exp_tstamp. 
*== checkpoint is valid at the moment     
        lv_actmode = ls_aabact-actmode. 
*== check if logging is active         
        GET BIT 2 OF lv_actmode INTO DATA(lv_logging).         
        IF lv_logging = 1. 
*== yes, active           
          active = abap_true.         
        ENDIF.      
      ENDIF. 
    ENDIF.   
  ENDMETHOD. 
ENDCLASS. 

PARAMETERS p_name TYPE progname DEFAULT 'ZTRICKTRESOR'. 

START-OF-SELECTION.   
  IF lcl_saab=&gt;check_active( p_name ) = abap_true.
    MESSAGE i000(oo) WITH 'Checkpoint-Gruppe' p_name ' Logging ist aktiv'.
  ELSE.
    MESSAGE i000(oo) WITH 'Checkpoint-Gruppe' p_name 'Logging ist NICHT aktiv'.
  ENDIF.</pre>



<h2 class="wp-block-heading">Update</h2>



<p>In der Zwischenzeit habe ich die Klasse CL_ABAP_AAB_UTILITIES gefunden mit der du die Aktivierung einfach prüfen kannst:</p>



<pre class="wp-block-code"><code>DATA(logpoint_active) = cl_abap_aab_utilities=>is_active(
  EXPORTING
    id            = 'ZTRICKTRESOR'
    mode_logpoint = abap_true ).</code></pre>
<p>Der Beitrag <a href="/blog/checkpoint-gruppe-die-fahrkarten-bitte/">Checkpoint-Gruppe &#8211; Die Fahrkarten bitte!</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/checkpoint-gruppe-die-fahrkarten-bitte/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>FI-Beleg mit Umsatzsteuer buchen</title>
		<link>/blog/fi-beleg-mit-umsatzsteuer-buchen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 24 Sep 2014 16:23:48 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Finanz- und Rechnungswesen]]></category>
		<category><![CDATA[Mehrwertsteuer]]></category>
		<category><![CDATA[Vorsteuer]]></category>
		<category><![CDATA[BAPI]]></category>
		<category><![CDATA[Buchung]]></category>
		<category><![CDATA[MM]]></category>
		<category><![CDATA[Beleg]]></category>
		<category><![CDATA[RFC]]></category>
		<category><![CDATA[Steuersatz]]></category>
		<category><![CDATA[BAPIs]]></category>
		<category><![CDATA[Umsatzsteuer]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=5078</guid>

					<description><![CDATA[<p>Ausnahmsweise mal ein Ausflug in die Welt der Finanzbuchhaltung. Für mich ein Rotes Tuch mit Sieben Siegeln aus einem böhmischen Dorf... Ich werde trotzdem versuchen, den Sachverhalt nicht nur syntaktisch sondern auch inhaltlich korrekt wiederzugeben. Aus diesem Grund werde ich mich bewusst so schwammig wie möglich ausdrücken und Fachtermini wie "Erlöskonto", "Bilanz" oder "Buchungsschlüssel" vermeiden.</p>
<p>Der Beitrag <a href="/blog/fi-beleg-mit-umsatzsteuer-buchen/">FI-Beleg mit Umsatzsteuer buchen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ausnahmsweise mal ein Ausflug in die Welt der Finanzbuchhaltung. Für mich ein Rotes Tuch mit Sieben Siegeln aus einem böhmischen Dorf&#8230; Ich werde trotzdem versuchen, den Sachverhalt nicht nur syntaktisch sondern auch inhaltlich korrekt wiederzugeben. Aus diesem Grund werde ich mich bewusst so schwammig wie möglich ausdrücken und Fachtermini wie &#8220;Erlöskonto&#8221;, &#8220;Bilanz&#8221; oder &#8220;Buchungsschlüssel&#8221; vermeiden.</p>
<h2>Aufgabe</h2>
<p>Buchen eines FI-Beleges mit Umsatzsteuer. Es soll ein Bruttobetrag auf ein Konto und der zugehörige Nettobetrag auf ein Gegenkonto gebucht werden. Die Umsatzsteuer soll auf das richtige Umsatzsteuerkonto gebucht werden.</p>
<h2>Hilfsmittel</h2>
<p>Dass nur der BAPI_ACC_DOCUMENT_POST für diese Zwecke infrage kommt, war mir immerhin schnell klar. Wie man mit diesem Baustein bucht, habe ich ebenfalls schnell heraus gefunden. Eine Herausforderung war die Buchung der Umsatzsteuer. Von der irrigen Annahme, der Baustein könnte die Umsatzsteuer selber rechnen, habe ich mich schnell verabschieden müssen. Die Umsatzsteuer muss dem Baustein übergeben werden.</p>
<p>Um die Umsatzsteuer zu berechnen, helfen diese beiden Bausteine:</p>
<ul>
<li>CALCULATE_TAX_FROM_NET_AMOUNT</li>
<li>CALCULATE_TAX_FROM_GROSSAMOUNT</li>
</ul>
<p>Desweiteren notwendig ist eine Buchungsperiode. Diese lässt sich zwar auch einfach aus dem Datum errechnen, aber der Baustein CON_FIN_CURRENT_PERIOD_GET_2 hilft ebenfalls weiter. Da der Baustein sich auf den MM-Periodenverschieber bezieht, bin ich mir nicht sicher, ob der Baustein wirklich sinnvoll ist, aber in meinem Fall funktioniert er.</p>
<h2>Beleg</h2>
<p>Dieser Beleg kommt bei so einer Buchung heraus:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/09/Beleg.png"><img decoding="async" class="alignnone size-medium wp-image-5079" src="https://tricktresor.com/wp-content/uploads/2014/09/Beleg-300x121.png" alt="Beleg" width="300" height="121" srcset="/wp-content/uploads/2014/09/Beleg-300x121.png 300w, /wp-content/uploads/2014/09/Beleg-624x252.png 624w, /wp-content/uploads/2014/09/Beleg.png 805w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h2>Coding</h2>
<pre>REPORT.
PARAMETERs p_bukrs type bukrs DEFAULT '1000'.

START-OF-SELECTION.

  DATA ls_header TYPE bapiache09.
  DATA lt_return TYPE STANDARD TABLE OF bapiret2.
  DATA ls_return TYPE bapiret2.
  DATA lt_acc_gl TYPE STANDARD TABLE OF bapiacgl09.
  DATA ls_acc_gl LIKE LINE OF lt_acc_gl.
  DATA lt_cur_am TYPE STANDARD TABLE OF bapiaccr09.
  DATA ls_cur_am LIKE LINE OF lt_cur_am.
  DATA lt_acc_tx TYPE STANDARD TABLE OF bapiactx09.
  DATA ls_acc_tx LIKE LINE OF lt_acc_tx.
  data lv_period type POPER.
  data lv_year   type BDATJ.
*== aktuelle Periode ermitteln
  CALL FUNCTION 'CON_FIN_CURRENT_PERIOD_GET_2'
    EXPORTING
      id_bukrs                 = p_bukrs
   IMPORTING
     ED_CURRENT_YEAR          = lv_year
     ED_CURRENT_PERIOD        = lv_period
   EXCEPTIONS
     INTERNAL_ERROR           = 1
     OTHERS                   = 2.

*== Header
  ls_header-bus_act           = 'RFBU'.               "Betriebswirtschaftlicher Vorgang
  ls_header-username          = 'ICH'.                "Name des Benutzers
  ls_header-header_txt        = 'Test'.               "Belegkopftext
  ls_header-comp_code         = p_bukrs.              "Buchungskreis
  ls_header-doc_date          = sy-datum.             "Belegdatum im Beleg
  ls_header-pstng_date        = sy-datum.             "Buchungsdatum im Beleg
  ls_header-trans_date        = sy-datum.             "Umrechnungsdatum
  ls_header-fisc_year         = lv_year.              "Geschäftsjahr
  ls_header-fis_period        = lv_period.            "Geschäftsmonat
  ls_header-doc_type          = 'SB'.                 "Belegart
  ls_header-vatdate           = sy-datum.             "Steuermeldedatum


*== Buchungszeile Haben
  ls_acc_gl-itemno_acc        = 1.                    "Positionsnummer des Rechnungswesenbeleges
  ls_acc_gl-gl_account        = '0000184040'.         "Sachkonto der Hauptbuchhaltung
  ls_acc_gl-item_text         = 'Postext Haben'.      "Positionstext
  ls_acc_gl-acct_key          = space.                "Vorgangsschlüssel
  ls_acc_gl-acct_type         = 'S'.                  "Kontoart
  ls_acc_gl-costcenter        = ''.
  ls_acc_gl-value_date        = sy-datum.
  APPEND ls_acc_gl TO lt_acc_gl.

*== Buchungszeile Soll
  ls_acc_gl-itemno_acc        = 2.                    "Positionsnummer des Rechnungswesenbeleges
  ls_acc_gl-gl_account        = '0000420000'.         "Sachkonto der Hauptbuchhaltung
  ls_acc_gl-item_text         = 'Postext Soll'  .     "Positionstext
  ls_acc_gl-acct_key          = space.                "Vorgangsschlüssel
  ls_acc_gl-acct_type         = 'S'.                  "Kontoart
  ls_acc_gl-costcenter        = ''.
  ls_acc_gl-value_date        = sy-datum.
  ls_acc_gl-orderid           = 'XYZ'.                "Falls notwendig
  APPEND ls_acc_gl TO lt_acc_gl.

*== Haben Bruttobetrag
  ls_cur_am-itemno_acc        = 1.
  ls_cur_am-currency          = 'EUR'.
  ls_cur_am-currency_iso      = 'EUR'.
  ls_cur_am-amt_doccur        = '11.90-'.
  ls_cur_am-curr_type         = '00'.
  APPEND ls_cur_am TO lt_cur_am.

*== Soll Nettobetrag
  ls_cur_am-itemno_acc        = 2.
  ls_cur_am-currency          = 'EUR'.
  ls_cur_am-currency_iso      = 'EUR'.
  ls_cur_am-amt_doccur        = '10.00'.
  ls_cur_am-curr_type         = '00'.
  APPEND ls_cur_am TO lt_cur_am.

*== Soll Steuerbetrag
  ls_cur_am-itemno_acc        = 3.
  ls_cur_am-currency          = 'EUR'.
  ls_cur_am-currency_iso      = 'EUR'.
  ls_cur_am-amt_doccur        = '01.90'.
  ls_cur_am-amt_base          = '10.00'.
  ls_cur_am-curr_type         = '00'.
  APPEND ls_cur_am TO lt_cur_am.

*== Steuerinformation
  ls_acc_tx-itemno_acc        = 3.
  ls_acc_tx-tax_code          = 'AA'.
  ls_acc_tx-cond_key          = 'MWAS'.
  APPEND ls_acc_tx TO lt_acc_tx.

*== Beleg buchen
  CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
    EXPORTING
      documentheader = ls_header
    TABLES
      accountgl      = lt_acc_gl
      accounttax     = lt_acc_tx
      currencyamount = lt_cur_am
      return         = lt_return.

*== Protokoll
  LOOP AT lt_return INTO ls_return.
    WRITE: / ls_return-row,
             ls_return-message,
           / ls_return-type,
             ls_return-id,
             ls_return-number,
             ls_return-message_v1.
  ENDLOOP.

*== Commit work
  CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
    IMPORTING
      return = ls_return.</pre>
<h2>Neuigkeiten</h2>
<p>Januar 2015: SAP hat den Hinweis 2070697 zu den BAPIs BAPI_ACC_DOCUMENT_POST + BAPI_ACC_DOCUMENT_CHECK veröffentlicht:</p>
<h3>Symptom</h3>
<p>Es wird immer Steuer 0 errechnet oder nichtabzugsfähige Beträge werden nicht verteilt bei Verwendung der Methode gemäß Hinweis 1873588.</p>
<h3>Ursache und Voraussetzungen</h3>
<p>Mit Hinweis 1873588 wurde eine Methode zur Verfügung gestellt zur Ableitung der Steuerdaten für BAPIs. Die Methode soll das Füllen der Steuerdaten für die BAPIs bapi_acc_document_post und bapi_acc_document<strong>_</strong>check erleichtern, und zwar ursprünglich für die Ermittlung der Parameter für die zeilenweise Steuer mit Hinweis 1873588, weil hier grundlegende Änderungen im SAP Standard vorgenommen worden sind. Mit diesem Hinweis wird die Methode erweitert für die Berechnung von Steuern (VAT, Sales und Use Tax) inklusive Nichtabzugsfähigkeit und Anzahlungen. Es kann nun ein Gesamtsteuerbetrag für den Beleg vorgegeben werden, der dann entsprechend der berechneten Steuern verteilt wird. Ein neuer Parameter wurde eingeführt, mit dem der Methode mitgeteilt werden kann, dass der Belegsaldo die fehlende Steuer ist, die verteilt werden soll. Eine Berechnung wird nur für Belege durchgeführt, die keine Mischbelege sind, d.h. z.B. Belege mit Anzahlungen und steuerrelevanten Aufwandpositionen in einem Beleg werden <strong>nicht</strong> unterstützt. Steuern für Indien und Brasilien werden nicht durch diese Methode unterstützt. Direkte Steuern (DIRECT_TAX=&#8217;X&#8217;) werden ebenfalls nicht unterstützt.</p>
<p>Des weiteren sind alle Änderungen inklusive der Änderungen des Hinweises 1873588 auch für SAPKH60000-60404 verfügbar, d.h. die Änderungen sind mit diesem Hinweis runtergezogen worden, wobei die zeilenweise Übergabe der Steuern erst ab SAPKH60405 möglich ist, weil die BAPIS mit SAPKH60405 um den Parameter ITEMNO_TAX erweitert worden sind. Die Serviceklasse ist somit ab SAPKH60000 verfügbar und wird in allen Enhancementpacks ab SAPKH60000 gleich gehalten. Zudem wird der Funktionsbaustein FI_TAX_SERVICES_CALCULATE angeboten, der RFC-fähig ist. Dieser kann über RFC aufgerufen werden und ruft im SAP-System anschließend die obengenannte  Methode FI_TAX_SERVICES=&gt;CALCULATE auf und gibt die Parameter zurück.</p>
<h3>Lösung</h3>
<p>Korrektur</p>
<p>Der Beitrag <a href="/blog/fi-beleg-mit-umsatzsteuer-buchen/">FI-Beleg mit Umsatzsteuer buchen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Testdaten automatisiert erzeugen (Funktionsbaustein)</title>
		<link>/blog/testdaten-automatisiert-erzeugen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 20 Feb 2013 17:23:18 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[testdaten]]></category>
		<category><![CDATA[RFC]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=667</guid>

					<description><![CDATA[<p>Funktionsbausteine haben gegen&#252;ber Methoden (noch) einen riesigen Vorteil. Man kann Testdaten speichern und diese sp&#228;ter wieder laden. Dieses Feature kann man sich bei der Fehleranalyse zu Nutzen machen. Implementieren Sie einfach zu Beginn des Bausteins das Makro, das die &#220;bergebenen Daten speichert.</p>
<p>Der Beitrag <a href="/blog/testdaten-automatisiert-erzeugen/">Testdaten automatisiert erzeugen (Funktionsbaustein)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Funktionsbausteine haben gegenüber Methoden (noch) einen riesigen Vorteil. Man kann Testdaten speichern und diese später wieder laden. Dieses Feature kann man sich bei der Fehleranalyse zu Nutzen machen. Implementieren Sie einfach zu Beginn des Bausteins das Makro, das die Übergebenen Daten speichert.</p>
<h2>Erzeugen von Testdaten</h2>
<p>Um die Testdaten automatisiert speichern zu können, müssen Sie das Include FBGENMAC in Ihre Funktionsgruppe einbinden. Das geht am Einfachsten im TOP-Include:</p>
<p>INCLUDE fbgenmac.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2013/02/se37.png"><img decoding="async" class="alignnone size-full wp-image-1018061" src="https://tricktresor.com/wp-content/uploads/2013/02/se37.png" alt="" width="517" height="240" srcset="/wp-content/uploads/2013/02/se37.png 517w, /wp-content/uploads/2013/02/se37-300x139.png 300w" sizes="(max-width: 517px) 100vw, 517px" /></a></p>
<p>Die erste Anweisung in Ihrem Programm sollte dann heißen:</p>
<pre class="lang:abap decode:true">fbgenmac 'Z_FUNKTIONSBAUSTEIN'.</pre>
<p>Wobei Sie natürlich &#8220;Z_FUNKTIONSBAUSTEIN&#8221; durch den Namen des Funktionsbausteins ersetzen, in dem Sie das Makro einbinden.</p>
<p>Des Weiteren muss noch der User-Parameter FBGENDAT gesetzt sein, damit die Daten der Importparameter auch wirklich gespeichert werden.</p>
<p>Es werden dann Testdaten mit dem Namen GENERATED BY:SAPUSER erzeugt.</p>
<h2 class="head1">TIPP 1</h2>
<p>Das Include kann natürlich einfach kopiert werden und an eigene Bedürfnisse angepasst werden, zum Beispiel um die Abfrage des Parameters zu umgehen oder um ein wichtiges Feld zur Identifikation der &#8220;Testdaten&#8221; als Namen zu verwenden.</p>
<h2 class="head1">TIPP 2</h2>
<p class="text1">Über eine Customizingtabelle könnte man dann noch einfach steuern, für welche Funktionsbausteine eine Protokollierung erfolgen soll. Tauchen vermehrt &#8220;unerklärliche&#8221; oder schwer nachzuvollziehende Fehler auf, kann die Protokollierung eingeschaltet werden.</p>
<h2 class="head1">Löschen von Testdaten</h2>
<p class="text1">Es gibt keinen Funktionsbaustein zum Löschen der Testdaten. Dies passiert ausschließlich in der Testumgebung des Funktionsbausteins:</p>
<pre class="lang:abap decode:true">DELETE FROM eufunc
 WHERE relid  = 'FL'
   AND gruppe = &lt;Name Funktionsgruppe&gt;
   AND nummer = &lt;Nummer des Testdatensatzes&gt;
   AND Name   = &lt;Name des Funktionsbausteins&gt;
   AND seqid  = space.</pre>
<h2 class="head1">Testdaten per RFC Kopieren</h2>
<p class="text1">Mit diesem Funktionsbaustein RS_RFC_TESTDATA_GROUP_TRANSFER können Sie Testdaten einer Funktionsbausteingruppe per RFC aus einem anderen System kopieren.</p>
<p class="text1">Das gleiche funktioniert mit dem Baustein RS_RFC_TESTDATA_TRANSFER_FUNC für einen bestimmten Funktionsbaustein.</p>
<p class="text1">Die Funktion ist aus der Testumgebung des Funktionsbausteins nicht direkt erreichbar. Aber indirekt: Geben Sie den Funktionscode TESTTRANS in das OK-Code-Fenster ein. Auf dem Popup erhalten Sie dann die Parameter, die auch im Funktionsbaustein zu füllen wären:</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" src="/wp-content/uploads/tt_images/screenshots/fb_testtrans.jpg" alt="" /><br />
Funktionscode TESTTRANS in der Testumgebung</td>
</tr>
</tbody>
</table>
<p>Der Beitrag <a href="/blog/testdaten-automatisiert-erzeugen/">Testdaten automatisiert erzeugen (Funktionsbaustein)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Zugriff vom Präsentationsserver auf SAP R/3</title>
		<link>/blog/zugriff-vom-praesentationsserver-auf-sap-r3/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 16 May 2003 10:09:47 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[RFC]]></category>
		<category><![CDATA[Remote Function Call]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=67</guid>

					<description><![CDATA[<p>SAP liefert mit dem SAPGUI alles aus, was Sie ben&#246;tigen, um eine Verbindung vom Pr&#228;sentationsserver zum R/3-Server aufzubauen. Sie k&#246;nnen mit Standardprogrammen Funktionsbausteine aufrufen und das Ergbnis in einer Texttabelle auf dem Client speichern.</p>
<p>Der Beitrag <a href="/blog/zugriff-vom-praesentationsserver-auf-sap-r3/">Zugriff vom Präsentationsserver auf SAP R/3</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>SAP liefert mit dem SAPGUI alles aus, was Sie ben&ouml;tigen, um eine Verbindung vom Pr&auml;sentationsserver zum R/3-Server aufzubauen. Sie k&ouml;nnen mit Standardprogrammen Funktionsbausteine aufrufen und das Ergbnis in einer Texttabelle auf dem Client speichern.<br /><P>Um eine Verbindung vom Windows-Client aufzubauen, m&uuml;ssen Sie das &#8220;Remote Function Call System Development Kit&#8221; &#8212; kurz RFCSDK &#8212; installieren. Dies ist eine Option bei der Installation des SAPGUI.</P><P>Wenn sich im SAPGUI-Verzeichnis das Unterverzeichnis &#8220;rfcsdk&#8221; befindet, dann ist es bereits installiert.</P><P>Im folgenden wollen wir eine kleines Windows-Batch-Programm entwickeln, das eine Verbindung zum SAP-Server aufbaut, ein Programm einliest und dieses anzeigt.</P><P class="head1">Das Batch-Programm</P><P class="sap1">@echo off<BR>set SIDE_INFO=sideinfo<BR>startrfc -F RFC_READ_REPORT <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -E PROGRAM=ZZENNO01&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-T QTAB,80,w=report.txt <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -d&nbsp;MBS<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-u&nbsp;&lt;Benutzername&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -p&nbsp;&lt;Kennwort&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;-c&nbsp;&lt;Client&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-l DE<BR>if %errorlevel% GEQ 1 goto FEHLER<BR>notepad report.txt<BR>goto ENDE<BR>:FEHLER<BR>echo FEHLER (Programm nicht vorhanden??)</P><P class="sap1">:ENDE</P><P class="text1">Ersetzen Sie die in spitzen Klammern stehenden Parameter durch die Parameter Ihres SAP-Systems. Passen Sie auch die Datei <FONT color="#fb2412">sideinfo </FONT>entsprechend an.</P><P class="head1">Die Datei sideinfo</P><P>Um den Parameter &lt;System-ID&gt; verwenden zu k&ouml;nnen, ben&ouml;tigen Sie noch die Datei &#8220;<FONT color="#fb2412">sideinfo</FONT>&#8220;:</P><P class="sap1">### <BR>### SIDEINFO-Datei SAP-Systeme<BR>###</P><P class="sap1">### Mini-SAP-System<BR>DEST=MBS<BR>LU=196.100.100.2<BR>TP=3200<BR>GWHOST=196.100.100.2<BR>GWSERV=3300<BR>PROTOCOL=I<BR></P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/zugriff-vom-praesentationsserver-auf-sap-r3/">Zugriff vom Präsentationsserver auf SAP R/3</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
