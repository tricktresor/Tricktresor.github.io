<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Upload Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/upload/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Thu, 17 Aug 2023 17:01:14 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Upload Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Werte aus Excel per DOI (unsichtbar)</title>
		<link>/blog/werte-aus-excel-per-doi-unsichtbar/</link>
					<comments>/blog/werte-aus-excel-per-doi-unsichtbar/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 05 Feb 2016 16:46:22 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[EXCEL]]></category>
		<category><![CDATA[DOI]]></category>
		<category><![CDATA[Office-Integration]]></category>
		<category><![CDATA[Upload]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[zelle]]></category>
		<category><![CDATA[screen0]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=471093</guid>

					<description><![CDATA[<p>Desktop-Office-Integration - kurz DOI - ermöglicht das Bearbeiten von Office-Dokumenten innerhalb einer SAP-Anwendung. Auf Wunsch kann dies auch inplace passieren. Mit den von SAP zur Verfügung gestellten Klassen lassen sich die gängigsten Arbeiten erledigen. Allerdings erfordern diese auch immer eine Anzeige des Office-Dokumentes.<br />
Ich möchte euch einen Trick vorstellen, bei dem zwar DOI verwendet wird, ihr aber nichts davon mitbekommt...</p>
<p>Der Beitrag <a href="/blog/werte-aus-excel-per-doi-unsichtbar/">Werte aus Excel per DOI (unsichtbar)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Desktop-Office-Integration &#8211; kurz DOI &#8211; ermöglicht das Bearbeiten von Office-Dokumenten innerhalb einer SAP-Anwendung. Auf Wunsch kann dies auch <em>inplace</em> passieren. Mit den von SAP zur Verfügung gestellten Klassen lassen sich die gängigsten Arbeiten erledigen. Allerdings erfordern diese auch immer eine Anzeige des Office-Dokumentes.</p>
<p>Ich möchte euch einen Trick vorstellen, bei dem zwar DOI verwendet wird, ihr aber nichts davon mitbekommt&#8230;</p>
<h2>Bereichsleiter</h2>
<p>Ich stelle euch unten ein Programm vor, das eine Excel-Datei einliest und die Daten abgreift. Der Zugriff erfolgt dabei über <em>Bereiche</em>. In meinem Beispiel-Excel habe ich ein paar Bereich benannt:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/02/2016-02-05_16-13-08.jpg" rel="attachment wp-att-471096"><img fetchpriority="high" decoding="async" class="alignnone size-full wp-image-471096" src="https://tricktresor.com/wp-content/uploads/2016/02/2016-02-05_16-13-08.jpg" alt="2016-02-05_16-13-08" width="764" height="538" srcset="/wp-content/uploads/2016/02/2016-02-05_16-13-08.jpg 764w, /wp-content/uploads/2016/02/2016-02-05_16-13-08-300x211.jpg 300w" sizes="(max-width: 764px) 100vw, 764px" /></a></p>
<p>Gibt es in dem Excel keine Bereiche, so muss ein Bereich definiert werden.</p>
<p>Die Daten werden in einer Tabelle geliefert mit den Feldern:</p>
<ul>
<li>ROW</li>
<li>COLUMN</li>
<li>VALUE</li>
</ul>
<p>Mit einem Zugriff können mehrere Bereiche angefordert werden. In der Bereichstabelle wird zwar übermittelt, wie viele Zeilen und Spalten je Bereich enthalten waren. Leider gibt es in der Wertetabelle keinen Bezug mehr zu den Bereichen.</p>
<p>Hier die Rückgabe der Bereiche:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/02/2016-02-05_16-19-26.jpg" rel="attachment wp-att-471094"><img decoding="async" class="alignnone size-full wp-image-471094" src="https://tricktresor.com/wp-content/uploads/2016/02/2016-02-05_16-19-26.jpg" alt="2016-02-05_16-19-26" width="642" height="161" srcset="/wp-content/uploads/2016/02/2016-02-05_16-19-26.jpg 642w, /wp-content/uploads/2016/02/2016-02-05_16-19-26-300x75.jpg 300w, /wp-content/uploads/2016/02/2016-02-05_16-19-26-640x161.jpg 640w" sizes="(max-width: 642px) 100vw, 642px" /></a></p>
<p>Und hier die Werte dazu:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/02/2016-02-05_16-19-56.jpg" rel="attachment wp-att-471095"><img decoding="async" class="alignnone size-full wp-image-471095" src="https://tricktresor.com/wp-content/uploads/2016/02/2016-02-05_16-19-56.jpg" alt="2016-02-05_16-19-56" width="560" height="557" srcset="/wp-content/uploads/2016/02/2016-02-05_16-19-56.jpg 560w, /wp-content/uploads/2016/02/2016-02-05_16-19-56-150x150.jpg 150w, /wp-content/uploads/2016/02/2016-02-05_16-19-56-300x298.jpg 300w" sizes="(max-width: 560px) 100vw, 560px" /></a></p>
<p>Wenn du sicher gehen möchtest, welcher Bereich mit welchen Werten gefüllt ist, dann solltest du je Bereich eine Abfrage machen.</p>
<p>[notice type=&#8217;alert&#8217;]Achtung! DOI kann nur maximal 9999 Spalten und Zeilen verwalten! Das liegt an der internen Verwendung von CHAR4-Typen für die Speicherung der Zeilen und Spalten.</p>
<p>Wenn du also mehr benötigst, musst du mit mehreren Bereichen arbeiten. [/notice]</p>
<h2>Ablauf</h2>
<p>Die Desktop-Office-Integration wird über Interfaces abgebildet. Alles beginnt jedoch mit einem konkreten Erbauer:</p>
<pre>c_oi_container_control_creator=&gt;get_container_control</pre>
<p>Dieser erzeugt ein Container-Control für das Dokument. Das Control muss an einen Container gebunden werden. Das geschieht bei der Initialisierung:</p>
<pre>lr_control-&gt;init_control( ... ).</pre>
<p>Danach kann man sich das Dokument über eine allgemeine Dokumentenschnittstelle holen. Alle Funktionen, die hier angeboten sind, gelten für Excel- als auch für Word-Dokumente:</p>
<pre>lr_control-&gt;get_document_proxy( ... ).</pre>
<p>Um direkt auf Excel-Funktionen zugreifen zu können, müssen wir uns das konkrete Dokument-Objekt holen:</p>
<pre>lr_document-&gt;get_spreadsheet_interface( IMPORTING sheet_interface = lr_spreadsheet ).</pre>
<p>Mit dieser Klasse haben wir nun endlich Excel-spezifische Funktionen, wie zum Beispiel der Zugriff auf die Tabellenzellen:</p>
<pre>lr_spreadsheet-&gt;get_ranges_data( ... ).</pre>
<h2>Anzeige unterdrücken</h2>
<p>Es gibt bei diesem Verfahren meines Wissens keine Möglichkeit, die Nutzung unsichtbar für den Benutzer ablaufen zu lassen. Mit einem Trick gelingt es dennoch&#8230;</p>
<p>Das Dynpro, das in Listen Verwendet wird, ist normalerweise das Dynpro CL_GUI_CONTAINER=&gt;SCREEN0. Wenn du also etwas in diesen Container einhängst, dann wird er Bildschirmfüllend angezeigt: <a href="https://tricktresor.com/blog/screen0/">Beitrag SCREEN0</a>.</p>
<p>Für verschiedene Anwendungsfälle gibt es jedoch weitere SCREENS. Ich glaube, mit jedem Popup-Level wird der SCREEN hochgezählt. Das können wir uns zu nutze machen, in dem wir das DOI-Control einfach an einen Screen hängen, der nicht angezeigt wird: CL_GUI_CONTAINER=&gt;SCREEN9</p>
<pre class="">CALL METHOD lr_control-&gt;init_control
  EXPORTING
    inplace_enabled       = 'X'
    no_flush              = 'X'
    r3_application_name   = 'Test DOI'
    parent                = cl_gui_container=&gt;screen9
  IMPORTING
    error                 = error
  EXCEPTIONS
    OTHERS                = 1.</pre>
<p>Wir können also trotzdem eine WRITE-Ausgabe machen. Die Ausgabe erfolgt also quasi parallel.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/02/2016-02-05_16-26-04.jpg" rel="attachment wp-att-471164"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-471164" src="https://tricktresor.com/wp-content/uploads/2016/02/2016-02-05_16-26-04.jpg" alt="2016-02-05_16-26-04" width="628" height="326" srcset="/wp-content/uploads/2016/02/2016-02-05_16-26-04.jpg 628w, /wp-content/uploads/2016/02/2016-02-05_16-26-04-300x156.jpg 300w" sizes="(max-width: 628px) 100vw, 628px" /></a></p>
<p><a href="https://tricktresor.com/wp-content/uploads/2016/02/doi_test.txt">Den kompletten Quelltext findest du hier</a>.</p>
<h2></h2>
<p>Der Beitrag <a href="/blog/werte-aus-excel-per-doi-unsichtbar/">Werte aus Excel per DOI (unsichtbar)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/werte-aus-excel-per-doi-unsichtbar/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Bankleitzahlen einlesen</title>
		<link>/blog/bankleitzahlen-einlesen/</link>
					<comments>/blog/bankleitzahlen-einlesen/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 23 Jan 2015 10:40:43 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Finanz- und Rechnungswesen]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Upload]]></category>
		<category><![CDATA[Download]]></category>
		<category><![CDATA[bank]]></category>
		<category><![CDATA[blz]]></category>
		<category><![CDATA[bundesbank]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=5224</guid>

					<description><![CDATA[<p>Das Einlesen der Bankleitzahlen ist dabei gar nicht die größte Herausforderung, sondern das Finden der aktuellen Bankleitzahlendatei. Markus Völker hat hierfür eine kleine Klasse geschrieben, mit der 1.die URL der Bankleitzahlendatei ermittelt wird 2.Die Bankleitzahlen ins SAP-System eingelesen werden.</p>
<p>Der Beitrag <a href="/blog/bankleitzahlen-einlesen/">Bankleitzahlen einlesen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mal wieder ein Thema aus dem FI-Bereich. Diesmal geht es um die Aktualisierung der Bankleitzahlen. Die Bundesbank bietet die aktuellen Bankleitzahlen zum Download an. Weitere Infos gibt es <a title="Bankleitzahlen" href="http://www.bundesbank.de/Navigation/DE/Aufgaben/Unbarer_Zahlungsverkehr/Bankleitzahlen/bankleitzahlen.html">hier</a>.</p>
<p>Das Einlesen der Bankleitzahlen ist dabei gar nicht die größte Herausforderung, sondern das Finden der aktuellen Bankleitzahlendatei. Markus Völker hat hierfür eine kleine Klasse geschrieben, mit der</p>
<ol>
<li>die URL der Bankleitzahlendatei ermittelt wird</li>
<li>Die Bankleitzahlen ins SAP-System eingelesen werden</li>
</ol>
<h2>Verbesserungspotential</h2>
<p>Die Klasse ermittelt und liest die Bankleitzahlen ein. Eventuelle wäre es jedoch wünschenswert zu sehen, welche und wie viele Debitoren von den Änderungen betroffen sind. Es müsste dafür eine Prüfung gegen die Tabelle KNBK gemacht werden.</p>
<h2>Proxy</h2>
<p>Falls du dich mit User und Kennwort am Proxy anmelden musst, dann muss du nach der Methode cl_http_client=&gt;create_by_url den folgenden Aufruf einbauen:</p>
<pre>lo_client-&gt;propertytype_logon_popup = http_client-&gt;co_disabled.
call method lo_client-&gt;authenticate
     exporting
        username  = 'myProxyUser'
        password  = 'myProxyPassword'.</pre>
<p>Dementsprechend muss der CONSTRUCTOR um die beiden Parameter username und password erweitert werden.</p>
<h2>Coding</h2>
<pre>REPORT  zrep_bbank_vs_bnka.
**&amp;---------------------------------------------------------------------*
**&amp; Report  ZREP_BBANK_VS_BNKA
**&amp;
**&amp;---------------------------------------------------------------------*
**&amp; Dieser Report demonstriert die Benutzung der Klasse lcl_cmp_bnka_to_bbank
**&amp; Author: Markus Völker
**&amp;---------------------------------------------------------------------*


PARAMETERS p_proxy TYPE string LOWER CASE DEFAULT '123.100.100.88'.
PARAMETERS p_pport TYPE string            DEFAULT `80`.


CLASS lcl_cmp_bnka_to_bbank DEFINITION.
  PUBLIC SECTION.

    TYPES:
      BEGIN OF mts_bnka_result,
             status TYPE char01,
             bankl  TYPE bankl,
      END OF mts_bnka_result .
    TYPES:
      mtt_bnka_result TYPE STANDARD TABLE OF mts_bnka_result WITH DEFAULT KEY .

**Vergleiche:
**http://www.bundesbank.de/Redaktion/DE/Downloads/Aufgaben/Unbarer_Zahlungsverkehr/Bankleitzahlen/merkblatt_bankleitzahlendatei.pdf?__blob=publicationFile
    TYPES:
      BEGIN OF mts_bundesbank,
        blz(8), "Bankleitzahl
        merkmal(1), "Merkmal, ob bankleitzahlführender Zahlungsdienstleister ("1") oder nicht ("2")
        bezeichnung(58), "Bezeichnung des Zahlungsdienstleisters
        plz(5), "Postleitzahl
        ort(35), "Ort
        kurzbezeichnung(27), "Kurzbezeichnung des Zahlungsdienstleisters mit Ort
        pan(5), "Institutsnummer für PAN
        bic(11), "Business Identifier Code (BIC)
        pz(2), "Kennzeichen für Prüfzifferberechnungsmethode
        datensatz(6), "Nummer des Datensatzes
        aenderungs(1), "Änderungskennzeichen
        blz_loesch(1), "Hinweis auf eine beabsichtigte Bankleitzahllöschung
        nach_blz(8), "Hinweis auf Nachfolge-Bankleitzahl
        knz_iban(6), "Kennzeichen für die IBAN-Regel
      END OF mts_bundesbank .
    TYPES:
      mtt_bundesbank TYPE STANDARD TABLE OF mts_bundesbank WITH DEFAULT KEY .

    CONSTANTS  mc_bank_changes  TYPE char01 VALUE 'C'.     "#EC NOTEXT "Die Bank ist zur Änderung vorgesehen
    CONSTANTS  mc_bank_correct  TYPE char01 VALUE 'O'.     "#EC NOTEXT "Die Bank ist in Ordnung
    CONSTANTS  mc_bank_missing  TYPE char01 VALUE 'M'.     "#EC NOTEXT "Die Bank existiert nicht mehr
    CLASS-DATA mv_proxy_host    TYPE string .              "Proxy IP
    CLASS-DATA mv_proxy_service TYPE string .              "Proxy Port
    DATA       mt_bbank_datei   TYPE mtt_bundesbank .      "Datei der Bundesbank

    METHODS constructor
      IMPORTING
        iv_proxy_host    TYPE string OPTIONAL
        iv_proxy_service TYPE string OPTIONAL .
    METHODS set_bbank_file
      IMPORTING
        iv_path        TYPE csequence OPTIONAL
      EXPORTING
        ev_subrc       TYPE sy-subrc
        ev_err_message TYPE string.
    TYPE-POOLS abap .
    METHODS compare_bbank_with_bnka
      IMPORTING
        iv_with_missing      TYPE flag DEFAULT abap_true
        iv_with_changes      TYPE flag DEFAULT abap_true
        iv_with_correct      TYPE flag DEFAULT abap_true
      RETURNING
        VALUE(rt_result_tab) TYPE mtt_bnka_result .
  PROTECTED SECTION.
    METHODS get_bbank_file_from_web
      EXPORTING
        ev_subrc       TYPE sy-subrc
        ev_err_message TYPE string
        et_filetab     TYPE table .

ENDCLASS.

CLASS lcl_cmp_bnka_to_bbank IMPLEMENTATION.


* ---------------------------------------------------------------------------------------+
* | Instance Public Method COMPARE_BBANK_WITH_BNKA
* +-------------------------------------------------------------------------------------------------+
* | [---&gt;] IV_WITH_MISSING                TYPE        FLAG (default =ABAP_TRUE)
* | [---&gt;] IV_WITH_CHANGES                TYPE        FLAG (default =ABAP_TRUE)
* | [---&gt;] IV_WITH_CORRECT                TYPE        FLAG (default =ABAP_TRUE)
* | [&lt;-()] RT_RESULT_TAB                  TYPE        MTT_BNKA_RESULT
* +--------------------------------------------------------------------------------------
  METHOD compare_bbank_with_bnka.

    DATA: lt_bnka  TYPE TABLE OF bnka,
          lv_subrc TYPE sy-subrc.

    FIELD-SYMBOLS: &lt;bnka&gt;   TYPE bnka,
                   &lt;bbank&gt;  TYPE mts_bundesbank,
                   &lt;result&gt; TYPE mts_bnka_result.

    DEFINE append_result.
      append initial line to rt_result_tab assigning &lt;result&gt;.
      &lt;result&gt;-status = &amp;1.
      &lt;result&gt;-bankl  = &amp;2.
    END-OF-DEFINITION.

* Wenn wir noch keine Daten haben, holen wir halt welche
    IF mt_bbank_datei IS INITIAL.
      set_bbank_file( IMPORTING ev_subrc = lv_subrc ).
      IF lv_subrc &lt;&gt; 0.
        RETURN.
      ENDIF.
    ENDIF.

* Alle Banken holen
    SELECT * FROM bnka INTO TABLE lt_bnka WHERE banks = 'DE'.

* Vergleich der Daten
*/--------------------------------------------------------------------------------\
    LOOP AT lt_bnka ASSIGNING &lt;bnka&gt;.
*   Lese die Vergleichsdaten
      READ TABLE mt_bbank_datei ASSIGNING  WITH KEY blz = &lt;bnka&gt;-bnklz.  "#EC WARNOK.
      IF sy-subrc &lt;&gt; 0.
*     Die Bank existiert nicht mehr
        append_result mc_bank_missing &lt;bnka&gt;-bankl.
      ELSEIF -blz_loesch = '1'.
*     Die Bank ist zum Löschen vorgemerkt
        append_result mc_bank_changes &lt;bnka&gt;-bankl.
      ELSE.
*     Keine Veränderungen festzustellen
        append_result mc_bank_correct &lt;bnka&gt;-bankl.
      ENDIF.
    ENDLOOP.
*\--------------------------------------------------------------------------------/

* Lösche ungewünschtes
*/--------------------------------------------------------------------------------\
    IF iv_with_missing = abap_false.
      DELETE rt_result_tab WHERE status = mc_bank_missing.
    ENDIF.
    IF iv_with_changes = abap_false.
      DELETE rt_result_tab WHERE status = mc_bank_changes.
    ENDIF.
    IF iv_with_correct = abap_false.
      DELETE rt_result_tab WHERE status = mc_bank_correct.
    ENDIF.
*\--------------------------------------------------------------------------------/

  ENDMETHOD.                                               "compare_bbank_with_bnka


* ---------------------------------------------------------------------------------------+
* | Instance Public Method ZZ_CMP_BNKA_TO_BBANK-&gt;CONSTRUCTOR
* +-------------------------------------------------------------------------------------------------+
* | [---&gt;] IV_PROXY_HOST                  TYPE        STRING(optional)
* | [---&gt;] IV_PROXY_SERVICE               TYPE        STRING(optional)
* +--------------------------------------------------------------------------------------
  METHOD constructor.
* Das hier ist nur die Erinnerung, eventuell einen Proxy setzen zu müssen
    mv_proxy_host    = iv_proxy_host .
    mv_proxy_service = iv_proxy_service.
  ENDMETHOD.                                               "constructor


* ---------------------------------------------------------------------------------------+
* | Instance Protected Method GET_BBANK_FILE_FROM_WEB
* +-------------------------------------------------------------------------------------------------+
* | [&lt;---] EV_SUBRC                       TYPE        SY-SUBRC
* | [&lt;---] EV_ERR_MESSAGE                 TYPE        STRING
* | [&lt;---] ET_FILETAB                     TYPE        TABLE
* +--------------------------------------------------------------------------------------
  METHOD get_bbank_file_from_web.
* Hole die Datei der Bundesbank per HTTP
    DATA: lv_url     TYPE string,
          lv_datvon  TYPE d,
          lv_datbis  TYPE d,
          lo_http    TYPE REF TO if_http_client,
          lv_recdata TYPE xstring,
          lt_tmpbin  TYPE TABLE OF raw256,
          lv_tmplen  TYPE i.

*******************
* DATUMSBERECHNUNG
*******************

*     Monat/Jahr von:
*/--------------------------------------------------------------------------------\
    lv_datvon = sy-datum.
    DO.
      lv_datvon = cl_hrpad_date_computations=&gt;subtract_months_from_date( start_date = lv_datvon               " Datum von dem Monate subtrahiert werden
                                                                         months     = 1  ).                   " Anzahl Monate
      IF lv_datvon+4(2) MOD 3 = 0.
        EXIT.
      ENDIF.
    ENDDO.
*     Tag von ...
    lv_datvon+6(2) = '01'.
    DO.
*      Finde den ersten Samstag im Monat ...
      IF cl_hrpad_date_computations=&gt;get_weekday_number( lv_datvon ) = 6.            "Samstag
        EXIT.
      ENDIF.
      lv_datvon = lv_datvon + 1.
    ENDDO.
    lv_datvon = lv_datvon + 2.                             "Wir brauchen aber den Montag
*\--------------------------------------------------------------------------------/
*     Monat/Jahr bis:
*/--------------------------------------------------------------------------------\
    lv_datbis = sy-datum.
    DO.
      IF lv_datbis+4(2) MOD 3 = 0.
        EXIT.
      ENDIF.
      lv_datbis = cl_hrpad_date_computations=&gt;add_months_to_date( start_date = lv_datbis               " Datum von dem Monate subtrahiert werden
                                                                  months     = 1  ).                   " Anzahl Monate
    ENDDO.
*     Tag von ...
    lv_datbis+6(2) = '01'.
    DO.
*      Finde den ersten Samstag im Monat ...
      IF cl_hrpad_date_computations=&gt;get_weekday_number( lv_datbis ) = 6.            "Samstag
        EXIT.
      ENDIF.
      lv_datbis = lv_datbis + 1.
    ENDDO.
    lv_datbis = lv_datbis + 1.                             "geht bis Sonntag
*\--------------------------------------------------------------------------------/

* URL Zusammenbauen
*/--------------------------------------------------------------------------------\
    lv_url =    'http://www.bundesbank.de/Redaktion/DE/Downloads/Aufgaben/Unbarer_Zahlungsverkehr/Bankleitzahlen/' ##no_text
             &amp;&amp; |{ lv_datbis(4) }_{ lv_datbis+4(2) }_{ lv_datbis+6(2) }/blz_{ lv_datvon(4) }_{ lv_datvon+4(2) }_{ lv_datvon+6(2) }_txt.txt?__blob=publicationFile|.
*\--------------------------------------------------------------------------------/

*******************
* HTTP - Verbindung
*******************
* Erstellen des Verbindungsobjekts
    cl_http_client=&gt;create_by_url( EXPORTING url           = lv_url
                                             proxy_host    = mv_proxy_host               " logische Destination (Wird bei Funktionsaufruf angegeben)
                                             proxy_service = mv_proxy_service            " Portnummer
                                   IMPORTING
                                             client        = lo_http ).             " HTTP Client Abstraction

* Request senden
    lo_http-&gt;send( EXCEPTIONS OTHERS = 1 ).
    IF sy-subrc &lt;&gt; 0.
      lo_http-&gt;get_last_error( IMPORTING code    = ev_subrc
                                         message = ev_err_message ).
      RETURN.
    ENDIF.

* Daten annehmen
    lo_http-&gt;receive( EXCEPTIONS OTHERS = 1 ).
    IF sy-subrc &lt;&gt; 0.
      lo_http-&gt;get_last_error( IMPORTING code    = ev_subrc
                                         message = ev_err_message ).
      RETURN.
    ENDIF.

* Datei reinladen...
    lv_recdata = lo_http-&gt;response-&gt;get_data( ).
    IF lv_recdata IS INITIAL.
      ev_subrc = 1024.
      RETURN.
    ENDIF.

* Daten in eine "Datei" - Tabelle konvertieren
*/--------------------------------------------------------------------------------\
    CALL FUNCTION 'SCMS_XSTRING_TO_BINARY'
      EXPORTING
        buffer        = lv_recdata
      IMPORTING
        output_length = lv_tmplen
      TABLES
        binary_tab    = lt_tmpbin.

    CALL FUNCTION 'SCMS_BINARY_TO_TEXT'
      EXPORTING
        input_length = lv_tmplen
      TABLES
        binary_tab   = lt_tmpbin
        text_tab     = et_filetab.
*\--------------------------------------------------------------------------------/

  ENDMETHOD.                                               "GET_BBANK_FILE_FROM_HTML


* ---------------------------------------------------------------------------------------+
* | Instance Public Method ZZ_CMP_BNKA_TO_BBANK-&gt;SET_BBANK_FILE
* +-------------------------------------------------------------------------------------------------+
* | [---&gt;] IV_PATH                        TYPE        CSEQUENCE(optional)
* | [&lt;---] EV_SUBRC                       TYPE        SY-SUBRC
* | [&lt;---] EV_ERR_MESSAGE                 TYPE        STRING
* | [EXC!] FAILED_VIA_UPLOAD
* +--------------------------------------------------------------------------------------
  METHOD set_bbank_file.

    DATA: lt_filetab TYPE TABLE OF char512.
    FIELD-SYMBOLS:  &lt;file&gt;  TYPE char512,
                    &lt;bbank&gt; TYPE mts_bundesbank.

    IF iv_path IS NOT INITIAL AND cl_gui_frontend_services=&gt;file_exist( iv_path ) = abap_true.
*   Datei einfach vom Frontend hochladen
      cl_gui_frontend_services=&gt;gui_upload( EXPORTING
                                              filename = iv_path               " Name der Datei
                                            CHANGING
                                              data_tab = lt_filetab            " Übergabetabelle für Datei-Inhalt
                                            EXCEPTIONS
                                              OTHERS   = 1 ).
      ev_subrc = sy-subrc.
    ELSE.
*   Datei per HTTP holen
      me-&gt;get_bbank_file_from_web( IMPORTING ev_subrc       = ev_subrc
                                             ev_err_message = ev_err_message
                                             et_filetab     = lt_filetab ).
    ENDIF.

* Wenn die Datei leer ist machen wir hier nichts
    IF lt_filetab IS INITIAL.
      RETURN.
    ENDIF.

* In die richtige Struktur kippen:
    LOOP AT lt_filetab ASSIGNING &lt;file&gt;.
      APPEND INITIAL LINE TO mt_bbank_datei ASSIGNING &lt;bbank&gt;.
      &lt;bbank&gt; = &lt;file&gt;.
    ENDLOOP.
  ENDMETHOD.                                               "set_bbank_file
ENDCLASS.

DATA gr_bbank  TYPE REF TO lcl_cmp_bnka_to_bbank.
DATA gv_subrc  TYPE sy-subrc.
DATA gv_err    TYPE string.
DATA gt_result TYPE lcl_cmp_bnka_to_bbank=&gt;mtt_bnka_result.
FIELD-SYMBOLS  TYPE lcl_cmp_bnka_to_bbank=&gt;mts_bnka_result.


START-OF-SELECTION.

* Objekt instanziieren
  CREATE OBJECT gr_bbank
    EXPORTING
      iv_proxy_host    = p_proxy                           " logische Destination
      iv_proxy_service = p_pport.                          " Portnummer

* Datei innerhalb der Klasse organisieren
  gr_bbank-&gt;set_bbank_file( IMPORTING
                             ev_subrc       = gv_subrc     " Rückgabewert von ABAP-Anweisungen
                             ev_err_message = gv_err       " Error - Message
                           ).
  IF gv_subrc &lt;&gt; 0.
    WRITE: / gv_err.
    RETURN.
  ENDIF.

* Vergleich der Daten aus der Bundesbank und SAP holen
  gt_result = gr_bbank-&gt;compare_bbank_with_bnka( ).

* primitive Ausgabe... :)
  LOOP AT gt_result ASSIGNING .
    CASE -status.
      WHEN lcl_cmp_bnka_to_bbank=&gt;mc_bank_missing.
        WRITE: / 'MISSING'.
      WHEN lcl_cmp_bnka_to_bbank=&gt;mc_bank_changes.
        WRITE: / 'CHANGING'.
      WHEN lcl_cmp_bnka_to_bbank=&gt;mc_bank_correct.
        WRITE: /  'OK'.
    ENDCASE.
    WRITE: 12 '|', -bankl.
  ENDLOOP.</pre>
<p>Der Beitrag <a href="/blog/bankleitzahlen-einlesen/">Bankleitzahlen einlesen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/bankleitzahlen-einlesen/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Beliebige XML-Datei in interne Tabelle einlesen</title>
		<link>/blog/beliebige-xml-datei-in-interne-tabelle-einlesen/</link>
					<comments>/blog/beliebige-xml-datei-in-interne-tabelle-einlesen/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 24 Sep 2014 17:05:16 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[field-symbols]]></category>
		<category><![CDATA[Debugger]]></category>
		<category><![CDATA[cl_xml_document]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[Upload]]></category>
		<category><![CDATA[xml]]></category>
		<category><![CDATA[parser]]></category>
		<category><![CDATA[itab]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=5081</guid>

					<description><![CDATA[<p>Viele Daten werden im XML-Format ausgetauscht. Um die Daten in SAP verarbeiten zu können, muss man parsen oder eine entsprechende Transformation "programmieren". Mit XML tue ich mich manchmal etwas schwer und bin daher froh über jede Vereinfachung.</p>
<p>Mithilfe eines kleinen generischen Programms ist es einfach möglich, die folgende XML-Datei in eine interne Tabelle zu laden.</p>
<p>Der Beitrag <a href="/blog/beliebige-xml-datei-in-interne-tabelle-einlesen/">Beliebige XML-Datei in interne Tabelle einlesen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Viele Daten werden im XML-Format ausgetauscht. Um die Daten in SAP verarbeiten zu können, muss man parsen oder eine entsprechende Transformation &#8220;programmieren&#8221;. Mit XML tue ich mich manchmal etwas schwer und bin daher froh über jede Vereinfachung.</p>
<p>Mithilfe eines kleinen generischen Programms ist es einfach möglich, die folgende XML-Datei in eine interne Tabelle zu laden:</p>
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;hierarchie1&gt;
&lt;hierarchie2&gt;Beispiel XML&lt;/hierarchie2&gt;
&lt;hierarchie2&gt;Tricktresor&lt;/hierarchie2&gt;
&lt;hierarchie2&gt;Enno Wulff&lt;/hierarchie2&gt;
&lt;/hierarchie1&gt;
</pre>
<figure id="attachment_5082" aria-describedby="caption-attachment-5082" style="width: 487px" class="wp-caption alignnone"><a href="https://tricktresor.com/wp-content/uploads/2014/09/xml_itab.png"><img loading="lazy" decoding="async" class="wp-image-5082 size-full" src="https://tricktresor.com/wp-content/uploads/2014/09/xml_itab.png" alt="Interne Tabelle mit XML-Daten" width="487" height="110" srcset="/wp-content/uploads/2014/09/xml_itab.png 487w, /wp-content/uploads/2014/09/xml_itab-300x67.png 300w" sizes="(max-width: 487px) 100vw, 487px" /></a><figcaption id="caption-attachment-5082" class="wp-caption-text">Screenshot aus dem Debugger</figcaption></figure>
<p>Man sieht deutlich, dass die einzelnen Tags der XML-Datei sequentiell in die Tabelle übernommen wurden. Für viele Anwendungsfälle dürfte das für die weitere Verarbeitung ausreichen.</p>
<p>[notice type=&#8217;info&#8217;]Dieses Programm erzeugt lediglich die Transformation von der XML-Struktur in eine interne Tabelle. Es erfolgt keine Ausgabe![/notice]</p>
<h2>Coding</h2>
<pre>REPORT.
TYPES tyt_tab_xml TYPE TABLE OF smum_xmltb.

DATA: gv_xml_xstring  TYPE          xstring,
      gt_xml_tab      TYPE TABLE OF smum_xmltb,
      gv_filename     TYPE          localfile,
      go_xml_document TYPE REF TO   cl_xml_document,
      gv_subrc        TYPE          sy-subrc,
      gv_size         TYPE          sy-tabix.


START-OF-SELECTION.

  PERFORM display_popup CHANGING gv_filename.

  PERFORM upload_xml USING gv_filename
                     CHANGING go_xml_document
                              gv_subrc.
  IF gv_subrc = 0.

    PERFORM parse_to_xstring USING go_xml_document
                             CHANGING gv_xml_xstring
                                      gv_size
                                      gv_subrc.
    IF gv_subrc = 0.
      PERFORM parse_xml_to_itab USING gv_xml_xstring
                                CHANGING gt_xml_tab.

    ELSE.
      EXIT.
    ENDIF.
  ELSE.
    EXIT.
  ENDIF.

END-OF-SELECTION.

FORM display_popup CHANGING cv_filename TYPE localfile.

  DATA: lt_filetable TYPE filetable,
        lv_anz_dat   TYPE i.

  cl_gui_frontend_services=&gt;file_open_dialog(
    EXPORTING
      window_title            =     'Wählen Sie eine XML.Datei aus'    " Titel des Datei-Öffnen Dialogs
      default_filename        =     'C:\test.xml'
      initial_directory       =     'C:\' " Ausgangsverzeichnis
  CHANGING
      file_table              = lt_filetable   " Tabelle, die selektierte Dateien enthält
      rc                      = lv_anz_dat     " Rückgabewert: Anzahl Dateien oder -1 falls Fehler auftritt
  EXCEPTIONS
    OTHERS                  = 5
    ).

  READ TABLE lt_filetable INTO cv_filename INDEX 1.

ENDFORM.

FORM upload_xml USING iv_filename        TYPE localfile
                CHANGING co_xml_document TYPE REF TO cl_xml_document
                         cv_subrc        TYPE sy-subrc.
*== create the object
  CREATE OBJECT co_xml_document.

*== Upload xml file
  co_xml_document-&gt;import_from_file(
  EXPORTING
    filename = iv_filename
    RECEIVING
    retcode = cv_subrc  ).

ENDFORM.

FORM parse_to_xstring USING io_xml_document  TYPE REF TO cl_xml_document
                      CHANGING cv_xml_string TYPE xstring
                               cv_size       TYPE sy-tabix
                               cv_subrc      TYPE sy-subrc.
*== Convert to xstring
  CALL METHOD io_xml_document-&gt;render_2_xstring
    IMPORTING
      retcode = cv_subrc      " Returncode
      stream  = cv_xml_string " XString (STREAM)
      size    = cv_size.      " Anzahl Zeichen
ENDFORM.

FORM parse_xml_to_itab USING iv_xml_string TYPE xstring
                       CHANGING ct_xml_tab TYPE tyt_tab_xml.

  DATA: lt_return TYPE TABLE OF bapiret2.

*== Convert XML to itab
  CALL FUNCTION 'SMUM_XML_PARSE'
    EXPORTING
      xml_input = iv_xml_string
    TABLES
      xml_table = ct_xml_tab
      return    = lt_return.
  BREAK-POINT.

ENDFORM.</pre>
<h2>Übertragen der generischen in eine interne Tabelle</h2>
<p>In unserem Beispiel muss die interne Tabelle das Feld &#8220;HIERARCHIE2&#8221; besitzen. Die Zuweisung aller XML-Werte der &#8220;Hierarchiestufe 2&#8221; werden dann dem Feld &#8220;ITAB-HIERARCHIE2&#8221; zugewiesen.</p>
<p>[notice type=&#8217;info&#8217;]Der Aufruf der Routine muss noch hinzugefügt werden. Die zu übergebene interne Tabelle kann jeden beliebigen Typ haben. In diesem Beispiel wird der Typ TYT_ITAB verwendet.[/notice]</p>
<pre>FORM build_itab USING it_xml_tab     TYPE tyt_tab_xml
             CHANGING itab TYPE tyt_itab.

  FIELD-SYMBOLS: &lt;ls_data_tab&gt; LIKE LINE OF itab,
                 &lt;ls_xml_tab&gt;  LIKE LINE OF it_xml_tab,
                 &lt;lv_value&gt;    TYPE         data.

  LOOP AT it_xml_tab ASSIGNING &lt;ls_xml_tab&gt; WHERE hier EQ 2.
    TRANSLATE &lt;ls_xml_tab&gt;-cname TO UPPER CASE.
    IF &lt;ls_xml_tab&gt;-cname = 'HIERARCHIE2'.
      APPEND INITIAL LINE TO itab ASSIGNING &lt;ls_data_tab&gt;.
    ENDIF.
    ASSIGN COMPONENT &lt;ls_xml_tab&gt;-cname OF STRUCTURE &lt;ls_data_tab&gt; TO &lt;lv_value&gt;.
    &lt;lv_value&gt; = &lt;ls_xml_tab&gt;-cvalue.
  ENDLOOP.
ENDFORM..</pre>
<p>Der Beitrag <a href="/blog/beliebige-xml-datei-in-interne-tabelle-einlesen/">Beliebige XML-Datei in interne Tabelle einlesen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/beliebige-xml-datei-in-interne-tabelle-einlesen/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>SAPlink</title>
		<link>/blog/saplink/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 20 Feb 2014 16:19:19 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Upload]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4476</guid>

					<description><![CDATA[<p>Das Open Source Projekt SAPlink ist eine sehr gute Alternative zu dem SAP-Transportsystem. Mithilfe von SAPlink lassen sich die meisten Repository-Objekte (Klassen, Programme, Datenelemente etc.) komplett exportieren und in einem anderen System wieder importieren. </p>
<p>Der Beitrag <a href="/blog/saplink/">SAPlink</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Das Open Source Projekt <a title="SAPlink | code.google.com" href="https://code.google.com/p/saplink/">SAPlink</a> erlaubt es, die meisten Repository-Objekt in einem <em>nugget</em> auf dem Frontend zu exportieren und in einem anderen System wieder zu importieren.</p>
<p><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4468" alt="nugget3" src="https://tricktresor.com/wp-content/uploads/2014/02/02_20_13_02_26.jpg" width="300" height="133" /></p>
<h2>Nuggets</h2>
<p>Ein Nugget ist einem XML-Datei, die von SAPlink auf dem Frontend erzeugt wird. Diese Datei kann mit einem normalen Text-Editor bearbeitet und geändert werden. Die Datei kann in einem beliebigen anderen SAP-System auf dem SAPlink installiert ist wieder importiert werden.</p>
<p>Eine schöne Beschreibung findet sich auf dem <a title="SAPlink-Doku | Berater-Wiki" href="http://www.berater-wiki.de/index.php?title=SAPlink">Berater-Wiki</a>.</p>
<p>Alle Objekte eines nuggets werden importiert und müssen nachträglich manuell aktiviert werden. Beim Upload kann ein Paketname angegeben werden, dem die neuen Objekte zugeordnet werden sollen.</p>
<h2>SAPlink-Objekte</h2>
<p>Die meisten Repository-Objekte werden von SAPlink von Haus aus unterstützt. Es gibt jedoch einige Objekte, die nachträglich installiert werden müssen. Eine Liste dieser Plugins findet sich hier:</p>
<p>https://www.assembla.com/spaces/saplink-plugins/wiki</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/saplink/">SAPlink</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Pfadauswahl mit DIRECTORY_BROWSE</title>
		<link>/blog/pfadauswahl-mit-directory-browse/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 06 Feb 2014 13:46:59 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[f4]]></category>
		<category><![CDATA[value-request]]></category>
		<category><![CDATA[browse]]></category>
		<category><![CDATA[directory]]></category>
		<category><![CDATA[Verzeichnis]]></category>
		<category><![CDATA[suchhilfe]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[suchhilfe-exit]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<category><![CDATA[Upload]]></category>
		<category><![CDATA[Download]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4372</guid>

					<description><![CDATA[<p>Hier demonstriere ich die Verwendung der Methode CL_GUI_FRONTEND_SERVICES=>DIRECTORY_BROWSE. Eigentlich einfach zu verwenden, aber für die F4-Hilfe ist ein kleiner Trick notwendig. Zudem zeige ich, wie die Methode in einem Suchhilfe-Exit verwendet werden kann.</p>
<p>Der Beitrag <a href="/blog/pfadauswahl-mit-directory-browse/">Pfadauswahl mit DIRECTORY_BROWSE</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Um einen Dateipfad auf dem Frontend auszuwählen, gibt es die Methode DIRECTORY_BROWSE der Klasse CL_GUI_FRONTEND_SERVICES. Um sie jedoch in der F4-Hilfe eines Reports sinnvoll verwenden zu können, muss man sich noch eines Tricks bedienen. Das Problem: Bei Aufruf der F4-Hilfe steht der Wert des Parameters für den die F4-Hilfe aufgerufen wurde, nicht zur Verfügung.</p>
<p>Aus diesem Grund muss der Feldinhalt explizit mit Hilfe des Funktionsbausteins DYNP_VALUES_READ gelesen werden.</p>
<p><img loading="lazy" decoding="async" width="675" height="422" class="alignnone size-full wp-image-4374" src="https://tricktresor.com/wp-content/uploads/2014/02/img_52f391e706cfb.png" alt="" srcset="/wp-content/uploads/2014/02/img_52f391e706cfb.png 675w, /wp-content/uploads/2014/02/img_52f391e706cfb-300x187.png 300w, /wp-content/uploads/2014/02/img_52f391e706cfb-624x390.png 624w" sizes="(max-width: 675px) 100vw, 675px" /></p>
<h2>Coding</h2>
<pre>REPORT z_test_browse_directory.

*== SELECTION SCREEN
PARAMETERS p_path  TYPE text200 OBLIGATORY LOWER CASE.

*== Help Value path
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  PERFORM f4_path.

*== init
INITIALIZATION.
  PERFORM get_download_path.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  get_download_path
*&amp;---------------------------------------------------------------------*
FORM get_download_path.

*== local data
  DATA lv_upload_path    TYPE string.
  DATA lv_download_path  TYPE string.

*== get current download path
  CALL METHOD cl_gui_frontend_services=&gt;get_upload_download_path
    CHANGING
      upload_path   = lv_upload_path
      download_path = lv_download_path.

*== set parameter
  p_path = lv_download_path.

ENDFORM.                    "get_download_path

*&amp;---------------------------------------------------------------------*
*&amp;      Form  f4_path
*&amp;---------------------------------------------------------------------*
FORM f4_path.

*== local data
  DATA lv_out    TYPE string.
  DATA lv_in     TYPE string.
  DATA lt_fields TYPE TABLE OF dynpread.
  DATA ls_field  TYPE dynpread.

*== get current value for path
  ls_field = 'P_PATH'.
  APPEND ls_field TO lt_fields.

  CALL FUNCTION 'DYNP_VALUES_READ'
    EXPORTING
      dyname     = sy-cprog
      dynumb     = sy-dynnr
    TABLES
      dynpfields = lt_fields
    EXCEPTIONS
      OTHERS     = 1.

  IF sy-subrc = 0.
    READ TABLE lt_fields INTO ls_field INDEX 1.
    lv_in = ls_field-fieldvalue.
  ENDIF.

*== call popup for directory selection
  CALL METHOD cl_gui_frontend_services=&gt;directory_browse
    EXPORTING
      initial_folder  = lv_in
    CHANGING
      selected_folder = lv_out
    EXCEPTIONS
      OTHERS          = 4.

  IF sy-subrc = 0 AND lv_out IS NOT INITIAL.
*== set selected path
    p_path = lv_out.
  ELSE.
*== set origin path
    p_path = lv_in.
  ENDIF.

ENDFORM.</pre>
<h1>Verwendung in einer Suchhilfe</h1>
<p>Einfacher und sinnvoller jedoch ist die Verwendung in einer Suchhilfe! Warum? Erstens kann die Suchhilfe an ein entsprechendes Feld einer Dictionarystruktur angebunden werden und zweitens lässt sich auch in einem Report eine Suchhilfe einfacher verwenden.</p>
<p>Das Programm reduziert sich so auf die folgende Angabe bei dem Parameter P_PATH:</p>
<pre>PARAMETERS p_path  TYPE string OBLIGATORY LOWER CASE <span style="color: #ff0000;">MATCHCODE OBJECT ZSH_DIRECTORY</span>.</pre>
<p>du ahnst es schon: Die Suchhilfe heißt in diesem Fall ZSH_DIRECTORY. Um diese zu erstellen musst du folgendes tun:</p>
<ol>
<li>Anlage der Suchhilfe in der SE11</li>
<li>Anlage eines Funktionsbausteins, der als Suchhilfe-Exit verwendet wird.</li>
</ol>
<p>Wir fangen bei 2. an:</p>
<h2>2. Anlage Suchhilfe-Exit</h2>
<p>Du benötigst eine Funktionsgruppe. Einfach in der SE80 eine anlegen. In diese Funktionsgruppe kopierst du den Baustein F4IF_SHLP_EXIT_EXAMPLE auf den Baustein Z_F4IF_SHLP_EXIT_DIRECTORY. Das Kopieren ist wichtig, da die Suchhilfe-Exit-Bausteine eine definierte Schnittstelle haben.</p>
<p>Im STEP SELECT fügst du das Coding ein, dessen Kern wir bereits aus dem vorherigen Coding kennen:</p>
<pre>  IF callcontrol-step = 'SELECT'.
*== data (please set data definitions to top of function module!)
    DATA lv_in TYPE string.
    DATA lv_out TYPE string.
    FIELD-SYMBOLS &lt;itf&gt; LIKE LINE OF shlp-interface.
    FIELD-SYMBOLS &lt;rec&gt; LIKE LINE OF record_tab.
*== get field value
    READ TABLE shlp-interface WITH KEY shlpfield = 'PATH' ASSIGNING &lt;itf&gt;.
    IF sy-subrc = 0.
*== use field value as start directory
      lv_in = &lt;itf&gt;-value.
*== call popup for directory selection
      CALL METHOD cl_gui_frontend_services=&gt;directory_browse
        EXPORTING
          initial_folder  = lv_in
        CHANGING
          selected_folder = lv_out
        EXCEPTIONS
          OTHERS          = 4.
      IF sy-subrc = 0 AND lv_out IS NOT INITIAL.
        APPEND INITIAL LINE TO record_tab ASSIGNING &lt;rec&gt;.
        &lt;rec&gt;-string = lv_out.
        callcontrol-step = 'RETURN'.
      ENDIF.
    ENDIF.
  ENDIF.</pre>
<p>Grob passiert folgendes:</p>
<ol>
<li>Wir lesen aus der Schnittstellenbeschreibung den Parameter PATH, den wir in der Suchhilfe definiert haben, aus und verwenden ihn als Startverzeichnis</li>
<li>Aufruf der Methode DIRECTORY_BROWSE</li>
<li>Füllen der Rückgabetabelle RECORD_TAB</li>
<li>Setzen des Folgeschrittes RETURN um die Anzeige des gefundenen Verzeichnisses im Popup zu verhindern</li>
</ol>
<p>[notice type=&#8217;info&#8217;]Eventuell kann es sein, dass in dem Beispiel das Startverzeichnis nicht in die Suchhilfe übernommen wird. In dem Fall muss gegebenenfalls ebenfalls der Funktionsbaustein DYNP_VALUES_READ eingesetzt werden. Das verwendete Parametername steht in der INTERFACE-Struktur im Feld VALFIELD.[/notice]</p>
<h2>1. Anlage der Suchhilfe</h2>
<p>Transaktion SE11: Suchhilfe Anlegen:</p>
<p><img loading="lazy" decoding="async" width="414" height="359" class="alignnone size-full wp-image-4377" src="https://tricktresor.com/wp-content/uploads/2014/02/img_52f395b7a234f.png" alt="" srcset="/wp-content/uploads/2014/02/img_52f395b7a234f.png 414w, /wp-content/uploads/2014/02/img_52f395b7a234f-300x260.png 300w" sizes="(max-width: 414px) 100vw, 414px" /></p>
<p>In der Suchhilfe muss der erstellte Funktionsbaustein als Suchhilfe-Exit eingetragen werden:</p>
<p><img loading="lazy" decoding="async" width="737" height="429" class="alignnone size-full wp-image-4378" src="https://tricktresor.com/wp-content/uploads/2014/02/img_52f3960b0c6f8.png" alt="" srcset="/wp-content/uploads/2014/02/img_52f3960b0c6f8.png 737w, /wp-content/uploads/2014/02/img_52f3960b0c6f8-300x174.png 300w, /wp-content/uploads/2014/02/img_52f3960b0c6f8-624x363.png 624w" sizes="(max-width: 737px) 100vw, 737px" /></p>
<p>Der Beitrag <a href="/blog/pfadauswahl-mit-directory-browse/">Pfadauswahl mit DIRECTORY_BROWSE</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Up- und Download von Transporten</title>
		<link>/blog/up-und-download-von-transporten/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 07 Jul 2008 09:24:39 +0000</pubDate>
				<category><![CDATA[Cross Applications]]></category>
		<category><![CDATA[KTW]]></category>
		<category><![CDATA[Transport]]></category>
		<category><![CDATA[Upload]]></category>
		<category><![CDATA[Download]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=494</guid>

					<description><![CDATA[<p>Worum geht es? Will man ein SAP-System mit seinen Entwicklungen  best&#252;cken, so mu&#223; man die Transport-Dateien umst&#228;ndlich hochladen. Je  nach Ausstattung fehlen grundlegende Transaktionen. Hierf&#252;r gibt es nun das folgende Programm, das sowohl einen Up- als auch einen Download auf einfache Weise erm&#246;glicht. </p>
<p>Der Beitrag <a href="/blog/up-und-download-von-transporten/">Up- und Download von Transporten</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Worum geht es? Will man ein SAP-System mit seinen Entwicklungen bestücken, so muß man die Transport-Dateien umständlich hochladen. Je nach Ausstattung fehlen grundlegende Transaktionen. Hierfür gibt es nun das folgende Programm, das sowohl einen Up- als auch einen Download auf einfache Weise ermöglicht.</p>
<p>Download des Quellcodes <a href="https://tricktresor.com/wp-content/downloads/zSTW_UPL_DOWNL_AUFTRAG.txt" target="_blank">hier</a>.</p>
<p>Vielen Dank an Stefan Wagenblast!</p>
<h2 class="head1">Neue Version von Stefan Schnell</h2>
<p class="text1">Stefan hat das Programm noch mal erweitert.</p>
<p class="text1">Das angepaste Programm ist <a href="/wp-content/downloads/zSTW_UPL_DOWNL_AUFTRAG.txt" target="_blank">hier</a>, die ausführliche Dokumentation im PDF-Format kann <a href="/wp-content/downloads/zSTW_UPL_DOWNL_AUFTRAG_Anleitung.pdf" target="_blank">hier</a> herunter geladen werden.</p>
<p class="head1">
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/up-und-download-von-transporten/">Up- und Download von Transporten</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
