<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Auftragserfassung Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/auftragserfassung/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:25:02 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Auftragserfassung Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Komplexe Rabattfindung mit Excel</title>
		<link>/blog/komplexe-rabattfindung-mit-excel/</link>
		
		<dc:creator><![CDATA[wilfried]]></dc:creator>
		<pubDate>Thu, 17 Jul 2014 14:39:14 +0000</pubDate>
				<category><![CDATA[Excel]]></category>
		<category><![CDATA[EXCEL]]></category>
		<category><![CDATA[Auftragserfassung]]></category>
		<category><![CDATA[SVERWEIS]]></category>
		<category><![CDATA[VERGLEICH]]></category>
		<category><![CDATA[INDEX]]></category>
		<category><![CDATA[Rabatt]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4960</guid>

					<description><![CDATA[<p>Rabattfindung mit Excel. Hier werden zwei Lösungen vorgestellt, einmal mit "Indirekt &#38; Vergleich", dann mit "Sverweis verkettet" sowie mittels "Index mit Vergleich". Die gut dokumentierte Vorgehensweise macht deutlich, wie die Funktionen in Excel zur Rabattfindung eingesetzt werden können.</p>
<p>Der Beitrag <a href="/blog/komplexe-rabattfindung-mit-excel/">Komplexe Rabattfindung mit Excel</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Am Anfang stand die praxisnahe Fragestellung einer Rabattfindung innerhalb einer Auftragserfassung. Dazu konstruierte ich mir zuerst folgende Rahmenbedingungen:</p>
<p>Kunden sind einem Land und Artikel einer Gruppe zugeordnet.</p>
<p>Abhängig von der Gesamtbestellmenge aller Artikel einer Gruppe, soll aus einer Rabattstaffel mit den Schlüsselfeldern Land, Gruppe und Bestellmenge der zu gewährende Rabatt ermittelt werden.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_17_160728.jpg"><img decoding="async" class="alignnone size-medium wp-image-4964" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_17_160728-300x87.jpg" alt="Rabattfindung Excel" width="300" height="87" srcset="/wp-content/uploads/2014/07/Bild_2014_07_17_160728-300x87.jpg 300w, /wp-content/uploads/2014/07/Bild_2014_07_17_160728-1024x298.jpg 1024w, /wp-content/uploads/2014/07/Bild_2014_07_17_160728-624x181.jpg 624w, /wp-content/uploads/2014/07/Bild_2014_07_17_160728.jpg 1247w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Findung erfolgt auf drei Arten:</p>
<ul>
<li>Sverweis mit Indirekt &amp; Vergleich</li>
<li>Sverweis verkettet</li>
<li>Index mit Vergleich</li>
</ul>
<p>Alle drei Lösungen sind hier beschrieben:</p>
<p><a title="Rabattfindung | PDF-Doku" href="https://tricktresor.com/wp-content/uploads/2014/07/Rabatt-abhängig-von-Land-Produktgruppe-Gruppenmenge.pdf">Rabatt abhängig von Land Produktgruppe &amp; Gruppenmenge</a></p>
<p>In der Excel-Tabelle sind die Demo-Daten und alle Formeln enthalten:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Rabatt-abhängig-von-Land-Produktgruppe-Gruppenmenge.xlsx">Rabatt abhängig von Land Produktgruppe &amp; Gruppenmenge</a></p>
<p>Der Beitrag <a href="/blog/komplexe-rabattfindung-mit-excel/">Komplexe Rabattfindung mit Excel</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Kaskadiertes Lesen von Einträgen</title>
		<link>/blog/kaskadiertes-lesen-von-eintraegen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 21 Jan 2014 17:14:25 +0000</pubDate>
				<category><![CDATA[Datenbanken & Datenselektion]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[selektion]]></category>
		<category><![CDATA[tabelle]]></category>
		<category><![CDATA[Generell]]></category>
		<category><![CDATA[Auftragserfassung]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4283</guid>

					<description><![CDATA[<p>Customizingtabellen werden häufig für einen kaskadierten Zugriff aufgebaut. Das bedeutet, dass Steuereinträge keinen vollständigen Schlüssel besitzen müssen, sondern auch mit einem Teil des Schlüssels gepflegt werden können. In diesem Artikel beleuchte ich die einzelnen Möglichkeiten des kaskadierten Lesens dieser Einträge.</p>
<p>Der Beitrag <a href="/blog/kaskadiertes-lesen-von-eintraegen/">Kaskadiertes Lesen von Einträgen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Viele Prozesse und Funktionen werden im SAP über Customizingtabellen gesteuert. Bei Tabellen mit mehreren Schlüsselfeldern wird häufig eine stufenweise Verarbeitung zugelassen. Das bedeutet, dass nicht der komplette Schlüssel definiert werden muss, sondern es reichen Teile des Schlüssels. In der Regel wird der Lesezugriff so lange mit weniger qualifiziertem Zugriff erfolgen, bis ein Eintrag gefunden wurde.</p>
<p>Nehmen wir an, in einem Prozess soll anhand von Werk. Lagerort und Material gesteuert werden, ob bei der Auftragserfassung für ein Material eine bestimmte Prüfung erfolgen soll. Die Tabelle wird dann folgendermaßen aussehen:</p>
<table border="0">
<tbody>
<tr>
<td style="border: 1px solid #000000;"><strong>Feldname</strong></td>
<td style="border: 1px solid #000000;"><strong>Beschreibung</strong></td>
</tr>
<tr>
<td style="border: 1px solid #000000;">WERKS</td>
<td style="border: 1px solid #000000;">Werk</td>
</tr>
<tr>
<td style="border: 1px solid #000000;">LGORT</td>
<td style="border: 1px solid #000000;">Lagerort</td>
</tr>
<tr>
<td style="border: 1px solid #000000;">MATNR</td>
<td style="border: 1px solid #000000;">Material</td>
</tr>
</tbody>
</table>
<p>[notice type=&#8217;info&#8217;]Der Mandant gehört (fast) immer in die Tabelle. Da er hier jedoch keine Bedeutung hat, betrachte ich ihn nicht.[/notice]</p>
<p><img fetchpriority="high" decoding="async" width="318" height="181" class="alignnone size-full wp-image-4288" alt="" src="https://tricktresor.com/wp-content/uploads/2014/01/img_52deab5b8ca15.png" srcset="/wp-content/uploads/2014/01/img_52deab5b8ca15.png 318w, /wp-content/uploads/2014/01/img_52deab5b8ca15-300x170.png 300w" sizes="(max-width: 318px) 100vw, 318px" /></p>
<h2>Tabellenpflege</h2>
<p>Die Einträge in der Tabelle sollen bewirken, dass für verschiedene Kombinationen eine Prüfung ausgeführt wird. Dabei muss nicht der vollständige Schlüssel &#8211; also Werk und Lagerort und Materialnummer &#8211; eingegeben werden, sondern es reicht, wenn auch zum Beispiel nur die Materialnummer eingetragen wird. Die Spalte Index dient lediglich der Orientierung, um in der weiteren Beschreibung eindeutig sagen zu können, welcher Eintrag gemeint ist.</p>
<table style="border-color: #000000; border-width: 0px;" border="0" frame="border">
<tbody>
<tr>
<td style="background-color: #989590;" align="center" valign="middle"><strong>Index</strong></td>
<td><strong>Werk</strong></td>
<td><strong>Lagerort</strong></td>
<td><strong>Materialnummer</strong></td>
<td><strong>Prüfung ja / nein</strong></td>
<td><strong>Beschreibung</strong></td>
</tr>
<tr>
<td style="background-color: #989590;" align="center" valign="middle">1</td>
<td>1000</td>
<td>A100</td>
<td>CONTROLLER</td>
<td>nein</td>
<td>Gebrauchte Controller aus Lager A100 nicht prüfen</td>
</tr>
<tr>
<td style="background-color: #989590;" align="center" valign="middle">2</td>
<td>1000</td>
<td>A100</td>
<td></td>
<td>ja</td>
<td>Gebrauchtes Material aus Lager A100 immer prüfen</td>
</tr>
<tr>
<td style="background-color: #989590;" align="center" valign="middle">3</td>
<td>1000</td>
<td></td>
<td></td>
<td>nein</td>
<td>Generell braucht Material aus Werk &#8220;Süd&#8221; nicht geprüft werden</td>
</tr>
<tr>
<td style="background-color: #989590;" align="center" valign="middle">4</td>
<td></td>
<td></td>
<td>TELEFON</td>
<td>ja</td>
<td>Telefone immer prüfen!</td>
</tr>
<tr>
<td style="background-color: #989590;" align="center" valign="middle">5</td>
<td>2000</td>
<td></td>
<td>TELEFON</td>
<td>nein</td>
<td>außer Sie kommen aus Werk &#8220;Nord&#8221;</td>
</tr>
<tr>
<td style="background-color: #989590;" align="center" valign="middle">6</td>
<td></td>
<td>RET1</td>
<td></td>
<td>ja</td>
<td>Materialien aus dem Retourenlager immer prüfen</td>
</tr>
<tr>
<td style="background-color: #989590;" align="center" valign="middle">7</td>
<td></td>
<td>RET1</td>
<td>SOFTWARE</td>
<td>nein</td>
<td>Ausnahme: Software aus Retourenlager nicht prüfen</td>
</tr>
</tbody>
</table>
<p>Einträge der Tabelle ZPRUEF1</p>
<h2>Kaskadierter Zugriff</h2>
<p>Bei einem kaskadierten Zugriff auf die Tabelle muss genau definiert werden, in welche Reihenfolge und mit welchen Feldern der Zugriff erfolgen soll. In der Regel ist der vollqualifizierte Zugriff immer der erste:</p>
<pre>SELECT SINGLE pruefung FROM zpruef1 INTO TABLE lt_zpruef1
 WHERE werks = i_werks
   AND lgort = i_lgort
   AND matnr = i_matnr.</pre>
<p>Der nächste Zugriff wäre dann ein Zugriff ohne die Materialnummer:</p>
<pre>SELECT SINGLE pruefung FROM zpruef1 INTO TABLE lt_zpruef1
 WHERE werks = i_werks
   AND lgort = i_lgort
   AND matnr = space.</pre>
<p>Wurde dann immer noch kein Eintrag gefunden, so wird ausschließlich mit WERKS gelesen:</p>
<pre>SELECT SINGLE pruefung FROM zpruef1 INTO TABLE lt_zpruef1
 WHERE werks = i_werks
   AND lgort = space
   AND matnr = space.</pre>
<p>Das Programm enthält nun bereits drei SELECT-Anweisungen. Und wir haben noch gar nicht die Zugriffe auf die anderen Tabelleneinträge (4-7) codiert. Bei diesen Tabelleneinträgen müssen wir uns entscheiden, in welcher Reihenfolge diese gelesen werden sollen.</p>
<p>Wenn wir hier alle Kombinationen betrachten, dann haben wir zusätzlich zu den bisherigen drei Zugriffen noch die folgenden vier (auf nicht genannte Felder wird mit SPACE zugegriffen):</p>
<ul>
<li>WERKS &#8211; MATNR</li>
<li>LGORT &#8211; MATNR</li>
<li>LGORT</li>
<li>MATNR</li>
</ul>
<p>Der Vorteil bei diesem Verfahren ist, dass jede benötigte Kombination gezielt programmiert werden kann.</p>
<p>Nachteil ist die große Menge an verschiedenen Zugriffen, die programmiert werden müssen.</p>
<h2>Alternative zum kaskadierten Zugriff</h2>
<p>Das Lesen der Tabelle mit ODER-Bedingung ist eine andere Möglichkeit, den gewünschten Eintrag zu lesen.</p>
<p>Hierfür lesen wir alle Einträge, bei denen mindestens einer der Felder den gewünschten Werten entspricht:</p>
<pre>SELECT * FROM zpruef1 INTO TABLE lt_pruef1
 WHERE ( werks = i_werks OR werks = space )
   AND ( lgort = i_lgort OR lgort = space )
   AND ( matnr = i_matnr OR matnr = space ).</pre>
<p>Um den am meisten qualifizierten Tabelleneintrag zu erhalten, sortieren wir dies Tabelle absteigend. Das bewirkt, dass die Einträge, bei denen die Felder mit Werten gefüllt sind, oben stehen.</p>
<pre>SORT lt_pruef1 DESCENDING.</pre>
<p>Nun müssen wir nur den obersten Eintrag lesen und haben den passenden gefunden:</p>
<pre>READ TABLE lt_pruef1 INTO ls_pruef1 INDEX 1.</pre>
<p>Vorteile dieses Verfahrens: Das Coding ist kürzer und es muss nicht angepasst werden, wenn ein neues Schlüsselfeld dazu kommt.</p>
<p>Der Beitrag <a href="/blog/kaskadiertes-lesen-von-eintraegen/">Kaskadiertes Lesen von Einträgen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Serialnummern in Kundenauftrag einfügen</title>
		<link>/blog/serialnummern-in-kundenauftrag-einfuegen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 28 Jan 2011 09:11:16 +0000</pubDate>
				<category><![CDATA[Vertrieb]]></category>
		<category><![CDATA[Verkauf]]></category>
		<category><![CDATA[Auftragserfassung]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=576</guid>

					<description><![CDATA[<p>Hier ein kleiner Codeschnipsel mit dem es m&#246;glich ist, Serialnummern in eine Kundenauftragsposition einzuf&#252;gen.</p>
<p>Der Beitrag <a href="/blog/serialnummern-in-kundenauftrag-einfuegen/">Serialnummern in Kundenauftrag einfügen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Hier ein kleiner Codeschnipsel mit dem es möglich ist, Serialnummern in eine Kundenauftragsposition einzufügen.</p>
<p class="text1">Die vorhanden Serialnummern werden eingelesen. Sind keine vorhanden, so erscheint der Standard-Serialnummerndialog, um Serialnummern einzutragen.</p>
<p class="text1">Soll das Hinzufügen ohne Dialog erfolgen, dann muss der Funktionsbaustein SERNR_ADD_TO_DOCUMENT verwendet werden.</p>
<h2 class="head1">Coding</h2>
<p class="sap1">DATA ls_serxx          TYPE rserxx.<br />
DATA lt_serxx          TYPE STANDARD TABLE OF rserxx.<br />
DATA lt_sernr          TYPE STANDARD TABLE OF e1rmsno.<br />
DATA ls_rserob         TYPE rserob.<br />
DATA ls_vbap TYPE vbap.<br />
FIELD-SYMBOLS &lt;sernr&gt;  TYPE e1rmsno.</p>
<p class="sap1"><span style="color: #fb2412;">*** Select customer order item</span><br />
SELECT single * FROM vbap<br />
INTO ls_vbap<br />
WHERE vbeln = p_vbeln<br />
AND posnr = p_posnr.<br />
CHECK sy-subrc = 0.</p>
<p class="sap1"><span style="color: #fb2412;">*** get existing serial numbers<br />
</span>ls_rserob-taser   = &#8216;SER02&#8217;.<br />
ls_rserob-sdaufnr = ls_vbap-vbeln.<br />
ls_rserob-posnr   = ls_vbap-posnr.<br />
CALL FUNCTION &#8216;GET_SERNOS_OF_DOCUMENT&#8217;<br />
EXPORTING<br />
key_data            = ls_rserob<br />
TABLES<br />
serxx               = lt_serxx<br />
EXCEPTIONS<br />
key_parameter_error = 1<br />
no_supported_access = 2<br />
no_data_found       = 3<br />
OTHERS              = 4.<br />
IF sy-subrc = 3 AND lt_serxx IS INITIAL.<br />
<span style="color: #fb2412;">*** No serial numbers exist: show maintenance popup<br />
</span>  ls_serxx-sdaufnr = ls_vbap-vbeln.<br />
ls_serxx-posnr   = ls_vbap-posnr.<br />
CALL FUNCTION &#8216;SERNR_MAINTAIN_IN_DOCUMENT&#8217;<br />
EXPORTING<br />
operation                 = &#8216;SDAU&#8217;<br />
objkopf                   = &#8216;SER02&#8217;<br />
serxx                     = ls_serxx<br />
activity                  = &#8216;H&#8217; &#8220;create<br />
material                  = ls_vbap-matnr<br />
profile                   = ls_vbap-serail<br />
quantity                  = 1<br />
EXCEPTIONS<br />
konfigurations_error      = 1<br />
general_serial_error      = 2<br />
no_profile_operation      = 3<br />
no_automatic              = 4<br />
difference_in_header_data = 5<br />
OTHERS                    = 6.<br />
IF sy-subrc = 0.<br />
<span style="color: #fb2412;">*** Post entered serial numbers<br />
</span>    CALL FUNCTION &#8216;SERIAL_LISTE_POST_AU&#8217;.<br />
COMMIT WORK AND WAIT.<br />
ENDIF.<br />
ENDIF.</p>
<p>Der Beitrag <a href="/blog/serialnummern-in-kundenauftrag-einfuegen/">Serialnummern in Kundenauftrag einfügen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Materialsubstitution</title>
		<link>/blog/materialsubstitution/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 06 Jul 2009 14:42:59 +0000</pubDate>
				<category><![CDATA[Vertrieb]]></category>
		<category><![CDATA[SD]]></category>
		<category><![CDATA[Auftragserfassung]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=521</guid>

					<description><![CDATA[<p>Die Materialfindung oder Materialsubstitution kann per Customizing anhand Konditionstabellen eingestellt und konfiguriert werden. Das Ermitteln der zu ersetzenden Materialien kann entweder statisch programmiert werden. Das einzig Richtige ist aber nat&#252;rlich ein Baustein mit dynamischen Zugriff. </p>
<p>Der Beitrag <a href="/blog/materialsubstitution/">Materialsubstitution</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Die Materialfindung oder Materialsubstitution kann per Customizing anhand Konditionstabellen eingestellt und konfiguriert werden. Das Ermitteln der zu ersetzenden Materialien kann entweder statisch programmiert werden. Das einzig Richtige ist aber nat&uuml;rlich ein Baustein mit dynamischen Zugriff. <br /><P class="head1">Vorwort</P><P>Das Ersetzungsschema kann individuell eingestellt werden. Zu einer Auftragsart kann dann ein entsprechendes Schema zugeordnet werden.</P><P>Die Materialsubstitution kann in mehreren Stufen erfolgen (Zugriffsfolge). Die einzelnen Materialersetzungen werden mit Transaktion VB12 gepflegt. </P><P class="head1">Strukturen</P><P>Folgende Strukturen und Felder ben&ouml;tigen wir:</P><P class="sap1">&nbsp; DATA lv_kalsu&nbsp; TYPE kalsu.<BR>&nbsp; DATA lt_konddp TYPE STANDARD TABLE OF konddp.<BR>&nbsp; DATA ls_konddp TYPE konddp.<BR>&nbsp; DATA ls_komkd&nbsp; TYPE komkd.<BR>&nbsp; DATA ls_kompd&nbsp; TYPE kompd.<BR></P><P class="head1">Vorbereitungen</P><P>Zuerst ben&ouml;tigen wir das zur Auftragsart zugeordnete Schema. Da wir f&uuml;r die Kommunikationsstruktur auch den Vertriebsbelegtyp ben&ouml;tigen, lesen wir den gleich mit:</P><P class="sap1">&nbsp; DATA lv_kalsu&nbsp; TYPE kalsu.<BR><FONT color="#fb2412">*** calc scheme and document type</FONT><BR>&nbsp; SELECT SINGLE kalsu vbtyp<BR>&nbsp;&nbsp;&nbsp; FROM tvak<BR>&nbsp;&nbsp;&nbsp; INTO (lv_kalsu, ls_komkd-vbtyp)<BR>&nbsp;&nbsp; WHERE auart = lv_auart.<BR></P><P>Dann m&uuml;ssen noch die Kommunikationsstrukturen gef&uuml;llt werden:</P><P class="sap1">&nbsp; MOVE-CORRESPONDING&nbsp;my_struc TO ls_komkd.<BR>&nbsp; MOVE-CORRESPONDING&nbsp;my_struc TO ls_kompd.<BR>&nbsp; ls_kompd-matnr = my_matnr.<BR>&nbsp; ls_kompd-matwa = my_matnr.<BR></P><P class="head1">Materialersetzung</P><P>Nun k&ouml;nnen wir den SAP-Standardbaustein aufrufen und die Findung durchf&uuml;hren lassen:</P><P class="sap1"><FONT color="#fb2412">*** substitution</FONT><BR>&nbsp; CALL FUNCTION &#8216;PRODUCT_SUBSTITUTION&#8217;<BR>&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; application&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;V&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; date&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = sy-datum<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dialog&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;X&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; header_communication = ls_komkd<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item_communication&nbsp;&nbsp; = ls_kompd<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; scheme&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = lv_kalsu<BR>&nbsp;&nbsp;&nbsp; TABLES<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; konddp_data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = lt_konddp.<BR><BR>&nbsp; IF lt_konddp IS NOT INITIAL.<BR><FONT color="#fb2412">*** Replace material</FONT><BR>&nbsp;&nbsp;&nbsp; READ TABLE lt_konddp INTO ls_konddp INDEX 1.<BR>&nbsp;&nbsp;&nbsp; IF sy-subrc = 0.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lv_replaced_matnr = ls_konddp-smatn.<BR>&nbsp;&nbsp;&nbsp; ENDIF.<BR>&nbsp; ENDIF.</P><P>In lv_Replaced_Matnr steht dann die umgesetzte Materialnummer.</P></p>
<p>Der Beitrag <a href="/blog/materialsubstitution/">Materialsubstitution</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
