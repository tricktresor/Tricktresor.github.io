<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Funktionsbausteine Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/funktionsbausteine/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:25:04 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Funktionsbausteine Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Formeleditor</title>
		<link>/blog/formeleditor/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 16 Jul 2014 18:30:52 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[Formeln]]></category>
		<category><![CDATA[Formeleditor]]></category>
		<category><![CDATA[Eigene Felder]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Eigenes]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4946</guid>

					<description><![CDATA[<p>Der Formeleditor ist ein mächtiges Werkzeug, der sich für viele Gelegenheiten nutzen lässt. Viele Beispielprogramme demonstrieren die Verwendung. Die hier vorgestellten Funktionen lösen die alten Funktionsbausteine EVAL_FORMULA und CHECK_FORMULA zum evaluieren einer Formel ab. </p>
<p>Der Beitrag <a href="/blog/formeleditor/">Formeleditor</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Im Beitrag <a title="Formelberechnung" href="https://tricktresor.com/blog/formelberechnung/">Formelberechnung </a>habe ich bereits gezeigt, wie man eigene Formeln verwenden kann. Für eine Anwendung wäre es jedoch schön, wenn der Anwender selbst Formeln erstellen könnte und zwar mit vorgegebenen Feldern und Operationen.</p>
<p>Dies ist möglich mit dem Formeleditor. Gleichzeitig wird hier für die Prüfung und Evaluierung der Formeln keine Funktionsbausteine mehr verwendet, sondern Klassen. Aber der Reihe nach&#8230;</p>
<h2>Formeleditor</h2>
<p>Der Formeleditor wird durch den Funktionsbaustein <!--StartFragment -->FOBU_DIALOG_START aufgerufen. Die Verwendung wird in mehreren Beispielprogrammen gut demonstriert (siehe unten).</p>
<p>In einem Eingabefeld kann man die Formel entweder direkt eingeben (Expertenmodus) oder man kann die einzelnen Komponenten per Drag and Drop oder Doppelklick einfügen.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200715.jpg"><img decoding="async" class="alignnone size-medium wp-image-4951" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200715-300x144.jpg" alt="Formeleditor Eingabe" width="300" height="144" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_200715-300x144.jpg 300w, /wp-content/uploads/2014/07/Bild_2014_07_16_200715.jpg 510w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Die Elemente des Editors lassen sich gezielt steuern. In den Beispielprogrammen wird ersichtlich, was wie verwendet werden kann.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200704.jpg"><img decoding="async" class="alignnone size-medium wp-image-4950" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200704-300x85.jpg" alt="Formeleditor" width="300" height="85" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_200704-300x85.jpg 300w, /wp-content/uploads/2014/07/Bild_2014_07_16_200704-624x177.jpg 624w, /wp-content/uploads/2014/07/Bild_2014_07_16_200704.jpg 835w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Einige Formeln lassen sich mit einer Hilfefunktion einfügen (Kleines grünes PLUS-Icon rechts neben den Sortieren Buttons):</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200725.jpg"><img decoding="async" class="alignnone size-medium wp-image-4957" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200725-300x81.jpg" alt="Formel einfügen" width="300" height="81" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_200725-300x81.jpg 300w, /wp-content/uploads/2014/07/Bild_2014_07_16_200725-624x169.jpg 624w, /wp-content/uploads/2014/07/Bild_2014_07_16_200725.jpg 758w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h2>Klassen</h2>
<h3>CL_FOBU_FORMULA</h3>
<p>Um mit dem Editor kommunizieren zu können, wird diese Klasse benötigt.</p>
<h3>CL_FOEV_FORMULA</h3>
<p>Diese Klasse wird verwendet, um die Formeln zu speichern, zu laden, zu prüfen und auszuwerten.</p>
<h3>CL_FOBU_CONNECTOR</h3>
<p>Sobald eigene Felder verwendet werden sollen, müssen diese mithilfe der Klasse definiert und bekannt gemacht werden. Für jedes Feld kann ein eigenes Icon definiert werden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200712.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4952 size-full" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200712.jpg" alt="Formeleditor eigene Felder" width="377" height="231" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_200712.jpg 377w, /wp-content/uploads/2014/07/Bild_2014_07_16_200712-300x183.jpg 300w" sizes="(max-width: 377px) 100vw, 377px" /></a></p>
<h3>Demoprogramme</h3>
<table>
<tbody>
<tr>
<th> Programm</th>
<th> Bezeichnung</th>
</tr>
<tr>
<td> SFBE_EXAMPLE1</td>
<td>Beispielprogramme FoBuEv: Einfachst-Aufruf</td>
</tr>
<tr>
<td> SFBE_EXAMPLE2</td>
<td>Beispielprogramme FoBuEv: Aufruf mit eigenen Feldern</td>
</tr>
<tr>
<td> SFBE_EXAMPLE3</td>
<td>Beisp.Prog FoBuEv: Aufruf mitTypprüfung, eigenem GUI-Status und TraceDer Trace wird im Menü eingeschaltet!</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200706.jpg"><img loading="lazy" decoding="async" class="alignnone size-thumbnail wp-image-4949" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_200706-300x300.jpg" alt="Formel_trace" width="150" height="150" /></a></td>
</tr>
<tr>
<td> SFBE_EXAMPLE4</td>
<td>Beisp.Prog FoBuEv: Aufruf mit eigenen Funktionen</td>
</tr>
<tr>
<td> SFBE_EXAMPLE5</td>
<td>Beisp.Prog FoBuEv: Implementierung einer Methode per FoBuEv</td>
</tr>
<tr>
<td> SFBE_EXAMPLE6</td>
<td>Beisp.Prog FoBuEv: Aufruf mit eigenen Drucktasten und IF-Funktion</td>
</tr>
<tr>
<td> SFBE_EXAMPLE8</td>
<td>Beisp.Prog FoBuEv: Rechnen mit Währungsbeträgen, Mengen und Preisen</td>
</tr>
<tr>
<td>RS_FOBU_METHOD_EXAMPLE</td>
<td>Beispielprogramm für Formula Builder Methoden</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/formeleditor/">Formeleditor</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Formelberechnung</title>
		<link>/blog/formelberechnung/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 16 Jul 2014 17:51:11 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Tabellenpflegedialog]]></category>
		<category><![CDATA[Schnell programmiert]]></category>
		<category><![CDATA[Formeln]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4942</guid>

					<description><![CDATA[<p>Mit Computern kann man rechnen. Das ist toll und gut so. Wenn man allerdings Berechnungen Außerhalb eines Programms definieren möchte, dann kommt man schnell an die Grenzen. Einfache Operationen sind schnell programmiert und ausgewertet, bei komplexen Operationen kommt man jedoch schnell ins Schwitzen. Gottseidank besitzt SAP einen Formeleditor, den man sehr einfach für eigene Berechnungen verwenden kann. Mit entsprechenden Funktionsbausteinen oder einer Klasse kann eine Formel geprüft und ausgewertet werden.</p>
<p>Der Beitrag <a href="/blog/formelberechnung/">Formelberechnung</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mit Computern kann man rechnen. Das ist toll und gut so. Wenn man allerdings Berechnungen Außerhalb eines Programms definieren möchte, dann kommt man schnell an die Grenzen. Einfache Operationen sind schnell programmiert und ausgewertet, bei komplexen Operationen kommt man jedoch schnell ins Schwitzen. Gottseidank besitzt SAP einen Formeleditor, den man sehr einfach für eigene Berechnungen verwenden kann. Mit entsprechenden Funktionsbausteinen oder einer Klasse kann eine Formel geprüft und ausgewertet werden.</p>
<h2>Funktionsbausteine</h2>
<p>Es gibt zwei Funktionsbausteine: Einen für die Prüfung einer Formel und einer für die Berechnung:</p>
<p>Prüfung: CHECK_FORMULA</p>
<p>Berechnung: EVAL_FORMULA</p>
<p>Beide Funktionsbausteine haben die folgenden Parameter:</p>
<p>FORMULA: Enthält die Formel<br />
PROGRAM: Programmname zur Wertzuweisung<br />
ROUTINE: Name des Unterprogramms zur Wertzuweisung</p>
<h3>Einfache Berechnung einer Formel</h3>
<p>Der einfachste Aufruf zur Berechnung einer (fast) beliebigen Formel erfolgt mit dem Funktionsbaustein EVAL_FORMULA. Es reicht, wenn du diesem Baustein die Berechnung mitgibst, z.B. 10*3:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_170727.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4943" src="https://tricktresor.com/wp-content/uploads/2014/07/Bild_2014_07_16_170727.jpg" alt="Formel1" width="474" height="287" srcset="/wp-content/uploads/2014/07/Bild_2014_07_16_170727.jpg 474w, /wp-content/uploads/2014/07/Bild_2014_07_16_170727-300x181.jpg 300w" sizes="(max-width: 474px) 100vw, 474px" /></a></p>
<h3>Berechnung mit Variablen</h3>
<p>Nun möchte man natürlich nicht nur Werte berechnen, sondern auch mit Variablen arbeiten, wie zum Beispiel &#8220;A + B&#8221;. Das funktioniert mit den Funktionsbausteinen ebenfalls. Die Formel lautet: A+B. Allerdings müssen die Werte natürlich zugewiesen werden. Hierfür muss man den Programmnamen und den Namen des Unterprogramms angeben, in dem die Werte zugewiesen werden. Ein kleines Beispielprogramm lautet: RSCALC01. Die folgenden Berechnungen werden durchgeführt; die Wertezuweisung erfolgt im Programm.</p>
<pre>FUESSE + AEDERCHEN + OEHRCHEN                        6,0000000000000000E+00
(-B+SQRT(B**2-(4*A*C)))/(2*A)                        4,0000000000000000E+00
0**0                                                 1,0000000000000000E+00
-16**0.5                                            -4,0000000000000000E+00</pre>
<h3>Formelspeicher</h3>
<p>Formeln können zentral in der Tabelle TFKT abgelegt werden. Du kannst also eine Formel VOLUMEN hinterlegen: BREITE * HOEHE * LAENGE.</p>
<p>In deinem Programm musst dann eine entsprechende Zuweisung zu diesen Variablen BREITE, HOEHE, LAENGE machen. Nun ändert sich so eine Volumenberechnung natürlich nicht. Es sei denn, man hinterlegt einen Sicherheitswert, um das Volumen etwas zu vergrößern, also z.B.: BREITE * HOEHE * LAENGE * 1,005</p>
<p>In diesem Fall kann die Volumenberechnung in mehreren Applikationen verwendet werden und sobald der Sicherheitswert geändert wird, wird dies in allen Berechnungen berücksichtigt.</p>
<p>Eine andere Variante wäre, dass jeder Dimension ein eigener Sicherheitswert zugewiesen wird:</p>
<table>
<tbody>
<tr>
<td>KEY</td>
<td>Formeltext</td>
</tr>
<tr>
<td>VOLUMEN</td>
<td>TFKT:BREITE * TFKT:HOEHE * TFKT:LAENGE</td>
</tr>
<tr>
<td>BREITE</td>
<td>BREITE + 1</td>
</tr>
<tr>
<td>HOEHE</td>
<td>HOEHE + 1</td>
</tr>
<tr>
<td>LAENGE</td>
<td>LAENGE + 2</td>
</tr>
</tbody>
</table>
<p>Die Tabelleneinträge lassen sich mit Transaktion SE16N bearbeiten; es gibt keinen Tabellenpflegedialog dafür&#8230; Sollte die Benutzung mit SE16n nicht möglich sein, so kann jedoch schnell ein Tabellenpflegedialog für die Tabelle generiert werden.</p>
<p>[notice type=&#8217;info&#8217;]<strong>Aus der Doku zum Funktionsbaustein CHECK_FORMULA</strong></p>
<p>Wenn eine Benutzergruppe eine andere Tabelle als TFKT benötigt (um z.B. den Schlüsselteil zu strukturieren oder eigene Felder aufzunehmen), sollte die Referenztabelle TFKT zunächst kopiert werden. Eigene Funktionen können bei Bedarf ab Position 79 angefügt werden.</p>
<p>Eine Tabelle, die zur Formelablage verwendet wird, muß eine Schlüssellänge von 13 und einen Funktionsteil der Länge 65 besitzen.[/notice]</p>
<h3>Parameter</h3>
<p>Formeln können auch Parameter enthalten, so dass du zum Beispiel die Formel VOLUMEN mit entsprechenden Werten aufrufen kannst:</p>
<pre>VOLUMEN(10,20,30)</pre>
<p>Die Parameter werden durch Komma getrennt. Die formalen Parameter in der Formel beginnen mit # und werden durchnummeriert. Die Berechnung für das Volumen sieht dann so aus:</p>
<pre>VOLUMEN: #1*#2*#3</pre>
<p>[notice type=&#8217;info&#8217;]SAP-Hinweis: 560672 &#8211; Selbstdefinierte Formeln in Tabelle TFKT[/notice]</p>
<h3>Demoprogramm</h3>
<pre>REPORT  zz_demo_formula.
*== selection screen</pre>
<pre>PARAMETERS p_formel TYPE char50       DEFAULT 'TFKT:VOLUMEN'.
PARAMETERS p_breite TYPE p DECIMALS 2 DEFAULT 10.
PARAMETERS p_hoehe  TYPE p DECIMALS 2 DEFAULT 10.
PARAMETERS p_laenge TYPE p DECIMALS 2 DEFAULT 10.
PARAMETERS p_result TYPE p DECIMALS 2 MODIF ID x.
 
*== DATA
DATA gv_retcode     TYPE i.
DATA gv_repid       TYPE repid VALUE sy-repid.
*== set result field to Display only
AT SELECTION-SCREEN OUTPUT.
  LOOP AT SCREEN.
    IF screen-group1 = 'X'.
      screen-input = '0'.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.
 
AT SELECTION-SCREEN.
*== check formula (Syntax check)
   CALL FUNCTION 'CHECK_FORMULA'
     EXPORTING
       formula = p_formel
       program = gv_repid
       routine = 'CHECK_VALUES'
     IMPORTING
       subrc   = gv_retcode.
*== compute formula
   IF gv_retcode IS INITIAL.
     CALL FUNCTION 'EVAL_FORMULA'
       EXPORTING
         formula = p_formel
         program = gv_repid
         routine = 'GET_VALUES'
       IMPORTING
         value   = p_result
       EXCEPTIONS
         OTHERS  = 1.
   ENDIF.
 
*&amp;---------------------------------------------------------------------*
*&amp;      Form  GET_VALUES
*&amp;---------------------------------------------------------------------*
FORM get_values USING parm CHANGING wert subrc.
   CASE parm.
     WHEN 'BREITE'.
       wert = p_breite.
       subrc = 0.
     WHEN 'HOEHE'.
       wert = p_hoehe.
       subrc = 0.
     WHEN 'LAENGE'.
       wert = p_laenge.
       subrc = 0.
   ENDCASE.
ENDFORM.                    "GET_VALUES
 
*&amp;---------------------------------------------------------------------*
*&amp;      Form  CHECK_VALUES
*&amp;---------------------------------------------------------------------*
FORM check_values USING parm CHANGING subrc.
   CASE parm.
     WHEN 'BREITE'
       OR 'HOEHE'
       OR 'LAENGE'.
       subrc = 0.
   ENDCASE.
ENDFORM.                    "CHECK_VALUES</pre>
<h3>Bugs/ Probleme</h3>
<p>Ich habe es nicht geschafft, den Parameter UNIT_OF_MEASURE sinnvoll einzusetzen. In obigem Beispiel mit der Volumenberechnung wäre es natürlich schön, wenn ich eine Berechnung in Metern durchführen möchte, jedoch immer genau 1 CM Sicherheitsabstand addiert werden soll. Es scheint jedoch so, als würde der Parameter komplett ignoriert werden. Eventuell habe ich aber die Verwendung nicht richtig verstanden&#8230;</p>
<p>[notice type=&#8217;alert&#8217;]912586 &#8211; Formelinterpreter: geschachtelte Aufrufe mit Parametern<br />
1324714 &#8211; Formelinterpreter: Fehlerhafte Berechnungen bei TFKT [/notice]</p>
<p>Demoprogramm RSCALC10 funktioniert nicht.</p>
<p>Der Beitrag <a href="/blog/formelberechnung/">Formelberechnung</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Hovitaga Advanced Pattern Enhancement</title>
		<link>/blog/hovitaga-advanced-pattern-enhancement/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 07 Mar 2014 15:44:49 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Texte]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Muster]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Download]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4550</guid>

					<description><![CDATA[<p>Wer in ABAP programmiert hat mit Sicherheit schon den Befehl "Muster einfügen" im Editor verwendet. Hierüber lassen sich in erster Linie die Aufrufe für Funktionsbausteine und Methoden in den Quelltext einfügen. Gerade bei Funktionsbausteinen ist dies ein unerlässliches Hilfsmittel, denn die Syntaxprüfung prüft bei Funktionsbausteinen nicht, ob ein falscher Parameter verwendet wird. Die ungarische SAP-Entwicklerfirma Hovitaga hat für das Einfügen von Mustern ein kleines kostenloses AddOn entwickelt.</p>
<p>Der Beitrag <a href="/blog/hovitaga-advanced-pattern-enhancement/">Hovitaga Advanced Pattern Enhancement</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Wer in ABAP programmiert hat mit Sicherheit schon den Befehl &#8220;Muster einfügen&#8221; im Editor verwendet. Hierüber lassen sich in erster Linie die Aufrufe für Funktionsbausteine und Methoden in den Quelltext einfügen. Gerade bei Funktionsbausteinen ist dies ein unerlässliches Hilfsmittel, denn die Syntaxprüfung prüft bei Funktionsbausteinen nicht, ob ein falscher Parameter verwendet wird.</p>
<p>Die ungarische SAP-Entwicklerfirma <a title="Homepage | Hovitaga" href="http://www.hovitaga.com/">Hovitaga </a>hat für das Einfügen von Mustern ein kleines kostenloses AddOn entwickelt. Doch der Reihe nach.</p>
<h2>Einfügen von Mustern</h2>
<p>Über das Menü <em>Hilfsmittel &#8211; Einstellungen</em> im Editor können einige Einstellungen für das Einfügen von Mustern vorgenommen werden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_22_14.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4552" alt="Muster Einstellungen" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_22_14-282x300.jpg" width="282" height="300" srcset="/wp-content/uploads/2014/03/03_07_16_22_14-282x300.jpg 282w, /wp-content/uploads/2014/03/03_07_16_22_14.jpg 565w" sizes="(max-width: 282px) 100vw, 282px" /></a></p>
<p>&nbsp;</p>
<h2>Muster einfügen SAP Standard</h2>
<p>Das Einfügen von Mustern erfolgt über den Druckknopf <em>Muster</em> im Editor. Es erscheint ein Popup in dem man auswählen muss, für welchen Befehl man ein Muster einfügen möchte. Wir entscheiden uns für die Option <em>ABAP Objects Muster</em> und gelangen auf ein weiteres Popup:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_11_34.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4553" alt="ABAP Objects Muster" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_11_34-289x300.jpg" width="289" height="300" srcset="/wp-content/uploads/2014/03/03_07_16_11_34-289x300.jpg 289w, /wp-content/uploads/2014/03/03_07_16_11_34.jpg 376w" sizes="(max-width: 289px) 100vw, 289px" /></a></p>
<p>&nbsp;</p>
<p>Nachdem ich mich an dieser Stelle häufig ärgere, dass in der Suchhilfe zur Methode alle Methoden der Klasse angezeigt werden und keine Unterscheidung zwischen PRIVATE, PROTECTED oder PUBLIC gemacht wird, endet hier auch die Funktionalität im SAP Standard. Je nach Release wird vor dem Aufruf der Methode noch die Datendeklaration eingefügt.</p>
<h2>Muster einfügen Hovitaga style</h2>
<p>Dort, wo SAP aufhört, fängt die Funktionalität von Hovitaga an. An der Stelle, wo normalerweise der Code in den Quelltext eingefügt wird, erscheint erneut ein Popup:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_15_50_29.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4554" alt="Hovitaga Dialog" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_15_50_29-300x191.jpg" width="300" height="191" srcset="/wp-content/uploads/2014/03/03_07_15_50_29-300x191.jpg 300w, /wp-content/uploads/2014/03/03_07_15_50_29-1024x655.jpg 1024w, /wp-content/uploads/2014/03/03_07_15_50_29-624x399.jpg 624w, /wp-content/uploads/2014/03/03_07_15_50_29.jpg 1363w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>Hier kann durch verschiedene Funktionen der Aufruf im Quelltext gesteuert werden. Anstatt im Coding nicht benötigte Parameter zu löschen, kann im Dialog bereits entschieden werden, welche Parameter benötigt werden. Auf Wunsch wird auch die Datendeklaration für den jeweiligen Parameter eingefügt. Für Tabellenparameter kann auch ein entsprechender Arbeitsbereich deklariert werden. Hovitaga folgt hierbei den üblichen Namenskonventionen:</p>
<ul>
<li>S = Struktur</li>
<li>T = Tabelle</li>
<li>V = Variable</li>
<li>R = Referenz auf ein Objekt</li>
</ul>
<p>Durch einen Schalter kann zwischen globaler und lokaler Datendeklaration gewählt werden, was sich in der Namenskonvention durch die Verwendung von G oder L auswirkt.</p>
<p>In einer Vorschau wird der einzufügende Aufruf angezeigt. Man sieht sofort, wie sich die Änderungen von z.B. &#8220;Remove Unsed Lines&#8221; auswirken.</p>
<h2>Fazit</h2>
<p>Ich möchte nicht soweit gehen, dass es ein unentbehrliches Tool für den ABAP-Programmierer ist. Allerdings finden sich sinnvolle Funktionen in dieser Erweiterung, die das Leben durchaus leichter machen können. Es gibt also eine klare Tricktresor-Empfehlung!</p>
<h2>Download</h2>
<p><a title="Advanced Pattern Enhancement | Hovitaga" href="http://www.hovitaga.com/Advanced-pattern-enhancement-overview">Hovitaga Advanced Pattern Enhancement &#8211; Product page and Download</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/hovitaga-advanced-pattern-enhancement/">Hovitaga Advanced Pattern Enhancement</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Simulation einer E-Mail-Anhang-Konvertierung</title>
		<link>/blog/simulation-einer-e-mail-anhang-konvertierung/</link>
		
		<dc:creator><![CDATA[Stefan Schnell]]></dc:creator>
		<pubDate>Thu, 26 Dec 2013 08:42:45 +0000</pubDate>
				<category><![CDATA[Schnell programmiert]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[anhang]]></category>
		<category><![CDATA[konvertierung]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Entwicklung]]></category>
		<category><![CDATA[Download]]></category>
		<category><![CDATA[e-mail]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=4104</guid>

					<description><![CDATA[<p>Oft haben Entwickler das Problem, dass nicht alle Applikationen, die sie für Ihre Entwicklung benötigen, zur richtigen Zeit verfügbar sind. So kann es notwendig sein die eine oder andere Applikation zu simulieren. Hier ist ein Lösungsansatz wie eine Konvertierung von Bildern als E-Mail-Anhang simuliert werden kann, z.B. für ein ERMS (E-Mail Response Management System). Ein Beispiel: Ein Sachbearbeiter erhält eine E-Mail von einem Kunden über einen Schadensfall mit einem Foto von seiner Kamera. Das Foto...</p>
<p>Der Beitrag <a href="/blog/simulation-einer-e-mail-anhang-konvertierung/">Simulation einer E-Mail-Anhang-Konvertierung</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Oft haben Entwickler das Problem, dass nicht alle Applikationen, die sie für Ihre Entwicklung benötigen, zur richtigen Zeit verfügbar sind. So kann es notwendig sein die eine oder andere Applikation zu simulieren. Hier ist ein Lösungsansatz wie eine Konvertierung von Bildern als E-Mail-Anhang simuliert werden kann, z.B. für ein ERMS (E-Mail Response Management System).</p>
<p>Ein Beispiel: Ein Sachbearbeiter erhält eine E-Mail von einem Kunden über einen Schadensfall mit einem Foto von seiner Kamera. Das Foto liegt aber nicht in einem gängigen Format wie jpeg oder tif vor. Für eine schnelle Schadensfallbearbeitung ist es jedoch notwendig das Foto in ein pdf zu konvertieren und zu archivieren. Für diesen Fall bietet das ERMS eine automatische Konvertierung &#8211; aber zum Entwicklungszeitpunkt ist die Konvertierung noch nicht verfügbar.</p>
<p>Um das Format eines Bildes umzuwandeln kann nconvert verwendet werden, welches Bestandteil des frei verfügbaren <a title="XNview" href="http://www.xnview.com/de" target="_blank">XNview</a> ist. Dazu ist es notwendig nconvert mit <a title="BinFile2ABAP" href="http://www.stschnell.de/binfile2abap.htm" target="_blank">BinFile2ABAP</a> in ein ABAP Funktionsbaustein umzuwandeln. Mit diesem Funktionsbaustein und nconvertX, einer ActiveX-Bibliothek für den Präsentationsserver welche die Möglichkeit eröffnet nconvert in ABAP zu nutzen, kann eine Konvertierung simuliert werden.</p>
<p>Laden Sie sich das folgende Datei herunter, dort finden Sie die entsprechenden ABAP-Funktionsbausteine.<br />
<a href="http://www.stschnell.de/temp/nconvertx.zip">nconvertx.zip</a></p>
<p>nconvert unterstützt 493 unterschiedliche Formate. Es ist ebenso möglich z.B. die Größe des Bildes zu ändern oder eine ganze Menge anderer Sachen.</p>
<p><span style="line-height: 1.5em">Mit nconvert und nconvertX ist es sehr einfach eine E-Mail-Anhang Bildkonvertierung zu simulieren.</span></p>
<p>Ergänzung vom 06.03.2014:<br />
Die Datei nconvert.jpg ist nach dem Download in nconvert.zip umzubenennen und kann dann entpackt werden.<br />
nconvertX ist nun vollständig in 32 und 64 bit Environments nutzbar &#8211; siehe auch Diskussion <a href="http://scn.sap.com/thread/3505080">hier</a>.<br />
Eine vollständige Hilfe mit Beispielen liegt nconvertX bei.</p>
<p>Der Beitrag <a href="/blog/simulation-einer-e-mail-anhang-konvertierung/">Simulation einer E-Mail-Anhang-Konvertierung</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Testdaten automatisiert erzeugen (Funktionsbaustein)</title>
		<link>/blog/testdaten-automatisiert-erzeugen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 20 Feb 2013 17:23:18 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[testdaten]]></category>
		<category><![CDATA[RFC]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=667</guid>

					<description><![CDATA[<p>Funktionsbausteine haben gegen&#252;ber Methoden (noch) einen riesigen Vorteil. Man kann Testdaten speichern und diese sp&#228;ter wieder laden. Dieses Feature kann man sich bei der Fehleranalyse zu Nutzen machen. Implementieren Sie einfach zu Beginn des Bausteins das Makro, das die &#220;bergebenen Daten speichert.</p>
<p>Der Beitrag <a href="/blog/testdaten-automatisiert-erzeugen/">Testdaten automatisiert erzeugen (Funktionsbaustein)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Funktionsbausteine haben gegenüber Methoden (noch) einen riesigen Vorteil. Man kann Testdaten speichern und diese später wieder laden. Dieses Feature kann man sich bei der Fehleranalyse zu Nutzen machen. Implementieren Sie einfach zu Beginn des Bausteins das Makro, das die Übergebenen Daten speichert.</p>
<h2>Erzeugen von Testdaten</h2>
<p>Um die Testdaten automatisiert speichern zu können, müssen Sie das Include FBGENMAC in Ihre Funktionsgruppe einbinden. Das geht am Einfachsten im TOP-Include:</p>
<p>INCLUDE fbgenmac.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2013/02/se37.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018061" src="https://tricktresor.com/wp-content/uploads/2013/02/se37.png" alt="" width="517" height="240" srcset="/wp-content/uploads/2013/02/se37.png 517w, /wp-content/uploads/2013/02/se37-300x139.png 300w" sizes="(max-width: 517px) 100vw, 517px" /></a></p>
<p>Die erste Anweisung in Ihrem Programm sollte dann heißen:</p>
<pre class="lang:abap decode:true">fbgenmac 'Z_FUNKTIONSBAUSTEIN'.</pre>
<p>Wobei Sie natürlich &#8220;Z_FUNKTIONSBAUSTEIN&#8221; durch den Namen des Funktionsbausteins ersetzen, in dem Sie das Makro einbinden.</p>
<p>Des Weiteren muss noch der User-Parameter FBGENDAT gesetzt sein, damit die Daten der Importparameter auch wirklich gespeichert werden.</p>
<p>Es werden dann Testdaten mit dem Namen GENERATED BY:SAPUSER erzeugt.</p>
<h2 class="head1">TIPP 1</h2>
<p>Das Include kann natürlich einfach kopiert werden und an eigene Bedürfnisse angepasst werden, zum Beispiel um die Abfrage des Parameters zu umgehen oder um ein wichtiges Feld zur Identifikation der &#8220;Testdaten&#8221; als Namen zu verwenden.</p>
<h2 class="head1">TIPP 2</h2>
<p class="text1">Über eine Customizingtabelle könnte man dann noch einfach steuern, für welche Funktionsbausteine eine Protokollierung erfolgen soll. Tauchen vermehrt &#8220;unerklärliche&#8221; oder schwer nachzuvollziehende Fehler auf, kann die Protokollierung eingeschaltet werden.</p>
<h2 class="head1">Löschen von Testdaten</h2>
<p class="text1">Es gibt keinen Funktionsbaustein zum Löschen der Testdaten. Dies passiert ausschließlich in der Testumgebung des Funktionsbausteins:</p>
<pre class="lang:abap decode:true">DELETE FROM eufunc
 WHERE relid  = 'FL'
   AND gruppe = &lt;Name Funktionsgruppe&gt;
   AND nummer = &lt;Nummer des Testdatensatzes&gt;
   AND Name   = &lt;Name des Funktionsbausteins&gt;
   AND seqid  = space.</pre>
<h2 class="head1">Testdaten per RFC Kopieren</h2>
<p class="text1">Mit diesem Funktionsbaustein RS_RFC_TESTDATA_GROUP_TRANSFER können Sie Testdaten einer Funktionsbausteingruppe per RFC aus einem anderen System kopieren.</p>
<p class="text1">Das gleiche funktioniert mit dem Baustein RS_RFC_TESTDATA_TRANSFER_FUNC für einen bestimmten Funktionsbaustein.</p>
<p class="text1">Die Funktion ist aus der Testumgebung des Funktionsbausteins nicht direkt erreichbar. Aber indirekt: Geben Sie den Funktionscode TESTTRANS in das OK-Code-Fenster ein. Auf dem Popup erhalten Sie dann die Parameter, die auch im Funktionsbaustein zu füllen wären:</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" src="/wp-content/uploads/tt_images/screenshots/fb_testtrans.jpg" alt="" /><br />
Funktionscode TESTTRANS in der Testumgebung</td>
</tr>
</tbody>
</table>
<p>Der Beitrag <a href="/blog/testdaten-automatisiert-erzeugen/">Testdaten automatisiert erzeugen (Funktionsbaustein)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Aktueller Inhalt des Selektionsbildes</title>
		<link>/blog/aktueller-inhalt-des-selektionsbildes/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 06 Aug 2012 10:46:14 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Selektionsbilder]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=651</guid>

					<description><![CDATA[<p>Um herauszufinden, welche Selektionswerte aktuell in einem Selektionsbild erfasst wurden, k&#246;nnen Sie Funktionsbausteine verwenden.</p>
<p>Der Beitrag <a href="/blog/aktueller-inhalt-des-selektionsbildes/">Aktueller Inhalt des Selektionsbildes</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Um herauszufinden, welche Selektionswerte aktuell in einem Selektionsbild erfasst wurden, können Sie Funktionsbausteine verwenden.</p>
<p class="head1">RS_REFRESH_FROM_SELECTOPTIONS</p>
<p>Mit diesem Baustein erhalten Sie die aktuellen Werte für ein Selektionsbild.</p>
<p class="head1">RS_VARIANT_CONTENTS</p>
<p>Um an den Inhalt gespeicherter Reportvarianten zu kommen, können Sie diesen Baustein verwenden.</p>
<p>Der Beitrag <a href="/blog/aktueller-inhalt-des-selektionsbildes/">Aktueller Inhalt des Selektionsbildes</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Allgemeines zu Adressen</title>
		<link>/blog/allgemeines/</link>
					<comments>/blog/allgemeines/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2012 15:26:32 +0000</pubDate>
				<category><![CDATA[Cross Applications]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Adressen]]></category>
		<category><![CDATA[BAPIs]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=642</guid>

					<description><![CDATA[<p>Allgemeines zu Adressen im SAP-System. </p>
<p>Der Beitrag <a href="/blog/allgemeines/">Allgemeines zu Adressen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Allgemeines zu Adressen im SAP-System.</p>
<p class="head1">Info</p>
<p class="head2">Gültigkeit</p>
<p class="text1">Jede Adresse hat theoretisch eine Gültigkeit. Diese Funktion wird jedoch meines Wissens nirgendwo im SAP System genutzt.</p>
<p class="text1">Adressen sind immer vom 1.1.0001 bis zum 31.12.9999 gültig.</p>
<p class="head1">Tabellen</p>
<ul>
<li>
<div class="text1">ADRC &#8211; Enthält den Adressdatenteil zu einer Adresse.</div>
</li>
<li>ADR2 &#8211; Telefonnummern</li>
<li>ADR3 &#8211; Faxnummern</li>
<li>ADR6 &#8211; Email-Adressen</li>
</ul>
<p class="head1">Type-Pool SZADR</p>
<p>Leider sind viele Strukturen nicht im Dictionary definiert, sondern &#8220;nur&#8221; im Type-Pool SZADR.</p>
<p class="head1">Funktionsbausteine</p>
<p>In der Regel fangen die Funktionsbausteine mit <strong>ADDR_</strong> an. Für spezielle Anwendungsfälle findet man hier sicherlich die richtigen Bausteine.</p>
<p>Ebenfalls interessant könnten die BAPIs sein, die mit <strong>BAPI_ADDRESS</strong> beginnen.</p>
<p>Der Beitrag <a href="/blog/allgemeines/">Allgemeines zu Adressen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/allgemeines/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Taschenrechner</title>
		<link>/blog/taschenrechner/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 24 Nov 2010 13:33:26 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=568</guid>

					<description><![CDATA[<p>Ein kleiner Taschenrechner im Popup</p>
<p>Der Beitrag <a href="/blog/taschenrechner/">Taschenrechner</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ein kleiner Taschenrechner im Popup<br /><P>Der Funktionsbaustein <STRONG>FITRV_CALCULATOR</STRONG> zeigt einen kleinen aber feinen Taschenrechner in einem Popup. </P><P><TABLE class="tblimg" cellPadding="0" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/Bild067.jpg"><BR>Ein kleiner Taschenrechner</P></TD></TR></TBODY></TABLE></P><P>Sicher keine Killer-Applikation, aber vielleicht hilfreich.</P><P>Mit WS_EXECUTE kann aber auch einfach den Window-Taschenrechner starten:</P><P class="sap1">CALL FUNCTION &#8216;WS_EXECUTE&#8217;<BR>&nbsp; IMPORTING<BR>&nbsp;&nbsp;&nbsp; program = &#8216;calc.exe&#8217;.</P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/taschenrechner/">Taschenrechner</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Felder aus Feldkatalog auswählen</title>
		<link>/blog/felder-aus-feldkatalog-auswaehlen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 10 Dec 2008 12:37:40 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=516</guid>

					<description><![CDATA[<p>Dieser Baustein kann verwendet werden, um aus einer Struktur Felder ausw&#228;hlen zu lassen. Die Felder werden mit Beschreibung dargestellt. Es kann auch gesucht werden. Auch eine Sortierung der Felder ist m&#246;glich.</p>
<p>Der Beitrag <a href="/blog/felder-aus-feldkatalog-auswaehlen/">Felder aus Feldkatalog auswählen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Dieser Baustein kann verwendet werden, um aus einer Struktur Felder ausw&auml;hlen zu lassen. Die Felder werden mit Beschreibung dargestellt. Es kann auch gesucht werden. Auch eine Sortierung der Felder ist m&ouml;glich.<br /><P>&nbsp;</P><P>Der Funktionsbaustein RSBC_TOOLS_FIELD_SELECTION liefert alle Feldnamen zur&uuml;ck, die der Anwender im Popup ausgew&auml;hlt hat:</P><P><IMG src="/wp-content/uploads/tt_images/abap/auto_001.jpg"></P></p>
<p>Der Beitrag <a href="/blog/felder-aus-feldkatalog-auswaehlen/">Felder aus Feldkatalog auswählen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Eingabeparameter als Testdaten speichern</title>
		<link>/blog/eingabeparameter-als-testdaten-speichern/</link>
					<comments>/blog/eingabeparameter-als-testdaten-speichern/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 13 May 2008 11:31:39 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=476</guid>

					<description><![CDATA[<p>Oftmals ist es schwierig bis unm&#246;glich, Fehler in einem Funktionsbaustein zu finden, der &#252;ber eine Schnittstelle aufgerufen wird (z.B. RFC). SAP bietet jedoch die M&#246;glichkeit, die &#220;bergabedaten als Testdaten abzuspeichern. Der Baustein kann dann online mit den &#252;bergebenen Daten getestet werden.</p>
<p>Der Beitrag <a href="/blog/eingabeparameter-als-testdaten-speichern/">Eingabeparameter als Testdaten speichern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Oftmals ist es schwierig bis unm&ouml;glich, Fehler in einem Funktionsbaustein zu finden, der &uuml;ber eine Schnittstelle aufgerufen wird (z.B. RFC). SAP bietet jedoch die M&ouml;glichkeit, die &Uuml;bergabedaten als Testdaten abzuspeichern. Der Baustein kann dann online mit den &uuml;bergebenen Daten getestet werden.<br /><P>Dazu muss in den TOP-Include der Funktionsgruppe der Include FBGENMAC eingebunden werden:</P><P class="sap1">INCLUDE fbgenmac.</P><P>Zu Beginn des Bausteins muss das Makro FBGENMAC aufgerufen werden:</P><P class="sap1">fbgenmac &#8216;Z_MEIN_BAUSTEIN&#8217;.</P><P>Die &Uuml;bergabedaten werden dann ins Testdatenverzeichnis geschrieben. Dazu muss der Benutzerparameter FBGENDAT gesetzt sein: SAPGUI-Men&uuml;: <EM>System &#8211; Benutzerdaten &#8211; Eigene Daten &#8220;Parameter&#8221;</EM></P><P>Leider kann kein beschreibender Text mitgegeben werden. Die Testdaten heissen dann alle &#8220;GENERATED BY: &lt;SAP-Username&gt;&#8221;&#8230;</P><P>Das Makro l&auml;sst sich aber leicht kopieren und entsprechend anpassen. So k&ouml;nnte es z.B. Sinn machen, die Protokollierung per Steuerungstabelle ein- und auszuschalten. Bei massenhaftem Aufruf bietet sich auch ein Z&auml;hler an, der z.B. nur die ersten 10 Testdatens&auml;tze speichert.</P></p>
<p>Der Beitrag <a href="/blog/eingabeparameter-als-testdaten-speichern/">Eingabeparameter als Testdaten speichern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/eingabeparameter-als-testdaten-speichern/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
