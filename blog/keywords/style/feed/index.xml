<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>style Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/style/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Mon, 23 May 2022 08:53:38 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>style Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>SAP und bunte Bilder &#8211; geht das?</title>
		<link>/blog/sap-und-bunte-bilder-cl_gui_html_viewer/</link>
		
		<dc:creator><![CDATA[M&#38;Mler]]></dc:creator>
		<pubDate>Wed, 12 Nov 2014 13:54:52 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Entwurfsmuster]]></category>
		<category><![CDATA[MM]]></category>
		<category><![CDATA[Diagramme]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[google]]></category>
		<category><![CDATA[Bilder]]></category>
		<category><![CDATA[Charts]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_gui_html_viewer]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=5107</guid>

					<description><![CDATA[<p>SAP ERP kann viel. Kleine Tabellen, große Tabellen ALV Tabellen und im NWBC auch neue PowerListen.<br />
Sobald man Daten jedoch grafisch anzeigen möchte kommt recht schnell Ernüchterung ins Spiel. In diesem Artikel zeige ich, wie Daten einfach und trotzdem grafisch anspruchsvoll dargestellt werden können.</p>
<p>Der Beitrag <a href="/blog/sap-und-bunte-bilder-cl_gui_html_viewer/">SAP und bunte Bilder &#8211; geht das?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>SAP ERP kann viel. Kleine Tabellen, große Tabellen ALV Tabellen und im NWBC auch neue PowerListen.<br />
Sobald man Daten jedoch grafisch anzeigen möchte kommt recht schnell Ernüchterung ins Spiel.<br />
Die Prognose bzw. MD04 Diagramme stammen wohl noch aus den frühen 90er Jahren.</p>
<p>Im SAP Demo-Programm <strong>GRAPHICS_GUI_CE_DEMO </strong>sieht man ein Beispiel mit der Chart-Engine. Der Aufwand diese Diagramme richtig zu formatieren und einzubinden wird oftmals bei knappen Entwicklungsbudgets als erstes zusammengestrichen.</p>
<p>Eine alternative Lösung um <em>unkritische</em> Daten optisch ansprechend zu verpacken ist die <a title="Google Charts" href="https://developers.google.com/chart/" target="_blank">Google-Chart API</a>.<br />
Firmendaten an GOOGLE schicken?!? Es ist jedem selbst überlassen welche Daten wirklich übergeben werden.<br />
01.01.2014 &#8211; 100<br />
01.02.2014 &#8211; 80<br />
01.03.2014 &#8211; 70<br />
01.04.2014 &#8211; 100<br />
01.05.2014 &#8211; 200<br />
Datum + Zahl<br />
Ob das Verkaufsmengen, Einkaufswerte,Anzahl  Mitarbeiter oder Umsatz in t€ ist kann man ja bequem über dem Diagramm im HTML ausgeben.<br />
Google versichert zudem die übergebenen Daten nicht zu speichern oder auszuwerten. Wie weit man das glaubt sei wieder jedem selbst überlassen.</p>
<p>Beispiele:</p>
<figure id="attachment_5109" aria-describedby="caption-attachment-5109" style="width: 300px" class="wp-caption alignnone"><a href="https://tricktresor.com/wp-content/uploads/2014/11/pie.png"><img fetchpriority="high" decoding="async" class="size-medium wp-image-5109" src="https://tricktresor.com/wp-content/uploads/2014/11/pie-300x206.png" alt="Google Chart Pie Chart " width="300" height="206" srcset="/wp-content/uploads/2014/11/pie-300x206.png 300w, /wp-content/uploads/2014/11/pie.png 321w" sizes="(max-width: 300px) 100vw, 300px" /></a><figcaption id="caption-attachment-5109" class="wp-caption-text">Google Chart Pie Chart</figcaption></figure>
<figure id="attachment_5110" aria-describedby="caption-attachment-5110" style="width: 300px" class="wp-caption alignnone"><a href="https://tricktresor.com/wp-content/uploads/2014/11/line.png"><img decoding="async" class="size-medium wp-image-5110" src="https://tricktresor.com/wp-content/uploads/2014/11/line-300x156.png" alt="Google Chart Line Chart" width="300" height="156" srcset="/wp-content/uploads/2014/11/line-300x156.png 300w, /wp-content/uploads/2014/11/line.png 381w" sizes="(max-width: 300px) 100vw, 300px" /></a><figcaption id="caption-attachment-5110" class="wp-caption-text">Google Chart Line Chart</figcaption></figure>
<figure id="attachment_5108" aria-describedby="caption-attachment-5108" style="width: 300px" class="wp-caption alignnone"><a href="https://tricktresor.com/wp-content/uploads/2014/11/geo.png"><img decoding="async" class="size-medium wp-image-5108" src="https://tricktresor.com/wp-content/uploads/2014/11/geo-300x176.png" alt="Google Chart Geo-Chart" width="300" height="176" srcset="/wp-content/uploads/2014/11/geo-300x176.png 300w, /wp-content/uploads/2014/11/geo.png 445w" sizes="(max-width: 300px) 100vw, 300px" /></a><figcaption id="caption-attachment-5108" class="wp-caption-text">Google Chart Geo Chart</figcaption></figure>
<h2><strong>Hier ein konkretes Beispiel Coding zum Nachbauen:</strong></h2>
<p>Ziel die MM Bestände der einzelnen Werke als Tortendiagramm darstellen.<br />
Datengrundlage: MM Bestandsstatistik &#8211;&gt;S032</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/11/bestand_werk.png"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-5114" src="https://tricktresor.com/wp-content/uploads/2014/11/bestand_werk-300x220.png" alt="bestand_werk" width="300" height="220" srcset="/wp-content/uploads/2014/11/bestand_werk-300x220.png 300w, /wp-content/uploads/2014/11/bestand_werk.png 461w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Das HTML Coding findet man <a href="https://developers.google.com/chart/interactive/docs/gallery/piechart" target="_blank">hier</a>.<br />
HTML Kenntnisse sind sicherlich hilfreich. Es muss jedoch lediglich der rot markierte Bereich angepasst werden.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/11/HTML.png"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-5112" src="https://tricktresor.com/wp-content/uploads/2014/11/HTML-300x196.png" alt="HTML" width="300" height="196" srcset="/wp-content/uploads/2014/11/HTML-300x196.png 300w, /wp-content/uploads/2014/11/HTML-624x409.png 624w, /wp-content/uploads/2014/11/HTML.png 977w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h2>Coding</h2>
<pre>REPORT zz_google_chart.
*&amp;---------------------------------------------------------------------*
*&amp; Report ZMM_HTML_TEST
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp; Kleines Testprogramm als Demo für CL_GUI_HTML_VIEWER
*&amp; Dieser Report selektiert alle Bestände aus der Tabellen S032 (MM Statitik) und gibt das Ergebnis als Google Chart aus.
*&amp; M&amp;Mler (AWI) 11/2014
*&amp; Keine Garantie, kein Support, keine Kosten.
*&amp;---------------------------------------------------------------------*

define html.
 ls_html = &amp;1. "HTML schreiben
 APPEND ls_html TO lt_html. "An HTML Ausgabetabelle hängen
end-OF-DEFINITION.

TABLES: s032.
TYPES: BEGIN OF ty_s032,
 werks TYPE werks_d,
 wbwbest TYPE wbwbest,
 END OF ty_s032.
"Daten
DATA: gt_data TYPE TABLE OF ty_s032.
"Für HTML ausgabe
DATA: lt_html TYPE TABLE OF char255, "hier landet der HTMl Code drin
 ls_html LIKE LINE OF lt_html, "eine zeile HTML Code
 lo_container TYPE REF TO cl_gui_custom_container, "für die Ausgabe
 lo_html_control TYPE REF TO cl_gui_html_viewer, "für die Ausgabe
 lf_url(1024),
 lf_lines TYPE i, " Anzahl Zeilen
 lf_komma(1). "letzter Datensatz darf kein Komma haben
FIELD-SYMBOLS: &lt;fs_data&gt; TYPE ty_s032.
SELECT-OPTIONS: s_werks FOR s032-werks.

START-OF-SELECTION.
  "Alle Bestände je Werk aus der S032 summieren
  SELECT werks SUM( wbwbest ) AS wbwbest
    FROM s032
    INTO CORRESPONDING FIELDS OF TABLE gt_data
   WHERE werks IN s_werks
     AND vrsio = '000'
     GROUP BY werks .
 "Sodele, itab gt_data ist gefüllt --&gt; Ausgabe als Kuchendiagramm.
 "Das folgende Coding füllt den HTML Code in eine interne Tabelle.
 "per ABAP macro wird der Code deutlich leserlicher
   html `&lt;html&gt;`. "HTML schreiben
   html ` &lt;head&gt;`. "HTML schreiben
   html ` &lt;script type="text/javascript" src="https://www.google.com/jsapi"&gt;&lt;/script&gt;`.
   html ` &lt;script type="text/javascript"&gt;`.
   html ` google.load("visualization", "1", {packages:["corechart"]});`.
   html ` google.setOnLoadCallback(drawChart);`.
   html ` function drawChart() {`.
   html ` var data = google.visualization.arrayToDataTable([`.
 "Hier kommt der spannende Teil, in dem die "Nutzdaten" gefüllt werden
   html ` ['Werk', 'Bestand'],`.
   lf_lines = lines( gt_data ).
 "jetzt per Loop die itab in JavaScript "umbauen"
 "Der letzte Datensatz darf nicht mit Komma abgeschlossen werden, daher lf_komma
   lf_komma = ','.
   LOOP AT gt_data ASSIGNING &lt;fs_data&gt;.
     IF sy-tabix = lf_lines. "letzter Datensatz? Dann kein Komma
       FREE: lf_komma.
     ENDIF.
     ls_html = ` ['` &amp;&amp; &lt;fs_data&gt;-werks &amp;&amp; `', ` &amp;&amp; &lt;fs_data&gt;-wbwbest &amp;&amp; `] ` &amp;&amp; lf_komma.
     append ls_html to lt_html.
   ENDLOOP.
   html ` ]);`.
   html ` var options = {`.
   html ` title: 'Hier kann ein Titel eingegeben werden'`.
   html ` };`.
   html ` var chart = new google.visualization.PieChart(document.getElementById('piechart'));`.
   html ` chart.draw(data, options);`.
   html ` }`.
   html ` &lt;/script&gt;`.
   html ` &lt;/head&gt;`.
 "Ab hier kommt der BODY des HTML Dokuments. Wenn man keinen TITLE an die Grafik schickt, kann man dies hier im HTML machen
   html ` &lt;body&gt;`.
   html ` &lt;div id="piechart" style="width: 900px; height: 500px;"&gt;&lt;/div&gt;`.
   html ` &lt;/body&gt;`.
   html `&lt;/html&gt;`.

   CREATE OBJECT lo_html_control
     EXPORTING
       parent = cl_gui_container=&gt;screen0.
       lf_url = 'AWI.html'.
   CALL METHOD lo_html_control-&gt;load_data
     EXPORTING
       url = lf_url
     IMPORTING
       assigned_url = lf_url
     CHANGING
       data_table = lt_html[].
* HTML im VIEWER anzeigen
   lo_html_control-&gt;show_url( lf_url ).
 
  write space. "Dummy für SCREEN0
</pre>
<h3>Weitere Hinweise und Anregungen:</h3>
<p>&#8211; Mit den Geo-Charts kann man nur anhand einer Postleitzahl und eines Wertes schöne Kartendarstellungen erzeugen. Darstellung der Kunden, Lieferanten Verkaufsaktionen usw.<br />
&#8211; Die Charts können auch interaktiv &#8220;eingestellt&#8221; werden. In ABAP kann man die Java-Script Events abfangen. (Wenn ein talentierterer Entwickler als ich es bin mir ein Beispiel zukommen lässt, ergänze ich das gerne in dieser Doku)</p>
<p>12.11.2014 AWI</p>
<p>Der Beitrag <a href="/blog/sap-und-bunte-bilder-cl_gui_html_viewer/">SAP und bunte Bilder &#8211; geht das?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Flexible Erzeugung des Feldkataloges</title>
		<link>/blog/flexible-erzeugung-des-feldkataloges/</link>
		
		<dc:creator><![CDATA[stefan]]></dc:creator>
		<pubDate>Mon, 23 Jun 2014 16:56:06 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dynamische Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[create data]]></category>
		<category><![CDATA[assign]]></category>
		<category><![CDATA[cl_abap_structdescr]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_abap_typedescr]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<category><![CDATA[feldkatalog]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4862</guid>

					<description><![CDATA[<p>In dem Artikel DATA ... RENAMING WITH SUFFIX wurde die Aussage gemacht: "Die ALVs haben Probleme mit komplexen Strukturen". Das stimmt so nicht. Natürlich ist es kein Problem des ALV sondern ein Problem bei der Erzeugung des Feldkatalogs. Ich habe mich darauf hin des Problems um die Erzeugung des Feldkatalogs zu einer komplexen Struktur angenommen und ein Programm entwickelt. Das Programm analysiert die komplexe Datenstruktur einer internen Tabelle und baut den Feldkatalog so auf, dass der ALV ihn zur Anzeige der Daten verwenden kann.</p>
<p>Der Beitrag <a href="/blog/flexible-erzeugung-des-feldkataloges/">Flexible Erzeugung des Feldkataloges</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>In dem Artikel <a title="DATA … RENAMING WITH SUFFIX" href="https://tricktresor.com/blog/data-renaming-with-suffix/">DATA &#8230; RENAMING WITH SUFFIX</a> macht Enno die Aussage &#8220;Die ALVs haben Probleme mit komplexen Strukturen&#8221;. Das stimmt so nicht. Natürlich ist es kein Problem des ALV sondern ein Problem bei der Erzeugung des Feldkatalogs. Ich habe mich deswegen einmal um die Erzeugung des Feldkatalogs zu einer komplexen Struktur gekümmert und ein Programm entwickelt, dass einen Feldkatalog zu einer tiefen Struktur aufbauen kann.</p>
<h2>Arbeitsweise</h2>
<p>Das Programm analysiert die komplexe Datenstruktur einer internen Tabelle und baut den Feldkatalog so auf, dass der ALV ihn zur Anzeige der Daten verwenden kann.</p>
<p>Die Anzeige ist etwas bunter ausgefallen&#8230; <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png" alt="😉" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180623.jpg"><img loading="lazy" decoding="async" class="alignnone wp-image-4863 size-full" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_23_180623.jpg" alt="Bild_2014_06_23_180623" width="572" height="286" srcset="/wp-content/uploads/2014/06/Bild_2014_06_23_180623.jpg 572w, /wp-content/uploads/2014/06/Bild_2014_06_23_180623-300x150.jpg 300w" sizes="(max-width: 572px) 100vw, 572px" /></a></p>
<h2>Coding</h2>
<pre>REPORT .

TYPES: BEGIN OF gts_data,
*         mara TYPE mara,
*         marc TYPE marc,
         t005  TYPE t005,
         t005t TYPE t005t,
       END OF gts_data.


DATA gt_data     TYPE STANDARD TABLE OF gts_data WITH NON-UNIQUE DEFAULT KEY.
DATA gt_fieldcat TYPE lvc_t_fcat.
DATA go_grid     TYPE REF TO cl_gui_alv_grid.
DATA gv_style    TYPE i.

*----------------------------------------------------------------------*
*       CLASS lcx_general_exceptions DEFINITION
*----------------------------------------------------------------------*
CLASS lcx_general_exceptions DEFINITION INHERITING FROM cx_static_check.
ENDCLASS.                    "lcx_general_exceptions DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_alv_utilities DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_alv_utilities DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS create_fieldcat_lvc  IMPORTING i_data TYPE  any
                                       RETURNING value(et_fieldcat) TYPE lvc_t_fcat
                                       RAISING lcx_general_exceptions.
  PRIVATE SECTION.
    CLASS-METHODS create_fieldcat_line IMPORTING i_data TYPE  any
                                       RETURNING value(et_fieldcat) TYPE lvc_t_fcat.
ENDCLASS.                    "lcl_alv_utilities DEFINITION


START-OF-SELECTION.
  WRITE '.'.

  SELECT * UP TO 100 ROWS
    INTO TABLE gt_data
*    FROM mara JOIN marc ON mara~matnr = marc~matnr.
    FROM t005 JOIN t005t ON t005~land1 = t005t~land1.

  CREATE OBJECT go_grid
    EXPORTING
      i_parent = cl_gui_container=&gt;screen0.
  gt_fieldcat = lcl_alv_utilities=&gt;create_fieldcat_lvc( gt_data ).
  go_grid-&gt;set_table_for_first_display( CHANGING
                                          it_outtab       = gt_data
                                          it_fieldcatalog = gt_fieldcat ).

*----------------------------------------------------------------------*
*       CLASS lcl_alv_utilities IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_alv_utilities IMPLEMENTATION.

  METHOD create_fieldcat_lvc.

    FIELD-SYMBOLS: &lt;lt_data&gt; TYPE ANY TABLE,
                   &lt;ls_line&gt; TYPE any,
                   &lt;ls_dref&gt; TYPE any.

    DATA lr_dref                 TYPE REF TO data.
    data lo_descr                TYPE REF TO cl_abap_typedescr.
    data lo_structdescr          TYPE REF TO cl_abap_structdescr.
    DATA lt_components           TYPE cl_abap_structdescr=&gt;component_table.
    FIELD-SYMBOLS &lt;ls_component&gt; LIKE LINE OF lt_components.

    lo_descr = cl_abap_typedescr=&gt;describe_by_data( i_data ).

    CASE lo_descr-&gt;kind.

      WHEN cl_abap_typedescr=&gt;kind_elem.                   
" Special case.  We see this when we have something like 
"... type standard table of syucomm.
* Tried various things but Grid won't show anything - 
" no matter what I try to provide a faked fieldcat
        RAISE EXCEPTION TYPE lcx_general_exceptions.       " Not foreseen yet

      WHEN cl_abap_typedescr=&gt;kind_struct.                 
        " Structure is fine --&gt; create fieldcat from this
        et_fieldcat = create_fieldcat_line( i_data ).

      WHEN cl_abap_typedescr=&gt;kind_table.                  
        " Table --&gt; restart with linetype of table
        ASSIGN i_data TO &lt;lt_data&gt;.
        CREATE DATA lr_dref LIKE LINE OF &lt;lt_data&gt;.
        ASSIGN lr_dref-&gt;* TO &lt;ls_line&gt;.
        et_fieldcat = create_fieldcat_lvc( &lt;ls_line&gt; ).

      WHEN cl_abap_typedescr=&gt;kind_ref.                    
        " Reference --&gt; restart with dereferenced value
        ASSIGN i_data-&gt;* TO &lt;ls_dref&gt;.
        et_fieldcat = create_fieldcat_lvc( &lt;ls_dref&gt; ).

*    when cl_abap_typedescr=&gt;KIND_CLASS.
*    when cl_abap_typedescr=&gt;KIND_INTF  .
      WHEN OTHERS.
        BREAK-POINT.  " Ich will das vorher sehen
        RAISE EXCEPTION TYPE lcx_general_exceptions.       " Not foreseen yet

    ENDCASE.

  ENDMETHOD.                                               "create_fieldcat_lvc


  METHOD create_fieldcat_line.

    DATA lr_dref               TYPE REF TO data.
    data lo_salv               TYPE REF TO cl_salv_table.
    data lo_salv_columns_table TYPE REF TO cl_salv_columns_table.
    data lo_salv_aggregations  TYPE REF TO cl_salv_aggregations.
    data lv_help_id            TYPE string.

    FIELD-SYMBOLS &lt;ls_fc&gt;      LIKE LINE OF et_fieldcat.
    FIELD-SYMBOLS &lt;lv_field&gt;   TYPE any.

    FIELD-SYMBOLS &lt;lt_data&gt;    TYPE STANDARD TABLE.

*--------------------------------------------------------------------*
* Create standard table of input
*--------------------------------------------------------------------*
    CREATE DATA lr_dref LIKE STANDARD TABLE OF i_data.
    ASSIGN lr_dref-&gt;* TO &lt;lt_data&gt;.
    TRY.
        cl_salv_table=&gt;factory( IMPORTING
                                  r_salv_table   = lo_salv
                                CHANGING
                                  t_table        = &lt;lt_data&gt; ).
        lo_salv_columns_table = lo_salv-&gt;get_columns( ).
        lo_salv_aggregations  = lo_salv-&gt;get_aggregations( ).

        et_fieldcat = cl_salv_controller_metadata=&gt;get_lvc_fieldcatalog(
                            r_columns      = lo_salv_columns_table
                            r_aggregations = lo_salv_aggregations ).
*--------------------------------------------------------------------*
* Internal fields w/o descriptions --&gt; set fieldname into header line
*--------------------------------------------------------------------*
        LOOP AT et_fieldcat ASSIGNING &lt;ls_fc&gt; WHERE scrtext_s = space
                                                AND scrtext_m = space
                                                AND scrtext_l = space.
          &lt;ls_fc&gt;-scrtext_m = &lt;ls_fc&gt;-fieldname.
        ENDLOOP.

*--------------------------------------------------------------------*
* Add F1 and F4-Help
* Idea from http://wiki.scn.sap.com/wiki/display/Snippets/ALV+fieldcatalog+-+create+for+ANY+table
*--------------------------------------------------------------------*
        LOOP AT et_fieldcat ASSIGNING &lt;ls_fc&gt;.

          ASSIGN COMPONENT &lt;ls_fc&gt;-fieldname OF STRUCTURE i_data TO &lt;lv_field&gt;.
          CHECK sy-subrc = 0.
          &lt;ls_fc&gt;-style     = gv_style.
          ADD 1 TO gv_style.

        TRY.
          CLEAR lv_help_id.
          DESCRIBE FIELD &lt;lv_field&gt; HELP-ID lv_help_id.
          IF lv_help_id CA '-'.
            SPLIT lv_help_id AT '-' INTO &lt;ls_fc&gt;-ref_table &lt;ls_fc&gt;-ref_field.
          ENDIF.
          CATCH cx_root.
        ENDTRY.

        ENDLOOP.

      CATCH cx_salv_msg .
    ENDTRY.

  ENDMETHOD.                                               "create_fieldcat_line
ENDCLASS.                    "lcl_alv_utilities IMPLEMENTATION</pre>
<p>Der Beitrag <a href="/blog/flexible-erzeugung-des-feldkataloges/">Flexible Erzeugung des Feldkataloges</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Drag&#8217;n&#8217;Drop-Framwork ALV-Grid</title>
		<link>/blog/dragndrop-framwork-alv-grid/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 13 Jun 2014 16:13:04 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Reports]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[grid]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Liste]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Zuordnung]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[ALV]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4805</guid>

					<description><![CDATA[<p>Usability ist bei SAP ja so eine Sache... Heute habe ich eine Klasse gefunden, die Zuordnungen intuitiv und benutzerfreundlich macht. In diesem kleinen Demoprogramm zeige ich euch, wie man die Klassen benutzt.</p>
<p>Der Beitrag <a href="/blog/dragndrop-framwork-alv-grid/">Drag&#8217;n&#8217;Drop-Framwork ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Heute bin ich beim Surfen im SAP-System über die Klasse CL_ALV_DD_LISTBOX gestolpert. Dolle Sache:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_170651.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4806" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_170651.jpg" alt="Bild_2014_06_13_170651" width="729" height="351" srcset="/wp-content/uploads/2014/06/Bild_2014_06_13_170651.jpg 729w, /wp-content/uploads/2014/06/Bild_2014_06_13_170651-300x144.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_13_170651-624x300.jpg 624w" sizes="(max-width: 729px) 100vw, 729px" /></a></p>
<p>&nbsp;</p>
<p>Einfach zwei Datentabellen definieren, zwei Grids erzeugen, der Instanz von  cl_alv_dd_double_listbox übergeben und die zwei Funktionscodes zum Bewegen der Einträge definieren. Aufrufen und am Ende hat man in seinen zwei Datentabellen die vom Anwender definierten Einträge.</p>
<p>Die Anregung stammt aus dem Report RSPLS_ENQUEUE_INFO.</p>
<h2>Coding</h2>
<pre>DATA gr_dd     TYPE REF TO cl_alv_dd_double_listbox.
DATA gr_grid_s TYPE REF TO cl_alv_dd_listbox.              "source
DATA gr_grid_t TYPE REF TO cl_alv_dd_listbox.              "target
DATA gr_cont_s TYPE REF TO cl_gui_custom_container.        "source
DATA gr_cont_t TYPE REF TO cl_gui_custom_container.        "target
DATA gs_layo_s TYPE lvc_s_layo.
DATA gs_layo_t TYPE lvc_s_layo.

DATA gt_fcat   TYPE lvc_t_fcat.
DATA gt_sort   TYPE lvc_t_sort.

DATA gt_data_s TYPE STANDARD TABLE OF t006a.
DATA gt_data_t TYPE STANDARD TABLE OF t006a.


START-OF-SELECTION.

  PERFORM init.

  CALL SCREEN 100.


*----------------------------------------------------------------------*
*  MODULE pbo OUTPUT
*----------------------------------------------------------------------*
MODULE pbo OUTPUT.

  SET PF-STATUS 'DD_GRID'.

  PERFORM prepare_grid USING gr_grid_s
                             gr_cont_s
                             'CONT_SOURCE'
                             gs_layo_s
                             gt_data_s.

  PERFORM prepare_grid USING gr_grid_t
                             gr_cont_t
                             'CONT_TARGET'
                             gs_layo_t
                             gt_data_t.

  IF gr_dd IS INITIAL.
    CREATE OBJECT gr_dd
      EXPORTING
        i_grid1 = gr_grid_s
        i_grid2 = gr_grid_t.
  ENDIF.

ENDMODULE.                                                 "pbo OUTPUT


*----------------------------------------------------------------------*
*  MODULE pai INPUT
*----------------------------------------------------------------------*
MODULE pai INPUT.
  CASE sy-ucomm.
    WHEN 'BACK'.
      SET SCREEN 0. LEAVE SCREEN.

    WHEN 'MOVE_TO_TARGET'.
      CALL METHOD gr_dd-&gt;movetogrid2
        EXPORTING
          i_ok_code = sy-ucomm.

    WHEN 'MOVE_TO_SOURCE'.
      CALL METHOD gr_dd-&gt;movetogrid1
        EXPORTING
          i_ok_code = sy-ucomm.
  ENDCASE.

*  IF NOT gr_dd IS INITIAL.
*    CALL METHOD gr_dd-&gt;set_grids_state( abap_true ). "X = display/ space = edit
*  ENDIF.

ENDMODULE.                                                 "pai INPUT


*&amp;---------------------------------------------------------------------*
*&amp;      Form  prepare_grid
*&amp;---------------------------------------------------------------------*
FORM prepare_grid USING grid TYPE REF TO cl_alv_dd_listbox
                        cont TYPE REF TO cl_gui_custom_container
                        name TYPE        clike
                        layo TYPE        lvc_s_layo
                        data TYPE STANDARD TABLE.

  IF cont IS INITIAL.
*==   create container
    CREATE OBJECT cont
      EXPORTING
        container_name = name.
  ENDIF.

  IF grid IS INITIAL.
*== create grid
    CREATE OBJECT grid
      EXPORTING
        i_parent     = cont
        i_grid_style = 1.

*== set  grid
    CALL METHOD grid-&gt;set_table_for_first_display
      EXPORTING
        is_layout       = layo
      CHANGING
        it_outtab       = data
        it_fieldcatalog = gt_fcat
        it_sort         = gt_sort.
  ELSE.
*== refresh
    CALL METHOD grid-&gt;set_frontend_fieldcatalog
      EXPORTING
        it_fieldcatalog = gt_fcat.
    CALL METHOD grid-&gt;set_frontend_layout
      EXPORTING
        is_layout = gs_layo_s.
    CALL METHOD grid-&gt;refresh_table_display.
  ENDIF.

ENDFORM.                    "prepare_grid

*&amp;---------------------------------------------------------------------*
*&amp;      Form  init
*&amp;---------------------------------------------------------------------*
FORM init.

*== local data
  FIELD-SYMBOLS  LIKE LINE OF gt_fcat.

*== get source data
  SELECT * FROM t006a INTO TABLE gt_data_s
      UP TO 20 ROWS
   WHERE spras = sy-langu.


*== set title for source:
  gs_layo_s-grid_title = text-003.
  gs_layo_s-smalltitle = 'X'.
  gs_layo_s-cwidth_opt = 'X'.
  gs_layo_s-sel_mode   = 'A'.

*== set title for target:
  gs_layo_t-grid_title = text-004.
  gs_layo_t-smalltitle = 'X'.
  gs_layo_t-cwidth_opt = 'X'.
  gs_layo_t-sel_mode   = 'A'.

*== get fieldcatalog
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'T006A'
      i_client_never_display = 'X'
    CHANGING
      ct_fieldcat            = gt_fcat
    EXCEPTIONS
      OTHERS                 = 3.

*== display only unit and text
  LOOP AT gt_fcat ASSIGNING .
    CASE -fieldname.
      WHEN 'MSEHI' OR 'MSEH3' OR 'MSEH6'.
        -tech = abap_true.
    ENDCASE.
  ENDLOOP.

ENDFORM.                    "init</pre>
<h2>Dynpro</h2>
<h3>Ablauflogik</h3>
<p>PROCESS BEFORE OUTPUT.<br />
MODULE pbo.<br />
*<br />
PROCESS AFTER INPUT.<br />
MODULE pai.</p>
<h2><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_180645.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4808" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_180645.jpg" alt="Bild_2014_06_13_180645" width="562" height="423" srcset="/wp-content/uploads/2014/06/Bild_2014_06_13_180645.jpg 562w, /wp-content/uploads/2014/06/Bild_2014_06_13_180645-300x225.jpg 300w" sizes="(max-width: 562px) 100vw, 562px" /></a></h2>
<h2>GUI-Status</h2>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_180616.jpg"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4807" src="https://tricktresor.com/wp-content/uploads/2014/06/Bild_2014_06_13_180616.jpg" alt="Bild_2014_06_13_180616" width="808" height="483" srcset="/wp-content/uploads/2014/06/Bild_2014_06_13_180616.jpg 808w, /wp-content/uploads/2014/06/Bild_2014_06_13_180616-300x179.jpg 300w, /wp-content/uploads/2014/06/Bild_2014_06_13_180616-624x373.jpg 624w" sizes="(max-width: 808px) 100vw, 808px" /></a></p>
<p>[notice type = &#8216;info&#8217;]Leider haben die Klassen eine kleine Macken. Sobald die ersten Einträge per Funktionstasten verschoben wurden, erscheint die Markierspalte und es ist kein Drag-and-Drop mehr möglich&#8230; :([/notice]</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/dragndrop-framwork-alv-grid/">Drag&#8217;n&#8217;Drop-Framwork ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Hovitaga Advanced Pattern Enhancement</title>
		<link>/blog/hovitaga-advanced-pattern-enhancement/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 07 Mar 2014 15:44:49 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[Download]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Texte]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Muster]]></category>
		<category><![CDATA[style]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4550</guid>

					<description><![CDATA[<p>Wer in ABAP programmiert hat mit Sicherheit schon den Befehl "Muster einfügen" im Editor verwendet. Hierüber lassen sich in erster Linie die Aufrufe für Funktionsbausteine und Methoden in den Quelltext einfügen. Gerade bei Funktionsbausteinen ist dies ein unerlässliches Hilfsmittel, denn die Syntaxprüfung prüft bei Funktionsbausteinen nicht, ob ein falscher Parameter verwendet wird. Die ungarische SAP-Entwicklerfirma Hovitaga hat für das Einfügen von Mustern ein kleines kostenloses AddOn entwickelt.</p>
<p>Der Beitrag <a href="/blog/hovitaga-advanced-pattern-enhancement/">Hovitaga Advanced Pattern Enhancement</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Wer in ABAP programmiert hat mit Sicherheit schon den Befehl &#8220;Muster einfügen&#8221; im Editor verwendet. Hierüber lassen sich in erster Linie die Aufrufe für Funktionsbausteine und Methoden in den Quelltext einfügen. Gerade bei Funktionsbausteinen ist dies ein unerlässliches Hilfsmittel, denn die Syntaxprüfung prüft bei Funktionsbausteinen nicht, ob ein falscher Parameter verwendet wird.</p>
<p>Die ungarische SAP-Entwicklerfirma <a title="Homepage | Hovitaga" href="http://www.hovitaga.com/">Hovitaga </a>hat für das Einfügen von Mustern ein kleines kostenloses AddOn entwickelt. Doch der Reihe nach.</p>
<h2>Einfügen von Mustern</h2>
<p>Über das Menü <em>Hilfsmittel &#8211; Einstellungen</em> im Editor können einige Einstellungen für das Einfügen von Mustern vorgenommen werden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_22_14.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4552" alt="Muster Einstellungen" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_22_14-282x300.jpg" width="282" height="300" srcset="/wp-content/uploads/2014/03/03_07_16_22_14-282x300.jpg 282w, /wp-content/uploads/2014/03/03_07_16_22_14.jpg 565w" sizes="(max-width: 282px) 100vw, 282px" /></a></p>
<p>&nbsp;</p>
<h2>Muster einfügen SAP Standard</h2>
<p>Das Einfügen von Mustern erfolgt über den Druckknopf <em>Muster</em> im Editor. Es erscheint ein Popup in dem man auswählen muss, für welchen Befehl man ein Muster einfügen möchte. Wir entscheiden uns für die Option <em>ABAP Objects Muster</em> und gelangen auf ein weiteres Popup:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_11_34.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4553" alt="ABAP Objects Muster" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_11_34-289x300.jpg" width="289" height="300" srcset="/wp-content/uploads/2014/03/03_07_16_11_34-289x300.jpg 289w, /wp-content/uploads/2014/03/03_07_16_11_34.jpg 376w" sizes="(max-width: 289px) 100vw, 289px" /></a></p>
<p>&nbsp;</p>
<p>Nachdem ich mich an dieser Stelle häufig ärgere, dass in der Suchhilfe zur Methode alle Methoden der Klasse angezeigt werden und keine Unterscheidung zwischen PRIVATE, PROTECTED oder PUBLIC gemacht wird, endet hier auch die Funktionalität im SAP Standard. Je nach Release wird vor dem Aufruf der Methode noch die Datendeklaration eingefügt.</p>
<h2>Muster einfügen Hovitaga style</h2>
<p>Dort, wo SAP aufhört, fängt die Funktionalität von Hovitaga an. An der Stelle, wo normalerweise der Code in den Quelltext eingefügt wird, erscheint erneut ein Popup:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_15_50_29.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4554" alt="Hovitaga Dialog" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_15_50_29-300x191.jpg" width="300" height="191" srcset="/wp-content/uploads/2014/03/03_07_15_50_29-300x191.jpg 300w, /wp-content/uploads/2014/03/03_07_15_50_29-1024x655.jpg 1024w, /wp-content/uploads/2014/03/03_07_15_50_29-624x399.jpg 624w, /wp-content/uploads/2014/03/03_07_15_50_29.jpg 1363w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>Hier kann durch verschiedene Funktionen der Aufruf im Quelltext gesteuert werden. Anstatt im Coding nicht benötigte Parameter zu löschen, kann im Dialog bereits entschieden werden, welche Parameter benötigt werden. Auf Wunsch wird auch die Datendeklaration für den jeweiligen Parameter eingefügt. Für Tabellenparameter kann auch ein entsprechender Arbeitsbereich deklariert werden. Hovitaga folgt hierbei den üblichen Namenskonventionen:</p>
<ul>
<li>S = Struktur</li>
<li>T = Tabelle</li>
<li>V = Variable</li>
<li>R = Referenz auf ein Objekt</li>
</ul>
<p>Durch einen Schalter kann zwischen globaler und lokaler Datendeklaration gewählt werden, was sich in der Namenskonvention durch die Verwendung von G oder L auswirkt.</p>
<p>In einer Vorschau wird der einzufügende Aufruf angezeigt. Man sieht sofort, wie sich die Änderungen von z.B. &#8220;Remove Unsed Lines&#8221; auswirken.</p>
<h2>Fazit</h2>
<p>Ich möchte nicht soweit gehen, dass es ein unentbehrliches Tool für den ABAP-Programmierer ist. Allerdings finden sich sinnvolle Funktionen in dieser Erweiterung, die das Leben durchaus leichter machen können. Es gibt also eine klare Tricktresor-Empfehlung!</p>
<h2>Download</h2>
<p><a title="Advanced Pattern Enhancement | Hovitaga" href="http://www.hovitaga.com/Advanced-pattern-enhancement-overview">Hovitaga Advanced Pattern Enhancement &#8211; Product page and Download</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/hovitaga-advanced-pattern-enhancement/">Hovitaga Advanced Pattern Enhancement</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Drop Files in ALV-Grid</title>
		<link>/blog/drop-files-in-alv-grid/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 21 Feb 2014 13:43:34 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[Datei]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Explorer]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Drag and Drop]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4499</guid>

					<description><![CDATA[<p>In diesem Artikel erfährst du, wie du ein ALV-Grid dazu verwenden kannst, um Dateien aus dem Explorer per Drag and Drop in SAP zu übernehmen. Dabei werden jedoch nicht die Dateien selbst, sondern nur der Pfad und Dateiname zur Verfügung gestellt.</p>
<p>Der Beitrag <a href="/blog/drop-files-in-alv-grid/">Drop Files in ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><a class="keychainify-checked" href="https://tricktresor.com/wp-content/uploads/2014/02/02_21_14_37_32.jpg"><img loading="lazy" decoding="async" class="size-full wp-image-4500 alignright" src="https://tricktresor.com/wp-content/uploads/2014/02/02_21_14_37_32.jpg" alt="drag files in grid" width="263" height="231" /></a></p>
<p>Seit etwa 2012 ist es möglich, Dateien aus dem Explorer in ein ALV-Grid zu ziehen und die Namen dort zu verarbeiten (<a class="keychainify-checked" title="Drop External Files | SAP Note" href="http://search.sap.com/notes?id=0001748468">SAP Note 1748468</a>). Ob das in deinem SAP-System bereits funktioniert, kannst du daran erkennen, dass die Klasse CL_GUI_ALV_GRID die Methode GET_DROPPED_EXTERNAL_FILES hat.</p>
<p>Das Event DROP_EXTERNAL_FILES muss registriert werden und mit der Methode DRAG_ACCEPT_FILES( 1 ) muss die Funktionalität aktiviert werden.</p>
<p>Es kann das gesamte ALV-Grid-Control als &#8220;Ablagefläche&#8221; genutzt werden, also auch dort, wo keine Zeilen vorhanden sind. Werden die Dateien auf einer Zelle abgelegt, dann kann diese Zelle bestimmte werden. In dem Beispielcoding werden die Dateien der Spalte hinzugefügt, auf der sie abgelegt wurden.</p>
<h2>Coding</h2>
<pre>REPORT zz_drop_files_on_grid.

*----------------------------------------------------------------------*
*       CLASS lcl_appl DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_appl DEFINITION.

  PUBLIC SECTION.

*== type for Grid-Demonstration: Columns EINS, ZWEI and DREI
    TYPES: BEGIN OF ty_files,
             eins TYPE string,
             zwei TYPE string,
             drei TYPE string,
           END OF ty_files.

*== table containing the data (text/ files)
    CLASS-DATA gt_data TYPE STANDARD TABLE OF ty_files.
*== ALV-Grid
    CLASS-DATA gr_grid TYPE REF TO cl_gui_alv_grid.

*== setup ALV-Grid
    CLASS-METHODS init.
*== get dropped files and display in grid
    CLASS-METHODS get_dropped_files FOR EVENT drop_external_files OF cl_gui_alv_grid
                                    IMPORTING files.

ENDCLASS.                    "lcl_appl DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_appl IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS lcl_appl IMPLEMENTATION.

  METHOD init.

*== local data
    DATA lt_fcat         TYPE lvc_t_fcat.
    FIELD-SYMBOLS &lt;fcat&gt; LIKE LINE OF lt_fcat.
    FIELD-SYMBOLS &lt;data&gt; LIKE LINE OF gt_data.

    CHECK gr_grid IS INITIAL.

*== set initial data
    DO 5 TIMES.
      APPEND INITIAL LINE TO gt_data ASSIGNING &lt;data&gt;.
      &lt;data&gt;-eins = 'Drop'.
      &lt;data&gt;-zwei = 'Files'.
      &lt;data&gt;-drei = 'Here'.
    ENDDO.

*== Create Grid-control
    CREATE OBJECT gr_grid
      EXPORTING
        i_parent = cl_gui_container=&gt;screen0.

*== build field catalog
    APPEND INITIAL LINE TO lt_fcat ASSIGNING &lt;fcat&gt;.
    &lt;fcat&gt;-fieldname = 'EINS'.
    &lt;fcat&gt;-reptext   = 'Eins'.
    &lt;fcat&gt;-style     = 1.
    &lt;fcat&gt;-datatype  = 'STRG'.
    APPEND INITIAL LINE TO lt_fcat ASSIGNING &lt;fcat&gt;.
    &lt;fcat&gt;-fieldname = 'ZWEI'.
    &lt;fcat&gt;-reptext   = 'Zwei'.
    &lt;fcat&gt;-style     = 2.
    &lt;fcat&gt;-datatype  = 'STRG'.
    APPEND INITIAL LINE TO lt_fcat ASSIGNING &lt;fcat&gt;.
    &lt;fcat&gt;-fieldname = 'DREI'.
    &lt;fcat&gt;-reptext   = 'Drei'.
    &lt;fcat&gt;-style     = 4.
    &lt;fcat&gt;-datatype  = 'STRG'.

*== display grid
    gr_grid-&gt;set_table_for_first_display(
      CHANGING it_fieldcatalog = lt_fcat
               it_outtab       = gt_data ).

*== Allow drop files action
    gr_grid-&gt;drag_accept_files( 1 ).

*== set handler to react on file drop
    SET HANDLER get_dropped_files FOR gr_grid ACTIVATION abap_true.

  ENDMETHOD.                                               "init

  METHOD get_dropped_files.

*== local data
    DATA lt_files        TYPE filetable.
    FIELD-SYMBOLS &lt;file&gt; LIKE LINE OF lt_files.
    DATA lv_row_id       TYPE i.
    DATA lv_col_id       TYPE i.
    FIELD-SYMBOLS &lt;data&gt; LIKE LINE OF gt_data.

*== get dropped files in a table
    gr_grid-&gt;get_dropped_external_files(
       IMPORTING  files     = lt_files
                  row_id    = lv_row_id
                  col_id    = lv_col_id
       EXCEPTIONS OTHERS    = 3 ).

*== put file names in grid
    IF lt_files IS NOT INITIAL.
      CLEAR gt_data.
      LOOP AT lt_files ASSIGNING &lt;file&gt;.
        APPEND INITIAL LINE TO gt_data ASSIGNING &lt;data&gt;.
        CASE lv_col_id.
          WHEN 1. &lt;data&gt;-eins = &lt;file&gt;.
          WHEN 2. &lt;data&gt;-zwei = &lt;file&gt;.
          WHEN 3. &lt;data&gt;-drei = &lt;file&gt;.
        ENDCASE.
      ENDLOOP.
*== refresh display
      gr_grid-&gt;refresh_table_display( ).
    ENDIF.

  ENDMETHOD.                                               "get_dropped_files

ENDCLASS.                                                  "lcl_appl IMPLEMENTATION

START-OF-SELECTION.

<!--StartFragment --><span class="L0S52">START-OF-SELECTION</span><span class="L0S55">.</span>
  <span class="L0S52">WRITE </span><span class="L0S33">'nothign to see here...!'</span><span class="L0S55">.</span>
  lcl_appl<span class="L0S70">=&gt;</span>init<span class="L0S55">( </span><span class="L0S55">)</span><span class="L0S55">.</span></pre>
<p>Der Beitrag <a href="/blog/drop-files-in-alv-grid/">Drop Files in ALV-Grid</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Slider (2)</title>
		<link>/blog/slider-2/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 08 Mar 2012 14:51:23 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[shellstyle]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[cl_gui_custom_container]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[cl_gui_textedit]]></category>
		<category><![CDATA[Sonstiges]]></category>
		<category><![CDATA[cl_gui_control]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[register events]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[OCX]]></category>
		<category><![CDATA[class definition]]></category>
		<category><![CDATA[class implementation]]></category>
		<category><![CDATA[set property]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=638</guid>

					<description><![CDATA[<p>Noch eine Variante des Sliders. Diesmal mithilfe einer Windows-OCX-Bibliothek. Der Slider hat keine Beschriftung, hat aber den Vorteil, dass auf eine Wert&#228;nderung sofort reagiert werden kann.</p>
<p>Der Beitrag <a href="/blog/slider-2/">Slider (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Noch eine Variante des Sliders. Diesmal mithilfe einer Windows-OCX-Bibliothek. Der Slider hat keine Beschriftung, hat aber den Vorteil, dass auf eine Wertänderung sofort reagiert werden kann.</p>
<h2 class="head1">Dynpro</h2>
<p>Sie müssen das Dynpro 9000 anlegen mit folgenden &#8220;Custom Containern&#8221;:</p>
<ul>
<li>CONTAINER_TEXT</li>
<li>SLIDER_TOP</li>
<li>SLIDER_LEFT</li>
</ul>
<p><code> +----------------------------------------+<br />
|  SLIDER_TOP                            |<br />
+----+----------------------------------------+<br />
|    |                                        |<br />
| SL |  CONTAINER_TEXT                        |<br />
| ID |                                        |<br />
| ER |                                        |<br />
| _  |                                        |<br />
| LE |                                        |<br />
| FT |                                        |<br />
|    |                                        |<br />
|    |                                        |<br />
+----+----------------------------------------+</code></p>
<h2 class="head1">Screenshot</h2>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/slider2.jpg" /><br />
So sieht der Slider aus</td>
</tr>
</tbody>
</table>
<h2 class="head1">Coding</h2>
<pre>REPORT.

DATA: gcl_text TYPE REF TO cl_gui_textedit.

*----------------------------------------------------------------------*
* CLASS my_slider DEFINITION
*----------------------------------------------------------------------*
CLASS my_slider DEFINITION INHERITING FROM cl_gui_control.
PUBLIC SECTION.
METHODS: constructor
IMPORTING
value(parent) TYPE REF TO cl_gui_object
value(name) TYPE string OPTIONAL
value(style) TYPE i OPTIONAL
value(orientation) TYPE i
DEFAULT 0 " 1 = vertical
value(maximum) TYPE i
DEFAULT 10
value(event_while_move) TYPE flag
DEFAULT ' '
EXCEPTIONS error_cntl_create
gui_type_not_supported,
dispatch REDEFINITION.
EVENTS: on_change EXPORTING value(slider_position) TYPE i.

DATA: event_while_move TYPE flag.

PRIVATE SECTION.
METHODS: register_events.

ENDCLASS. "my_slider DEFINITION

*----------------------------------------------------------------------*
* CLASS LCL_eventreceiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_eventreceiver DEFINITION.
PUBLIC SECTION.
CLASS-METHODS: handle_on_change FOR EVENT on_change
OF my_slider
IMPORTING sender
slider_position.
ENDCLASS. "LCL_eventreceiver DEFINITION

END-OF-SELECTION.
PERFORM create_objects.
CALL SCREEN 9000.

*&amp;---------------------------------------------------------------------*
*&amp; Form CREATE_OBJECTS
*&amp;---------------------------------------------------------------------*
FORM create_objects.

DATA repid TYPE syrepid.
DATA dynnr TYPE sydynnr.
DATA cl_container TYPE REF TO cl_gui_custom_container.
DATA cl_container2 TYPE REF TO cl_gui_custom_container.

repid = sy-repid.
dynnr = '9000'.

CREATE OBJECT cl_container
EXPORTING
container_name = 'CONTAINER_TEXT'
repid = repid
dynnr = dynnr.
CREATE OBJECT gcl_text
EXPORTING
parent = cl_container.

DATA: cl_slider TYPE REF TO my_slider.

CREATE OBJECT cl_container
EXPORTING
container_name = 'SLIDER_TOP'
repid = repid
dynnr = dynnr.
CREATE OBJECT cl_slider
EXPORTING
parent = cl_container
maximum = 20
event_while_move = 'X'.
SET HANDLER lcl_eventreceiver=&gt;handle_on_change FOR cl_slider.

CREATE OBJECT cl_container
EXPORTING
container_name = 'SLIDER_LEFT'
repid = repid
dynnr = dynnr.
CREATE OBJECT cl_slider
EXPORTING
parent = cl_container
maximum = 5
orientation = 1.
SET HANDLER lcl_eventreceiver=&gt;handle_on_change FOR cl_slider.

ENDFORM. " CREATE_OBJECTS

*----------------------------------------------------------------------*
* CLASS my_slider IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS my_slider IMPLEMENTATION.

METHOD dispatch.

DATA: value TYPE i.

GET PROPERTY OF me-&gt;h_control-obj 'Value' = value.
RAISE EVENT on_change EXPORTING slider_position = value.

ENDMETHOD. "dispatch

METHOD register_events.
DATA: ex_event TYPE cntl_event.
DATA: events_ex TYPE cntl_events. " table

IF me-&gt;event_while_move = 'X'.
ex_event-eventid = 1."Jede Bewegung
ELSE.
ex_event-eventid = 2."Nur am ende
ENDIF.
ex_event-is_shellevent = ' '.
ex_event-is_systemevent = 'X'.

APPEND ex_event TO events_ex.
CALL METHOD me-&gt;set_registered_events_ex
EXPORTING
eventtab = events_ex.

ENDMETHOD. "register_events

METHOD constructor.
DATA prog_id(80).

IF parent IS INITIAL.
RAISE error_cntl_create.
ENDIF.

CLASS cl_gui_cfw DEFINITION LOAD.

* assign prog_id to get the frontend specific control
IF NOT activex IS INITIAL.
prog_id = 'MSComctlLib.Slider'.
ELSEIF NOT javabean IS INITIAL.
RAISE gui_type_not_supported.
ENDIF.

IF prog_id IS INITIAL.
RAISE gui_type_not_supported.
ENDIF.

* Set the window styles of the control when style parameter was not
* set with constructor call.
* For more information on the styles see WIN32 SDK
IF style IS INITIAL.
* otherwise the control would be invisible and the mistake would be
* hard to find
style = cl_gui_control=&gt;ws_visible
+ cl_gui_control=&gt;ws_child
+ cl_gui_control=&gt;ws_clipsiblings.

ENDIF.

* Create the control
CALL METHOD super-&gt;constructor
EXPORTING
clsid = prog_id
shellstyle = style
parent = parent
lifetime = lifetime
name = name
EXCEPTIONS
OTHERS = 1.

IF sy-subrc &lt;&gt; 0.
RAISE error_cntl_create.
ENDIF.

me-&gt;event_while_move = event_while_move.

* Slidereigenschaften
SET PROPERTY OF me-&gt;h_control-obj 'Max' = maximum.
SET PROPERTY OF me-&gt;h_control-obj 'Orientation' = orientation.
SET PROPERTY OF me-&gt;h_control-obj 'Text' = 'Tricktresor-Slider'.

* register instance at framework
CALL METHOD cl_gui_cfw=&gt;subscribe
EXPORTING
shellid = h_control-shellid
ref = me
EXCEPTIONS
OTHERS = 1.

IF sy-subrc &lt;&gt; 0.
RAISE error_cntl_create.
ENDIF.
me-&gt;register_events( ).
ENDMETHOD. "constructor

ENDCLASS. "my_slider IMPLEMENTATION

*----------------------------------------------------------------------*
* CLASS LCL_eventreceiver DEFINITION
*----------------------------------------------------------------------*
CLASS lcl_eventreceiver IMPLEMENTATION.
METHOD handle_on_change.

DATA text TYPE string.
DATA: slider TYPE REF TO my_slider.

slider ?= sender.

WRITE slider_position TO sy-lisel LEFT-JUSTIFIED.
IF slider-&gt;event_while_move = 'X'.
CONCATENATE 'X-Position: Moving to' sy-lisel
INTO text SEPARATED BY space.
ELSE.
CONCATENATE 'Y-Position: End of Move:' sy-lisel
INTO text SEPARATED BY space.
ENDIF.

gcl_text-&gt;set_textstream( EXPORTING text = text ).
ENDMETHOD. "handle_on_change
ENDCLASS. "LCL_eventreceiver DEFINITION</pre>
<p>Der Beitrag <a href="/blog/slider-2/">Slider (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Container-Rahmen</title>
		<link>/blog/container-rahmen/</link>
					<comments>/blog/container-rahmen/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 19 Aug 2011 17:17:36 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[docker]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<category><![CDATA[ABAP-Objects]]></category>
		<category><![CDATA[cl_gui_docking_container]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Docking-Container]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[Rahmen]]></category>
		<category><![CDATA[shellstyle]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=616</guid>

					<description><![CDATA[<p>Ein Docking-Container hat normalerweise einen breiten Rahmen, damit dessen Gr&#246;&#223;e leicht ge&#228;ndert werden kann. Das ist aber nicht immer erw&#252;nscht... </p>
<p>Der Beitrag <a href="/blog/container-rahmen/">Container-Rahmen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Ein Docking-Container hat normalerweise einen breiten Rahmen, damit dessen Größe leicht geändert werden kann. Das ist aber nicht immer erwünscht&#8230;</p>
<p class="head1">Durch Dick und Dünn</p>
<p>Bei CREATE OBJECT des Containers kann in der Regel der Parameter STYLE übergeben werden. Dieser wird intern auf Standarwerte gesetzt, wenn er nicht vom Aufrufer übergeben wird.</p>
<p>Mit diesem Aufruf können Sie einen Docking-Container mit einer dünnen Linie anstatt des dicken 3d-Rahmens erzeugen.</p>
<p class="head1">So sieht&#8217;s aus</p>
<p>So sieht der Rahmen normalerweise aus:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/abap/Bild565.jpg" /></p>
<p>So sieht er mit dünnem Rahmen aus:</p>
<p><img decoding="async" alt="" src="/wp-content/uploads/tt_images/abap/Bild566.jpg" /></p>
<p>Dieser kann allerdings nicht mehr vom Anwender verschoben werden!!</p>
<p class="head1">Coding DÜNN</p>
<p class="sap1">DATA shellstyle TYPE i.</p>
<p>*** define Shellstyle<br />
shellstyle = cl_gui_container=&gt;ws_visible<br />
+ cl_gui_container=&gt;ws_child.</p>
<p>*** Create Docking Container<br />
CREATE OBJECT gr_dock<br />
EXPORTING<br />
side      = cl_gui_docking_container=&gt;dock_at_top<br />
extension = 10<br />
style     = shellstyle.</p>
<p class="head1">Oder anders herum&#8230;</p>
<p>Den Tric kann man allerdings auch genau anders herum verwenden! So sieht ein ALV-Grid im Container normalerweise aus:</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/ALV/Alv_rahmen_duenn.jpg" /><br />
ALV-Grid mit normalem Rahmen</td>
</tr>
</tbody>
</table>
<p>Mit dem richtigen Style kann man dem Container einen dicken Rahmen verpassen:</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/ALV/alv_rahmen_dick.jpg" /><br />
ALV mit dickem Rahmen</td>
</tr>
</tbody>
</table>
<p class="head1">Coding DICK</p>
<p>Hier ist das Coding dazu:</p>
<p class="sap1"><span style="color: #fb2412;">*** Style</span><br />
DATA lv_style TYPE i.</p>
<p>lv_style = cl_gui_container=&gt;ws_thickframe<br />
+ cl_gui_container=&gt;ws_visible<br />
+ cl_gui_container=&gt;ws_child.</p>
<p><span style="color: #fb2412;">*** Create Custom Container</span><br />
CREATE OBJECT gr_cc<br />
EXPORTING<br />
style          = lv_style<br />
container_name = &#8216;CUSTOM_CONTAINER&#8217;<br />
EXCEPTIONS<br />
OTHERS         = 6.</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/container-rahmen/">Container-Rahmen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/container-rahmen/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Event NODE_KEYPRESS</title>
		<link>/blog/event-node_keypress/</link>
					<comments>/blog/event-node_keypress/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 19 Aug 2011 09:49:29 +0000</pubDate>
				<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[Generell]]></category>
		<category><![CDATA[CL_GUI_SIMPLE_TREE]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[keypress]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[node]]></category>
		<category><![CDATA[Tree]]></category>
		<category><![CDATA[expand_root_nodes]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=612</guid>

					<description><![CDATA[<p>Mit dem Ereignis NODE_KEYPRESS kann man im Programm auf verschiedene Tastendr&#252;cke reagieren: F1, F4, Enter, Einf&#252;gen, L&#246;schen, STRG+X, STRG+C, STRG+V.</p>
<p>Der Beitrag <a href="/blog/event-node_keypress/">Event NODE_KEYPRESS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mit dem Ereignis NODE_KEYPRESS kann man im Programm auf verschiedene Tastendrücke reagieren: F1, F4, Enter, Einfügen, Löschen, STRG+X, STRG+C, STRG+V.</p>
<p class="head1">Beschreibung</p>
<p>Das folgende Programm generiert einen kleinen Baum mithilfe des Control CL_GUI_SIMPLE_TREE. Bei Programmstart wird der Focus sofort auf das TreeControl gesetzt, so dass der Anwender mithilfe der Cursortasten in dem Baum navigieren kann.</p>
<p>Steht der Cursor auf einem Eintrag, so können die Tasten &#8220;F1&#8221;, &#8220;Enter&#8221; oder &#8220;Löschen&#8221; gedrückt werden. Das Ereignis NODE_KEYPRESS muss dafür natürlich registriert werden.</p>
<p>Zusätzlich müssen aber die Tasten, auf die der Tree reagieren soll auch noch bekannt gegeben werden. Das passiert mit der Methode ADD_KEY_STROKE der Klasse CL_GUI_SIMPLE_TREE.</p>
<p class="head1">Tasten</p>
<p>Folgende Tasten können registriert werden:</p>
<ul>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>F1</strong>: Funktionstaste F1</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>F4</strong>: Funktionstaste F4</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>INSERT</strong>: Taste Einfügen</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>DELETE</strong>: Taste Entfernen</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>ENTER</strong>: Enter-Taste</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>CUT</strong>: Strg+X</li>
<li>CL_TREE_CONTORL_BASE=&gt;KEY_<strong>COPY</strong>: Strg+C</li>
<li>CL_TREE_CONTROL_BASE=&gt;KEY_<strong>PASTE</strong>: Strg+V</li>
</ul>
<p class="head1">Screenshot</p>
<table class="tblimg" cellpadding="0" align="left">
<tbody>
<tr>
<td valign="top"><img decoding="async" alt="" src="/wp-content/uploads/tt_images/Tree/Bild548.jpg" /><br />
Der kleine Demo-Baum</td>
</tr>
</tbody>
</table>
<p class="head1">Code</p>
<p class="sap1">REPORT  zz_tree_keypress_demo.<br />
<span style="color: #fb2412;">*** we use icons&#8230;</span><br />
TYPE-POOLS icon.</p>
<p class="sap1"><span style="color: #fb2412;">*** global data:</span><br />
<span style="color: #fb2412;">*== Custom Container</span><br />
DATA gr_cuco TYPE REF TO cl_gui_custom_container.<br />
<span style="color: #fb2412;">*== Simple Tree</span><br />
DATA gr_tree TYPE REF TO cl_gui_simple_tree.</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*       CLASS lcl_event_handler_class DEFINITION<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
CLASS lcl_event_handler_class DEFINITION.<br />
PUBLIC SECTION.<br />
CLASS-METHODS handle_keypress<br />
FOR EVENT node_keypress   OF cl_gui_simple_tree<br />
IMPORTING node_key key.<br />
ENDCLASS.                    &#8220;lcl_event_handler_class DEFINITION</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*       CLASS lcl_event_handler_class IMPLEMENTATION<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
CLASS lcl_event_handler_class IMPLEMENTATION.<br />
METHOD handle_keypress.<br />
IF node_key IS NOT INITIAL.<br />
<span style="color: #fb2412;">*** we only get a node id for active nodes (not disabled):</span><br />
MESSAGE i000(oo) WITH &#8216;Knoten:&#8217; node_key &#8216;- Taste:&#8217; key.<br />
ENDIF.<br />
ENDMETHOD.                    &#8220;message<br />
ENDCLASS.                    &#8220;lcl_event_handler_class IMPLEMENTATION</p>
<p class="sap1">START-OF-SELECTION.</p>
<p class="sap1"><span style="color: #fb2412;">*** Call screen</span><br />
CALL SCREEN 1.</p>
<p class="sap1">
<span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*  MODULE status_0001 OUTPUT<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
MODULE status_0001 OUTPUT.</p>
<p class="sap1">*** Set status<br />
SET PF-STATUS &#8216;STLI&#8217; OF PROGRAM &#8216;SAPMSSY0&#8217;.<br />
*** Init Controls<br />
PERFORM init_controls.</p>
<p class="sap1">ENDMODULE.                 &#8221; STATUS_0100  OUTPUT</p>
<p class="sap1"><span style="color: #fb2412;">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
*  MODULE user_command_0001 INPUT<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
</span>MODULE user_command_0001 INPUT.</p>
<p class="sap1">  CASE sy-ucomm.<br />
WHEN &#8216;BACK&#8217; OR &#8216;%EX&#8217; OR &#8216;RW&#8217;.<br />
SET SCREEN 0.<br />
LEAVE SCREEN.<br />
ENDCASE.</p>
<p class="sap1">ENDMODULE.                 &#8221; USER_COMMAND_0100  INPUT</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  init_controls<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
* &#8211; create custom container<br />
* &#8211; create tree control<br />
* &#8211; register events<br />
* &#8211; build tree structure<br />
* &#8211; set focus on tree control<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*<br />
</span>FORM init_controls.</p>
<p class="sap1"><span style="color: #fb2412;">*** initial build up<br />
</span>  CHECK gr_cuco IS INITIAL.</p>
<p class="sap1"><span style="color: #fb2412;">*** create custom container</span><br />
CREATE OBJECT gr_cuco<br />
EXPORTING<br />
container_name = &#8216;TREE&#8217;.</p>
<p class="sap1"><span style="color: #fb2412;">*** Create simple tree; single node selection</span><br />
CREATE OBJECT gr_tree<br />
EXPORTING<br />
parent              = gr_cuco<br />
node_selection_mode = cl_gui_simple_tree=&gt;node_sel_mode_single.</p>
<p class="sap1"><span style="color: #fb2412;">*** register events</span><br />
PERFORM register_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** build tree structure</span><br />
PERFORM build_tree.</p>
<p class="sap1"><span style="color: #fb2412;">*** Set focus on tree control so that user instantly can<br />
*** navigate with cursor keys</span><br />
cl_gui_control=&gt;set_focus( gr_tree ).</p>
<p class="sap1">ENDFORM.                    &#8220;init_controls</p>
<p class="sap1">
<span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  register_events<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*</span><br />
FORM register_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** Data</span><br />
DATA: lt_events TYPE cntl_simple_events,<br />
ls_event  TYPE cntl_simple_event.</p>
<p class="sap1"><span style="color: #fb2412;">*** NODE_KEYPRESS-Event</span><br />
ls_event-eventid = cl_gui_simple_tree=&gt;eventid_node_keypress.<br />
APPEND ls_event TO lt_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** Register Event</span><br />
CALL METHOD gr_tree-&gt;set_registered_events<br />
EXPORTING<br />
events = lt_events.</p>
<p class="sap1"><span style="color: #fb2412;">*** tell tree which keys to mention for NODE_KEPRESS:<br />
*==&gt; ENTER</span><br />
gr_tree-&gt;add_key_stroke( cl_gui_simple_tree=&gt;key_enter )  .<br />
<span style="color: #fb2412;">*==&gt; F1</span><br />
gr_tree-&gt;add_key_stroke( cl_gui_simple_tree=&gt;key_f1 )  .<br />
<span style="color: #fb2412;">*==&gt; DELETE</span><br />
gr_tree-&gt;add_key_stroke( cl_gui_simple_tree=&gt;key_delete )  .</p>
<p class="sap1"><span style="color: #fb2412;">*** Set handler for registered events</span><br />
SET HANDLER lcl_event_handler_class=&gt;handle_keypress FOR gr_tree.</p>
<p class="sap1">ENDFORM.                    &#8220;register_events</p>
<p class="sap1"><span style="color: #fb2412;">*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
*&amp;      Form  build_tree<br />
*&amp;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<br />
* Build static tree structure:<br />
* Group<br />
*  +- ONE<br />
*  +- TWO<br />
* THREE<br />
* FOUR<br />
*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-*</span><br />
FORM build_tree.</p>
<p class="sap1"><span style="color: #fb2412;">*** Data</span><br />
DATA ls_node  TYPE mtreesnode.<br />
DATA lt_nodes TYPE STANDARD TABLE OF mtreesnode.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;Group&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;GROUP1&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-disabled  = &#8216;X&#8217;.<br />
ls_node-isfolder  = &#8216;X&#8217;.<br />
ls_node-n_image   = icon_activity_group.<br />
ls_node-exp_image = icon_activity_group.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_intensified.<br />
ls_node-text      = &#8216;Gruppe&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;ONE&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;ONE&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-relatkey  = &#8216;GROUP1&#8217;.<br />
ls_node-n_image   = icon_led_yellow.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_intensified.<br />
ls_node-text      = &#8216;Eins&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;TWO&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;TWO&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-relatkey  = &#8216;GROUP1&#8217;.<br />
ls_node-n_image   = icon_led_green.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_default.<br />
ls_node-text      = &#8216;ZWEI&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;THREE&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;THREE&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-disabled  = &#8216;X&#8217;.<br />
ls_node-n_image   = icon_led_inactive.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_inactive.<br />
ls_node-text      = &#8216;DREI&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Node &#8220;FOUR&#8221;</span><br />
CLEAR ls_node.<br />
ls_node-node_key  = &#8216;FOUR&#8217;.<br />
ls_node-relatship = cl_gui_simple_tree=&gt;relat_last_child.<br />
ls_node-disabled  = space.<br />
ls_node-n_image   = icon_led_red.<br />
ls_node-style     = cl_gui_simple_tree=&gt;style_intensifd_critical.<br />
ls_node-text      = &#8216;VIER&#8217;.<br />
APPEND ls_node TO lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Add nodes</span><br />
CALL METHOD gr_tree-&gt;add_nodes<br />
EXPORTING<br />
table_structure_name = &#8216;MTREESNODE&#8217;<br />
node_table           = lt_nodes.</p>
<p class="sap1"><span style="color: #fb2412;">*** Expand all root nodes</span><br />
gr_tree-&gt;expand_root_nodes( ).</p>
<p class="sap1">ENDFORM.                    &#8220;init_controls</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/event-node_keypress/">Event NODE_KEYPRESS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/event-node_keypress/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Vererbungsübersicht</title>
		<link>/blog/vererbungsuebersicht/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 05 Apr 2011 14:10:32 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[CL_GUI_SIMPLE_TREE]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[set handler]]></category>
		<category><![CDATA[vererbung]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[SE24]]></category>
		<category><![CDATA[Code Inspector]]></category>
		<category><![CDATA[RS_TOOL_ACCESS]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Tree]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=585</guid>

					<description><![CDATA[<p>Folgendes kleines Programm zeigt die Vererbungshierarchien von Klassen auf. Die Root- oder Super-Klasse wird auf der obersten Ebene angezeigt. Darunter werden die von ihr erbenden Klassen aufgelistet. Mit einem Doppelklick auf eine Klasse wird in den Class Builder (SE24) verzweigt.</p>
<p>Der Beitrag <a href="/blog/vererbungsuebersicht/">Vererbungsübersicht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Folgendes kleine Programm zeigt die Vererbungshierarchien von Klassen auf. Die Root- oder Super-Klasse wird auf der obersten Ebene angezeigt. Darunter werden die von ihr erbenden Klassen aufgelistet. Mit einem Doppelklick auf eine Klasse wird in den Class Builder (SE24) verzweigt.</p>



<p>Beschreibung</p>



<p>Die Vererbungsübersicht kann man sich normalerweise auch in der SE80 anschauen. Hier ist jedoch immer ein &#8220;Zwischenschritt&#8221; über den Punkt &#8220;Superklassen&#8221; oder &#8220;Subklassen&#8221; notwendig. Dieses Programm liefert eine direkt Übersicht:</p>



<figure class="wp-block-table"><table><tbody><tr><td><img decoding="async" src="/wp-content/uploads/tt_images/Bild097.jpg" alt=""><br>Übersicht über alle Unterklassen von &#8220;CL_CI_TEST_ROOT&#8221;</td></tr></tbody></table></figure>



<h2 class="wp-block-heading" id="features">Features</h2>



<p>Kundeneigene Klassen (Z- und /-Namensraum) werden hervor gehoben.</p>



<p>Doppelklick auf eine Klasse verzweigt in den Class Builder (Transaktion SE24).</p>



<h2 class="wp-block-heading" id="interessante-klassen">Interessante Klassen</h2>



<p>Folgende Klassen sind interessant, da sie eine große &#8220;Erbengemeinschaft&#8221; haben:</p>



<ul><li><div class="text1">IF_CI_TEST (Interface von Code Inspector Prüfungen)</div></li><li>CL_GUI_OBJECT </li><li><div class="text1">CL_GUI_CONTROL</div></li><li>CL_GUI_CONTAINER</li><li>CL_ABAP_TYPEDESCR </li><li>Ausnahmeklassen <ul><li>CX_STATIC_CHECK</li><li>CX_DYNAMIC_CHECK</li><li>CX_NO_CHECK </li></ul></li></ul>



<h2 class="wp-block-heading" id="coding">Coding</h2>



<div class="wp-block-group"><div class="wp-block-group__inner-container is-layout-flow wp-block-group-is-layout-flow">
<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*<br>*&amp; Report&nbsp; Z_INHERITING_CLASSES<br>*&amp;---------------------------------------------------------------------*<br>* displays all inheriting classes of a super class in simple tree.<br>* double click on class calls SE24 for this class in display mode.<br>*----------------------------------------------------------------------*<br></span>REPORT Z_INHERITING_CLASSES.</pre>



<p>CLASS lcl_application DEFINITION DEFERRED.</p>



<pre class="wp-block-preformatted">DATA go_application&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE REF TO lcl_application.<br>DATA gt_classes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF seoclsname.<br>DATA gt_metarel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF seometarel.<br>DATA gs_metarel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE seometarel.<br>DATA go_tree&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE REF TO cl_gui_simple_tree.<br>DATA gt_nodes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF mtreesnode.<br>DATA gs_node&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE mtreesnode.<br>DATA gt_expand_nodes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE STANDARD TABLE OF lvc_nkey.<br>DATA gv_top_node&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE lvc_nkey.<br>DATA gv_level&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE i.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*** SELECTION SCREEN ***<br>*==&gt; Super class name (root)<br></span>PARAMETERS p_class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE seoclsname DEFAULT 'IF_CI_TEST'.<br><span style="color: #fb2412;">*==&gt; Expand up to this level<br></span>PARAMETERS p_level&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TYPE i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DEFAULT 3.</pre>



<pre class="wp-block-preformatted">AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_class.<br>CALL FUNCTION 'F4_DD_ALLTYPES'<br>EXPORTING<br>object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = p_class<br>suppress_selection&nbsp;&nbsp; = 'X'<br>display_only&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = ' '<br>only_types_for_clifs = 'X'<br>IMPORTING<br>RESULT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = p_class.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*----------------------------------------------------------------------*<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CLASS LCL_APPLICATION DEFINITION<br>*----------------------------------------------------------------------*<br></span>CLASS lcl_application DEFINITION.</pre>



<pre class="wp-block-preformatted">&nbsp; PUBLIC SECTION.<br>METHODS:<br>handle_node_double_click<br>FOR EVENT node_double_click<br>OF cl_gui_simple_tree<br>IMPORTING node_key.</pre>



<pre class="wp-block-preformatted">ENDCLASS.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "LCL_APPLICATION DEFINITION</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*----------------------------------------------------------------------*<br>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CLASS LCL_APPLICATION IMPLEMENTATION<br>*----------------------------------------------------------------------*<br></span>CLASS lcl_application IMPLEMENTATION.</pre>



<pre class="wp-block-preformatted">  METHOD  handle_node_double_click.
    DATA lv_classname TYPE seoclsname.
    READ TABLE gt_classes INTO lv_classname INDEX node_key.</pre>



<pre class="wp-block-preformatted">    CALL FUNCTION 'RS_TOOL_ACCESS'
      EXPORTING
        operation   = 'SHOW'
        object_name = lv_classname
        object_type = 'CLAS'.</pre>



<pre class="wp-block-preformatted">&nbsp; ENDMETHOD.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "HANDLE_NODE_DOUBLE_CLICK</pre>



<pre class="wp-block-preformatted">ENDCLASS.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "LCL_APPLICATION IMPLEMENTATION</pre>



<pre class="wp-block-preformatted">START-OF-SELECTION.</pre>



<pre class="wp-block-preformatted">&nbsp; PERFORM do_read USING p_class.</pre>



<pre class="wp-block-preformatted">  CHECK gt_metarel IS NOT INITIAL.
  cl_abap_list_layout=>suppress_toolbar( ).</pre>



<pre class="wp-block-preformatted">  WRITE 1.
  INSERT p_class INTO gt_classes INDEX 1.
  PERFORM init_tree.
  PERFORM add_node USING p_class space.
  PERFORM display_tree.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*<br>*&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form&nbsp; do_read<br>*&amp;---------------------------------------------------------------------*<br></span>FORM do_read USING iv_classname TYPE seoclsname.</pre>



<pre class="wp-block-preformatted">&nbsp; DATA lt_metarel TYPE STANDARD TABLE OF seometarel.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*** Select all inheriting classes&nbsp;</span><br>SELECT * FROM seometarel INTO TABLE lt_metarel<br>WHERE refclsname = iv_classname.</pre>



<pre class="wp-block-preformatted">  LOOP AT lt_metarel INTO gs_metarel.
<span style="color: #fb2412;">    "collect class for having a node name later on (TABIX)</span>
    COLLECT gs_metarel-clsname INTO gt_classes.
    <span style="color: #fb2412;">"recursive call for class</span>
    PERFORM do_read USING gs_metarel-clsname.
  ENDLOOP.</pre>



<pre class="wp-block-preformatted">&nbsp; APPEND LINES OF lt_metarel TO gt_metarel.</pre>



<pre class="wp-block-preformatted">ENDFORM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "do_read</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*<br>*&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form&nbsp; init_tree<br>*&amp;---------------------------------------------------------------------*<br></span>FORM init_tree.</pre>



<pre class="wp-block-preformatted">  DATA events TYPE cntl_simple_events.
  DATA event  TYPE cntl_simple_event.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "Create simple tree</span>
  CREATE OBJECT go_tree
    EXPORTING
      parent              = cl_gui_container=>screen0
      node_selection_mode = cl_gui_simple_tree=>node_sel_mode_single.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "Create application handler</span>
  CREATE OBJECT go_application.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "define event "node double_click"
</span>  event-eventid    = cl_gui_simple_tree=>eventid_node_double_click.
  event-appl_event = 'X'. " process PAI if event occurs
  APPEND event TO events.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "register event "Double click"
</span>  go_tree->set_registered_events( events ).</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "assign event handlers in the application class
</span>  SET HANDLER go_application->handle_node_double_click FOR go_tree.</pre>



<pre class="wp-block-preformatted">ENDFORM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "init_tree</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*
*&amp;      Form  add_node
*&amp;---------------------------------------------------------------------*
</span>FORM add_node 
  USING 
    iv_classname TYPE seoclsname
    iv_refclass  TYPE seoclsname.</pre>



<pre class="wp-block-preformatted">  ADD 1 TO gv_level.
  CLEAR gs_node.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "get key for node</span>
  READ TABLE gt_classes TRANSPORTING NO FIELDS WITH KEY iv_classname.
  gs_node-node_key = sy-tabix.</pre>



<pre class="wp-block-preformatted">  IF iv_refclass IS INITIAL.
    CLEAR gs_node-relatkey.
    CLEAR gs_node-relatship.
  ELSE.
<span style="color: #fb2412;">  "get key of related class</span>
    READ TABLE gt_classes TRANSPORTING NO FIELDS WITH KEY iv_refclass.
    gs_node-relatkey = sy-tabix.
    gs_node-relatship = cl_gui_simple_tree=>relat_last_child.
  ENDIF.</pre>



<pre class="wp-block-preformatted">&nbsp; IF gv_level &lt;= p_level.<br><span style="color: #fb2412;">*** Expand this level</span><br>IF gt_expand_nodes IS INITIAL.<br><span style="color: #fb2412;">*** remember this node for&nbsp;setting the top node<br></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gv_top_node = gs_node-node_key.<br>ENDIF.<br><span style="color: #fb2412;">*** remember this node for later expansion</span><br>APPEND gs_node-node_key TO gt_expand_nodes.<br>ENDIF.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*** add node "class"</span><br>gs_node-isfolder = 'X'.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " a folder.<br>gs_node-text = iv_classname.<br>CASE iv_classname(1).<br>WHEN 'Z'.<br><span style="color: #fb2412;">*** highlight customer classes (Z)</span><br>gs_node-style = cl_gui_simple_tree=&gt;style_emphasized_negative.<br>WHEN '/'.<br><span style="color: #fb2412;">*** highlight customer classes (/xyz/)</span><br>gs_node-style = cl_gui_simple_tree=&gt;style_emphasized_positive.<br>ENDCASE.<br>APPEND gs_node TO gt_nodes.</pre>



<pre class="wp-block-preformatted">  LOOP AT gt_metarel INTO gs_metarel WHERE refclsname = iv_classname.
    PERFORM add_node USING gs_metarel-clsname gs_metarel-refclsname.
  ENDLOOP.</pre>



<pre class="wp-block-preformatted">&nbsp; SUBTRACT 1 FROM gv_level.</pre>



<p>ENDFORM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;add_node</p>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">*&amp;---------------------------------------------------------------------*<br>*&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form&nbsp; display_tree<br>*&amp;---------------------------------------------------------------------*<br></span>FORM display_tree.</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "add nodes</span>
  go_tree->add_nodes(
    table_structure_name = 'MTREESNODE'
    node_table           = gt_nodes ).</pre>



<pre class="wp-block-preformatted"><span style="color: #fb2412;">  "Expand up to desired level</span>
  go_tree->expand_nodes(
    EXPORTING
      node_key_table = gt_expand_nodes
    EXCEPTIONS
     OTHERS         = 5).</pre>



<pre class="wp-block-preformatted">  <span style="color: #fb2412;">"set top node</span>
  go_tree->set_top_node( node_key = gv_top_node ).</pre>



<pre class="wp-block-preformatted">ENDFORM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "display_tree</pre>
</div></div>
<p>Der Beitrag <a href="/blog/vererbungsuebersicht/">Vererbungsübersicht</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Dokumentation anzeigen (2)</title>
		<link>/blog/dokumentation-anzeigen-2/</link>
					<comments>/blog/dokumentation-anzeigen-2/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 26 May 2010 13:15:43 +0000</pubDate>
				<category><![CDATA[Tabellenpflegedialog]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Dokumentation]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Container]]></category>
		<category><![CDATA[DOKU]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Tools]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=543</guid>

					<description><![CDATA[<p>Update f&#252;r die Anzeige der Dokumentation im Docking Container. Die Routine wurde erweitert und HTML so aufbereitet, dass die Doku wie die SAP-Dokumentation aussieht.</p>
<p>Der Beitrag <a href="/blog/dokumentation-anzeigen-2/">Dokumentation anzeigen (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Update für die Anzeige der Dokumentation im Docking Container. Die Routine wurde erweitert und HTML so aufbereitet, dass die Doku wie die SAP-Dokumentation aussieht.</p>
<p>In dieser Version stelle ich Ihnen eine fertige Methode vor, die nur noch im Zeitpunkt 19 des Tabellenpflegedialoges oder in Zeitpunkt 03 des Viewclusters eingebunden werden muss.</p>
<p>Die Aufbereitung erfolgt analog zu der SAP-Doku und sieht &#8220;etwas schicker&#8221; aus:</p>
<p><img decoding="async" src="/wp-content/uploads/tt_images/Tabellenpflegedialog/hc_328.jpg" /></p>
<p>Zusätzlich kann eine alternative Dokumentation übergeben werden, die angezeigt wird, wenn die Doku zur Tabelle nicht vorhanden ist.</p>
<h2 class="head1">Vorbereitungen</h2>
<h3 class="head2">Methode anlegen</h3>
<p>Legen Sie sich eine Klasse, wie z.B. ZCL_MAINTENANCE_TOOLS an und implementieren Sie die statische PUBLIC-Methode SHOW_DOCU:</p>
<p>Importing-Parameter:</p>
<ul>
<li>IV_TABLE TYPE C &#8220;Tabellenname&#8221;</li>
<li>IV_ALDOC  TYPE C &#8220;Alternative Dokumentation SE61&#8221;</li>
</ul>
<h3 class="head2">Globale Attribute</h3>
<p>Legen Sie folgende statische private Attribute an:</p>
<pre class="lang:abap decode:true ">GR_DOCK    Type Ref To CL_GUI_DOCKING_CONTAINER
GR_HTML    Type Ref To CL_GUI_HTML_VIEWER
GV_TABLE   Type C</pre>
<h3 class="head1">Aufruf Tabellenpflegedialog</h3>
<h3 class="text1">Zeitpunkt 19</h3>
<p class="sap1">  CALL METHOD zcl_maintenance_tools=&gt;show_docu<br />
EXPORTING<br />
iv_table = vcl_akt_view<br />
iv_aldoc = &#8216;ZZT_ALTDOC_TABLE_ZZABC&#8217;.</p>
<h2 class="head1">Aufruf Viewcluster</h2>
<h3 class="text1">Zeitpunkt 03</h3>
<p class="sap1">  IF master_name = x_header-viewname.<br />
CALL METHOD zcl_maintenance_tools=&gt;show_docu<br />
EXPORTING<br />
iv_table = x_header-viewname.<br />
ENDIF.</p>
<p class="text1"><strong><u>HINWEIS:<br />
</u></strong>Die alternative Dokumentation muss in der SE61 als &#8220;Text im Dialog&#8221; angelegt werden.</p>
<h2 class="head1">Eigene Anpassungen</h2>
<p class="text1">Leider werden in den gerufenen Standard-Routinen nicht alle HTML-Tags &#8220;schön&#8221; angepasst. Die Tabellendefinitionen werden zum Beispiel nicht geändert.</p>
<p class="text1">Hier kann man aber manuell einfach Abhilfe schaffen:</p>
<pre class="lang:abap decode:true ">*** set table cells to size 2
      REPLACE ALL  OCCURRENCES OF '&lt;td&gt;' IN TABLE lt_html
         WITH '&lt;td&gt;&lt;font FACE="Arial" SIZE=2&gt;'.        
*** set table border "dashed" and grey background
      REPLACE ALL  OCCURRENCES OF '&lt;table&gt;' IN TABLE lt_html
         WITH '&lt;table style="border:thin dashed blue" width="100%" cellpadding=3 bgcolor=#E0E0E0&gt;'.</pre>
<p class="text1">Das Ergebnis sieht dann so aus:</p>
<p class="text1"><img decoding="async" src="/wp-content/uploads/tt_images/table_doku.jpg" /></p>
<h2 class="head1">Coding</h2>
<pre class="lang:abap decode:true ">METHOD show_docu.

*** Local data
  DATA lt_lines            TYPE STANDARD TABLE OF tline.
  DATA ls_header           TYPE thead.
  DATA lt_html             TYPE STANDARD TABLE OF  htmlline.
  DATA lv_url              TYPE c LENGTH 500.
  DATA lv_table            TYPE doku_obj.
  DATA lv_spras            TYPE sylangu.
  DATA lt_conv_charformats TYPE TABLE OF tline.
  DATA lt_conv_parformats  TYPE TABLE OF tline.


*** has anything changed??
  CHECK gv_table &lt;&gt; iv_table.

  lv_table = iv_table.

***  Read table docu
  CALL FUNCTION 'DOCU_GET'
    EXPORTING
      id     = 'TB'
      langu  = sy-langu
      object = lv_table
    IMPORTING
      head   = ls_header
    TABLES
      line   = lt_lines
    EXCEPTIONS
      OTHERS = 5.
  IF sy-subrc &gt; 0.
*** try other language
    CASE sy-langu.
      WHEN 'D'.
        lv_spras = 'E'.
      WHEN 'E'.
        lv_spras = 'D'.
      WHEN 'F'.
        lv_spras = 'E'.
    ENDCASE.
*** read docu in other language
    CALL FUNCTION 'DOCU_GET'
      EXPORTING
        id     = 'TB'
        langu  = lv_spras
        object = lv_table
      IMPORTING
        head   = ls_header
      TABLES
        line   = lt_lines
      EXCEPTIONS
        OTHERS = 5.
  ENDIF.

***  Read alternative docu
  IF lt_lines IS INITIAL AND iv_aldoc IS NOT INITIAL.
*** read alternative docu (Dialog Text)
    lv_table = iv_aldoc.
    CALL FUNCTION 'DOCU_GET'
      EXPORTING
        id     = 'DT'
        langu  = sy-langu
        object = lv_table
      IMPORTING
        head   = ls_header
      TABLES
        line   = lt_lines
      EXCEPTIONS
        OTHERS = 5.
    IF sy-subrc &gt; 0.
*** read alternative docu (Dialog Text) in different language
      CALL FUNCTION 'DOCU_GET'
        EXPORTING
          id     = 'DT'
          langu  = lv_spras
          object = lv_table
        IMPORTING
          head   = ls_header
        TABLES
          line   = lt_lines
        EXCEPTIONS
          OTHERS = 5.

    ENDIF.
  ENDIF.

*** _______________________________________________________________ ***
***                                                                 ***
***  Build controls
*** _______________________________________________________________ ***
***                                                                 ***

  IF gr_dock IS INITIAL.
*** create docking container
    CREATE OBJECT gr_dock
      EXPORTING
        side                    = cl_gui_docking_container=&gt;dock_at_right
        extension               = 400
        no_autodef_progid_dynnr = 'X'.
  ENDIF.


  IF lt_lines IS INITIAL.
*** No doku: Set controls to invisible
    IF gr_html IS BOUND.
      CALL METHOD gr_html-&gt;set_visible
        EXPORTING
          visible = space.
    ENDIF.

    IF gr_dock IS BOUND.
      CALL METHOD gr_dock-&gt;set_visible
        EXPORTING
          visible = space.
    ENDIF.
  ELSE.
*** Doku exists: Set controls visible
    IF gr_html IS BOUND.
      CALL METHOD gr_html-&gt;set_visible
        EXPORTING
          visible = 'X'.
    ENDIF.
    IF gr_dock IS BOUND.
      CALL METHOD gr_dock-&gt;set_visible
        EXPORTING
          visible = 'X'.
    ENDIF.
  ENDIF.


  IF lt_lines IS NOT INITIAL.
*** doku exists:
    IF gr_html IS INITIAL.
*** Create HTML-Control
      CREATE OBJECT gr_html
        EXPORTING
          parent = gr_dock.
    ENDIF.

*** _______________________________________________________________ ***
***                                                                 ***
***  Convert character and parameter formats
*** _______________________________________________________________ ***
***                                                                 ***
    IF lt_conv_parformats IS INITIAL.
      PERFORM build_mapping_tables   IN PROGRAM rshtmimg_2
       TABLES lt_conv_charformats
              lt_conv_parformats.
    ENDIF.

*** _______________________________________________________________ ***
***                                                                 ***
***  Convert Docu to HTML
*** _______________________________________________________________ ***
***                                                                 ***

    CALL FUNCTION 'CONVERT_ITF_TO_HTML'
      EXPORTING
        i_header           = ls_header
      TABLES
        t_itf_text         = lt_lines
        t_html_text        = lt_html
        t_conv_charformats = lt_conv_charformats
        t_conv_parformats  = lt_conv_parformats
      EXCEPTIONS
        syntax_check       = 1
        replace            = 2
        illegal_header     = 3
        OTHERS             = 4.
    IF sy-subrc = 0.

*** Convert Tables
      PERFORM convert_tables IN PROGRAM rshtmimg_2 TABLES lt_html.
*** Set colours (Make text look like SAP documentation)
      PERFORM set_colors     IN PROGRAM rshtmimg_2 TABLES lt_html.

*** Push data to control
      CALL METHOD gr_html-&gt;load_data
        IMPORTING
          assigned_url = lv_url
        CHANGING
          data_table   = lt_html
        EXCEPTIONS
          OTHERS       = 4.

      IF sy-subrc = 0.
*** _______________________________________________________________ ***
***                                                                 ***
***  Display HTML-Text
*** _______________________________________________________________ ***
***                                                                 ***

        CALL METHOD gr_html-&gt;show_url
          EXPORTING
            url = lv_url.
      ENDIF.
    ENDIF.
  ENDIF.

ENDMETHOD.

</pre>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/dokumentation-anzeigen-2/">Dokumentation anzeigen (2)</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/dokumentation-anzeigen-2/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
