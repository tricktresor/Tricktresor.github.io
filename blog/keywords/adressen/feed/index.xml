<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Adressen Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/adressen/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Mon, 16 May 2022 13:34:50 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Adressen Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Änderungsbelege</title>
		<link>/blog/aenderungsbelege-2/</link>
					<comments>/blog/aenderungsbelege-2/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2012 18:50:27 +0000</pubDate>
				<category><![CDATA[Cross Applications]]></category>
		<category><![CDATA[Adressen]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=645</guid>

					<description><![CDATA[<p>Es werden bei allen Adress&#228;nderungen mit den vorgestellten Bausteinen &#196;nderungsbelege geschrieben. Diese sind aber h&#228;ufig &#252;ber die Anwendung nicht erreichbar...</p>
<p>Der Beitrag <a href="/blog/aenderungsbelege-2/">Änderungsbelege</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Es werden bei allen Adress&auml;nderungen mit den vorgestellten Bausteinen &Auml;nderungsbelege geschrieben. Diese sind aber h&auml;ufig &uuml;ber die Anwendung nicht erreichbar&#8230;<br /><P>Mithilfe des Standardreports RSSCD100 k&ouml;nnen Sie die Adress&auml;nderungen jedoch alle einsehen.</P><P>Die Objektklasse f&uuml;r Adressen ist ADRESSE und die Objekt-ID&nbsp;ist &#8220;Adressgruppe&#8221; + &#8220;Adressnummer&#8221;.</P><P>Welcher Adressgruppe verwendet wurde kann am besten direkt &uuml;ber die Tabelle CDHDR gepr&uuml;ft werden.</P><P>In der Regel sind es</P><UL><LI>SD01 f&uuml;r manuell ge&auml;nderte Adressen in SD-Belegen <LI>PM01 f&uuml;r Adressen aus der Instandhaltung <LI>BP__ f&uuml;r Business Partner generell</LI></UL><P>Die Adressgruppen k&ouml;nnen in Tabelle TSAD7 eingesehen werden.</P><P>Wenn eine Adressnummer z.B. 12345 lautet und die Adressgruppe SD01, dann lautet die Objekt-ID: <FONT>SD010000012345</FONT></P><P><STRONG><U>TIPP:</U></STRONG><BR>Die Layouts werden je Objektklasse gespeichert!! </P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/aenderungsbelege-2/">Änderungsbelege</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/aenderungsbelege-2/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Adresse objektunabhängig ändern</title>
		<link>/blog/adresse-objektunabhaengig-aendern/</link>
					<comments>/blog/adresse-objektunabhaengig-aendern/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2012 15:43:46 +0000</pubDate>
				<category><![CDATA[Cross Applications]]></category>
		<category><![CDATA[Adressen]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=644</guid>

					<description><![CDATA[<p>F&#252;r eine Adresse ben&#246;tigt man in der Regel eine Adressnummer. Diese ist an verschiedenen Objekten hinterlegt: Kunde, Lieferant, Werk, ...M&#246;chte man die Adresse eines Kunden &#228;ndern, so m&#252;sste man also zuerst die Adressnummer aus der Tabelle KNA1 ermitteln. Eigentlich. Denn es gibt einen BAPI, der das erledigt.</p>
<p>Der Beitrag <a href="/blog/adresse-objektunabhaengig-aendern/">Adresse objektunabhängig ändern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>F&uuml;r eine Adresse ben&ouml;tigt man in der Regel eine Adressnummer. Diese ist an verschiedenen Objekten hinterlegt: Kunde, Lieferant, Werk, &#8230;M&ouml;chte man die Adresse eines Kunden &auml;ndern, so m&uuml;sste man also zuerst die Adressnummer aus der Tabelle KNA1 ermitteln. Eigentlich. Denn es gibt einen BAPI, der das erledigt.<br /><P class="head1">BAPI_ADDRESSORG_CHANGE</P><P>Diesem Funktionsbaustein m&uuml;ssen das &#8220;Objekt&#8221; sowie die &#8220;Objektnummer&#8221; &uuml;bergeben werden. Es ist nicht n&ouml;tig zu wissen, in welcher Tabelle die Adressnummer zu dem Objekt gespeichert ist.</P><P class="sap1">&nbsp; CALL FUNCTION &#8216;BAPI_ADDRESSORG_CHANGE&#8217;<BR>&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj_type&nbsp;&nbsp;&nbsp; = &#8216;KNA1&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = lv_objid_kunnr<BR>&nbsp;&nbsp;&nbsp; TABLES<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bapiadtel&nbsp;&nbsp; = lt_tel<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bapiadfax&nbsp;&nbsp; = lt_fax<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bapiadtlx&nbsp;&nbsp; = lt_tlx<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bapicomrem&nbsp; = lt_rem<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bapiadtel_x = lt_tel_x<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bapiadfax_x = lt_fax_x<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bapiadtlx_x = lt_tlx_x<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bapicomre_x = lt_rem_x<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = lt_return.</P><P class="head1">Einschr&auml;nkungen</P><P class="text1">Die unterst&uuml;tzen Objekte stehen in Tabelle TSADOBJ. Sind leider nicht viele&#8230; Kunden und Lieferanten werden unterst&uuml;tzt. Kann sicherlich f&uuml;r andere Objekte erweitert werden.</P><P class="sap1">&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/adresse-objektunabhaengig-aendern/">Adresse objektunabhängig ändern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/adresse-objektunabhaengig-aendern/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Fallstricke</title>
		<link>/blog/fallstricke/</link>
					<comments>/blog/fallstricke/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2012 15:36:27 +0000</pubDate>
				<category><![CDATA[Cross Applications]]></category>
		<category><![CDATA[Adressen]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=643</guid>

					<description><![CDATA[<p>Fallstricke, die bei der Adressbearbeitung auftreten k&#246;nnen... </p>
<p>Der Beitrag <a href="/blog/fallstricke/">Fallstricke</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Fallstricke, die bei der Adressbearbeitung auftreten k&ouml;nnen&#8230; <br /><P class="head1">Sprachenabh&auml;ngige Felder</P><P>Das Feld &#8220;Bemerkung&#8221; in der Adresse ist sprachabh&auml;ngig! Das ist einerseits sinnvoll, andererseits, kann es auch hinderlich sein.</P><P>M&ouml;chte man&nbsp;das Bemerkungsfeld in mehreren Sprachen verf&uuml;gbar machen, so muss man die Adresse wohl oder &uuml;bel in verschiedenen Sprachen abspeichern:</P><P class="sap1">&nbsp; CALL FUNCTION &#8216;ADDR_UPDATE&#8217;<BR>&nbsp;&nbsp;&nbsp; EXPORTING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; language&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#8216;D&#8217;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; address_data&nbsp;&nbsp; = addr1_data<BR>&nbsp;&nbsp;&nbsp;&nbsp;EXCEPTIONS<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OTHERS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 5.</P><P>Aber Achtung: Wird die Bemerkung in einer Sprache ge&auml;ndert, dann nat&uuml;rlich nur in dieser&#8230;!</P><P>Mithilfe des Bausteins <STRONG>ADDR_REMARKS_GET</STRONG> k&ouml;nnen gezielt alle Bemerkungen zu einer Adresse ermittelt werden.</P><P class="head1">Speichern</P><P>Viele Funktionsbausteine sind nicht dokumentiert. Von daher fehlt manchmal der Hinweis, dass nach dem &Auml;ndern oder Anlegen einer Adresse diese noch mit einem der Funktionsbausteine ADDR_MEMORY_SAVE oder ADDR_SINGLE_SAVE gesichert werden m&uuml;ssen&#8230;</P></p>
<p>Der Beitrag <a href="/blog/fallstricke/">Fallstricke</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/fallstricke/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Allgemeines zu Adressen</title>
		<link>/blog/allgemeines/</link>
					<comments>/blog/allgemeines/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2012 15:26:32 +0000</pubDate>
				<category><![CDATA[Cross Applications]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Adressen]]></category>
		<category><![CDATA[BAPIs]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=642</guid>

					<description><![CDATA[<p>Allgemeines zu Adressen im SAP-System. </p>
<p>Der Beitrag <a href="/blog/allgemeines/">Allgemeines zu Adressen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Allgemeines zu Adressen im SAP-System.</p>
<p class="head1">Info</p>
<p class="head2">Gültigkeit</p>
<p class="text1">Jede Adresse hat theoretisch eine Gültigkeit. Diese Funktion wird jedoch meines Wissens nirgendwo im SAP System genutzt.</p>
<p class="text1">Adressen sind immer vom 1.1.0001 bis zum 31.12.9999 gültig.</p>
<p class="head1">Tabellen</p>
<ul>
<li>
<div class="text1">ADRC &#8211; Enthält den Adressdatenteil zu einer Adresse.</div>
</li>
<li>ADR2 &#8211; Telefonnummern</li>
<li>ADR3 &#8211; Faxnummern</li>
<li>ADR6 &#8211; Email-Adressen</li>
</ul>
<p class="head1">Type-Pool SZADR</p>
<p>Leider sind viele Strukturen nicht im Dictionary definiert, sondern &#8220;nur&#8221; im Type-Pool SZADR.</p>
<p class="head1">Funktionsbausteine</p>
<p>In der Regel fangen die Funktionsbausteine mit <strong>ADDR_</strong> an. Für spezielle Anwendungsfälle findet man hier sicherlich die richtigen Bausteine.</p>
<p>Ebenfalls interessant könnten die BAPIs sein, die mit <strong>BAPI_ADDRESS</strong> beginnen.</p>
<p>Der Beitrag <a href="/blog/allgemeines/">Allgemeines zu Adressen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/allgemeines/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Adresse lesen</title>
		<link>/blog/adresse-lesen/</link>
					<comments>/blog/adresse-lesen/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2012 15:21:24 +0000</pubDate>
				<category><![CDATA[Cross Applications]]></category>
		<category><![CDATA[Adressen]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=641</guid>

					<description><![CDATA[<p>Funktionsbausteine mit denen Adressen, Kommunikationstypen, Telefonnummern, Mail-Adressen und so weiter gelesen werden k&#246;nnen.</p>
<p>Der Beitrag <a href="/blog/adresse-lesen/">Adresse lesen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Funktionsbausteine mit denen Adressen, Kommunikationstypen, Telefonnummern, Mail-Adressen und so weiter gelesen werden k&ouml;nnen.<br /><P>&nbsp;</P><P class="head1">ADDR_GET_COMPLETE</P><P class="text1">Ermittelt alle Daten zu einer Adresse. Daten werden in Struktur SZADR_ADDR1_COMPLETE zur&uuml;ck gegeben.</P><P class="head1">ADDR_GET_COMPLETE_ALL_TYPES</P><P>Mit diesem Baustein bekommen sie wirklich alles zu einer Adresse oder einer Personalnummer zur&uuml;ck geliefert.</P><P>Zus&auml;tzlich werden alle Daten in unterschiedlichen Strukturen/ Tabellen aufbereitet. Unter anderem werden die BAPI-Adressstrukturen gef&uuml;llt (BAPIADDR1, 2, 3).</P><P class="head1">ADDR_GET</P><P>Ermittelt den Adressteil zu einer Adresse. Keine Telefonnummern etc.</P></p>
<p>Der Beitrag <a href="/blog/adresse-lesen/">Adresse lesen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/adresse-lesen/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Telefon/ Fax ändern</title>
		<link>/blog/telefon-fax-aendern/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 22 May 2012 13:16:43 +0000</pubDate>
				<category><![CDATA[Cross Applications]]></category>
		<category><![CDATA[Adressen]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=640</guid>

					<description><![CDATA[<p>Ein kurzes Programm zum Anlegen neuer Telefon-/ Faxnummern oder &#196;nderung.</p>
<p>Der Beitrag <a href="/blog/telefon-fax-aendern/">Telefon/ Fax ändern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Ein kurzes Programm zum Anlegen neuer Telefon-/ Faxnummern oder Änderung.</p>



<h2 class="wp-block-heading">Beschreibung</h2>



<p>Dieser Report Ändert vorhandene Fax-Nummern oder legt einen neuen Eintrag an. Existiert bereits eine Nummer, so wird die neue Nummer zusätzlich angelegt.</p>



<h3 class="wp-block-heading">Tipp</h3>



<p>In gleicher Weise können natürlich auch die Telefonummern, Mail-Adressen, Teletext etc geändert werden. Anstelle von ADFAX in der DATA-Anweisung und im Übergabeparameter TABLE_TYPE müssen dann folgende Werte verwendet werden:</p>



<ul><li>ADFAX &nbsp;Faxnummern</li><li>ADPAG&nbsp; Pagernummern</li><li>ADPRT&nbsp; PRT-Adressen</li><li>ADRFC &nbsp;RFC-Adressen</li><li>ADRML&nbsp; RML-Adressen</li><li>ADSMTP&nbsp;SMTP-Adressen</li><li>ADSSF &nbsp;SSF-Adressen</li><li>ADTEL&nbsp; Telefonnummern</li><li>ADTLX &nbsp;Telexnummern</li><li>ADTTX&nbsp;&nbsp;Teletexnummern</li><li>ADURI&nbsp; URI-Adressen</li><li>ADX400&nbsp;X.400-Adressen</li></ul>



<h3 class="wp-block-heading">ADDR_SAVE</h3>



<p>Anstelle des verwendetes Baustein ADDR_MEMORY_SAVE kann auch der Baustein ADDR_SINGLE_SAVE unter Angabe der Adressnummer verwendet werden. Der Single-Save ist wahrscheinlich sogar am besten, denn wenn man innerhalb einer SAP-Anwendung programmiert (User-Exit, BAdI, &#8230;) kann der Memory-Save zu ungewünschten Fehlern führen, da evtl. unvollständige oder kopierte Adressen ebenfalls bereits gespeichert werden.</p>



<h2 class="wp-block-heading">Code</h2>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">REPORT  zz_address_fax_number.
*== data
DATA lt_fax         TYPE STANDARD TABLE OF adfax.
DATA ls_fax         TYPE adfax.
FIELD-SYMBOLS &lt;fax> TYPE adfax.
DATA lt_errors      TYPE STANDARD TABLE OF addr_error.

*== selection screen
PARAMETERS p_adrnr TYPE adrc-addrnumber.
PARAMETERS p_faxnr TYPE adfax-fax_number DEFAULT '555 - 1234 556'.
PARAMETERS p_new   AS CHECKBOX. "Create new address / append to existing

*== First read existing numbers
CALL FUNCTION 'ADDR_COMM_GET'
  EXPORTING
    address_number    = p_adrnr
    table_type        = 'ADFAX'
    iv_current_state  = 'X'
  TABLES
    comm_table        = lt_fax
    error_table       = lt_errors
  EXCEPTIONS
    parameter_error   = 1
    address_not_exist = 2
    internal_error    = 3
    OTHERS            = 4.
IF sy-subrc &lt;> 0.
*== also check LT_ERRORS for entries with MSG_TYPE "E"!
  BREAK-POINT.
ENDIF.

*== as there can be warnings in ERROR-table: Clear existing entries
CLEAR lt_errors.

IF lt_fax IS INITIAL OR p_new = 'X'.
*== do not change existing numbers:
  CLEAR lt_fax.
*== ADD the new number
  ls_fax-fax_number = p_faxnr.
  ls_fax-country    = 'DE'.
  ls_fax-updateflag = 'I'.
  APPEND ls_fax TO lt_fax.
ELSE.
  READ TABLE lt_fax ASSIGNING &lt;fax> INDEX 1.
*== CHANGE the existing number
  IF sy-subrc = 0.
    &lt;fax>-fax_number = p_faxnr.
    &lt;fax>-country    = 'DE'.
    &lt;fax>-updateflag = 'U'.
  ENDIF.
ENDIF.

*== set number
CALL FUNCTION 'ADDR_COMM_MAINTAIN'
  EXPORTING
    address_number    = p_adrnr
    language          = sy-langu
    table_type        = 'ADFAX'
    check_address     = 'X'
  TABLES
    comm_table        = lt_fax
    error_table       = lt_errors
  EXCEPTIONS
    parameter_error   = 1
    address_not_exist = 2
    internal_error    = 3
    OTHERS            = 4.
IF sy-subrc &lt;> 0.
*== Also check for LT_ERRORS!!
  BREAK-POINT.
ELSE.
*== Everything okay: Save address
  CALL FUNCTION 'ADDR_MEMORY_SAVE'.
*==> Also ADDR_SINGLE_SAVE is possible!:
*  CALL FUNCTION 'ADDR_SINGLE_SAVE'
*    EXPORTING
*      address_number = p_adrnr.
ENDIF.</pre>


<p><!-- /wp:paragraph --></p><p>Der Beitrag <a href="/blog/telefon-fax-aendern/">Telefon/ Fax ändern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Adressenpflege</title>
		<link>/blog/adressenpflege/</link>
					<comments>/blog/adressenpflege/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 09 Sep 2010 13:29:11 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Eigenentwicklungen]]></category>
		<category><![CDATA[Adressen]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=563</guid>

					<description><![CDATA[<p>Mit diesem kleinen Programm k&#246;nnen Sie einfach eine Adresse anzeigen oder bearbeiten und speichern. Die Adresse muss im Selektionsbild eingetragen werden, kann aber nat&#252;rlich einfach zu einzelnen Objekten ermittelt werden: Kunden, Lieferanten, Werke usw.</p>
<p>Der Beitrag <a href="/blog/adressenpflege/">Adressenpflege</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Mit diesem kleinen Programm können Sie einfach eine Adresse anzeigen oder bearbeiten und speichern. Die Adresse muss im Selektionsbild eingetragen werden, kann aber natürlich einfach zu einzelnen Objekten ermittelt werden: Kunden, Lieferanten, Werke usw.</p>
<h2 class="head1">Beschreibung</h2>
<p class="text1">Das Programm liest die im Selektionsbild eingetragene Adressnummer ein. Wenn sie nicht vorhanden ist und P_EDIT gesetzt ist, dann wird sie angelegt.</p>
<h2 class="head2">Feldsteuerung</h2>
<p class="text1">Vor dem eigentlich Dialog werden noch die zu verwendenden Felder definiert. Um zu wissen, welche Felder mit den Zahlen verknüpft sind, rufen Sie in einem Standard-Dialog für das Feld die F1-Hilfe auf. Machen Sie dann einen Doppelklick auf die Bildnummer (0201 z.B.). Sie gelangen dann in den Screenpainter. Hier sehen Sie in der Elementliste auf dem Tabreiter &#8220;ModifGruppen/ Funktionen&#8221; im Feld &#8220;<strong>Gruppe4</strong>&#8221; die entsprechende Nummer.</p>
<h2 class="head2">Objektverknüpfung</h2>
<p class="text1">Um eine neue Nummer zu ermitteln, müssen Sie das Objekt angeben für das die Adresse verwendet wird. Schauen Sie am besten in der Tabelle TSADRV für gültige Objekte. Die Tabelle kann mit der Transaktion SM30 gepflegt werden. Sie können also auch eigene Objekte definieren.</p>
<h2 class="head1">Coding</h2>
<pre class="lang:abap decode:true ">*** data definition
DATA gt_handle            TYPE STANDARD TABLE OF addr1_dia
                               WITH NON-UNIQUE DEFAULT KEY.
DATA gs_handle            LIKE LINE OF gt_handle.
DATA gv_maint_mode        LIKE gs_handle-maint_mode.
DATA gv_okcode            TYPE syucomm.
DATA gt_values            TYPE STANDARD TABLE OF addr1_data.
DATA gv_offset            TYPE i.
DATA gs_address_reference LIKE addr_ref.
DATA gs_addr1_val         TYPE addr1_val.
DATA gs_addr1_sel         TYPE addr1_sel.
DATA gs_fisel             TYPE addr1_fsel-fisel.

*** makro for field settings
DEFINE cf.
  gv_offset = &amp;1 - 1.
  gs_fisel+gv_offset(1) = &amp;2.
END-OF-DEFINITION.

PARAMETERS p_adrnr TYPE adrnr.
PARAMETERS p_edit AS CHECKBOX.

START-OF-SELECTION.

*** set parameters
  gs_addr1_sel-addrhandle = space.
  gs_addr1_sel-addrnumber = p_adrnr.

*** read address
  CALL FUNCTION 'ADDR_GET'
    EXPORTING
      address_selection = gs_addr1_sel
    IMPORTING
      address_value     = gs_addr1_val
    EXCEPTIONS
      parameter_error   = 1
      address_not_exist = 2
      version_not_exist = 3
      internal_error    = 4
      OTHERS            = 5.
  IF sy-subrc = 0.
    IF p_edit &lt;&gt; space.
      gv_maint_mode  = 'CHANGE'.
    ELSE.
      gv_maint_mode  = 'DISPLAY'.
    ENDIF.
    gs_handle-handle     = space.
  ELSEIF p_edit &lt;&gt; space.
    gv_maint_mode    = 'CREATE'.
    gs_handle-handle = 'TRICKTRESOR'.
  ELSE.
    MESSAGE i000(oo) WITH 'Address does not exist.'.
  ENDIF.

*** prepare address handle
  gs_handle-owner      = 'X'.
  gs_handle-addrnumber = gs_addr1_sel-addrnumber.
  gs_handle-maint_mode = gv_maint_mode.
  gs_handle-addr_group = 'SD01'.
  gs_handle-country    = 'DE'.
  APPEND gs_handle TO gt_handle.

*** prepare field selection
  CLEAR gs_fisel WITH '-'.
  cf: 002 ' ',   " Name
      004 ' ',                                              " Name2
      010 ' ',   " Street
      016 ' ',   " Country
      022 ' ',   " House number
      029 '#',   " Building
      030 '#',   " Floor
      031 '#',   " Room number
      012 ' ',   " Postal code
      013 ' ',   " Postal code
      014 ' ',   " City
      019 ' ',   " Telefon
      020 ' '.   " Fax

*** set field selection
  CALL FUNCTION 'ADDR_DIALOG_PREPARE'
    EXPORTING
      field_selection = gs_fisel
    EXCEPTIONS
      internal_error  = 1
      OTHERS          = 2.

*** maintain address
  CALL FUNCTION 'ADDR_DIALOG'
    IMPORTING
      ok_code           = gv_okcode
    TABLES
      number_handle_tab = gt_handle
      values            = gt_values
    EXCEPTIONS
      address_not_exist = 1
      group_not_valid   = 2
      parameter_error   = 3
      internal_error    = 4
      OTHERS            = 5.

  IF sy-subrc = 0.
    IF gv_okcode = 'CONT'.
      CASE gv_maint_mode.
*** Create address
        WHEN 'CREATE'.
*** set references for address type
          gs_address_reference-appl_table = 'VBUK'.
          gs_address_reference-appl_field = 'VBELN'.
          gs_address_reference-appl_key   = '$000000001'.
          gs_address_reference-addr_group = gs_handle-addr_group.
          gs_address_reference-owner      = 'X'.
*** get new address number
          CALL FUNCTION 'ADDR_NUMBER_GET'
            EXPORTING
              address_handle    = gs_handle-handle
              address_reference = gs_address_reference
            IMPORTING
              address_number    = p_adrnr
            EXCEPTIONS
              OTHERS            = 4.
          IF sy-subrc &gt; 0.
            WRITE: / 'Error ADDR_NUMBER_GET'.
            STOP.
          ENDIF.
      ENDCASE.
*** save address
      CALL FUNCTION 'ADDR_MEMORY_SAVE'
        EXCEPTIONS
          address_number_missing = 1
          person_number_missing  = 2
          internal_error         = 3
          database_error         = 4
          reference_missing      = 5
          OTHERS                 = 6.
      IF sy-subrc = 0.
        WRITE: / 'Address saved:', p_adrnr.
      ELSE.
        WRITE: / 'Error ADDR_MEMORY_SAVE, SUBRC=', sy-subrc.
      ENDIF.
    ELSE.
*** Dialog cancelled
      WRITE: / 'Dialog cancelled'.
    ENDIF.
  ELSE.
*** Error in dialog
    WRITE: / 'Error ADDR_DIALOG'.
  ENDIF.</pre>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/adressenpflege/">Adressenpflege</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/adressenpflege/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
	</channel>
</rss>
