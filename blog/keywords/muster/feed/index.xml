<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Muster Archive - Tricktresor</title>
	<atom:link href="/blog/keywords/muster/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 12 Sep 2017 09:25:00 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Muster Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Hovitaga Advanced Pattern Enhancement</title>
		<link>/blog/hovitaga-advanced-pattern-enhancement/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 07 Mar 2014 15:44:49 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[Texte]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Muster]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Download]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4550</guid>

					<description><![CDATA[<p>Wer in ABAP programmiert hat mit Sicherheit schon den Befehl "Muster einf√ºgen" im Editor verwendet. Hier√ºber lassen sich in erster Linie die Aufrufe f√ºr Funktionsbausteine und Methoden in den Quelltext einf√ºgen. Gerade bei Funktionsbausteinen ist dies ein unerl√§ssliches Hilfsmittel, denn die Syntaxpr√ºfung pr√ºft bei Funktionsbausteinen nicht, ob ein falscher Parameter verwendet wird. Die ungarische SAP-Entwicklerfirma Hovitaga hat f√ºr das Einf√ºgen von Mustern ein kleines kostenloses AddOn entwickelt.</p>
<p>Der Beitrag <a href="/blog/hovitaga-advanced-pattern-enhancement/">Hovitaga Advanced Pattern Enhancement</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Wer in ABAP programmiert hat mit Sicherheit schon den Befehl &#8220;Muster einf√ºgen&#8221; im Editor verwendet. Hier√ºber lassen sich in erster Linie die Aufrufe f√ºr Funktionsbausteine und Methoden in den Quelltext einf√ºgen. Gerade bei Funktionsbausteinen ist dies ein unerl√§ssliches Hilfsmittel, denn die Syntaxpr√ºfung pr√ºft bei Funktionsbausteinen nicht, ob ein falscher Parameter verwendet wird.</p>
<p>Die ungarische SAP-Entwicklerfirma <a title="Homepage | Hovitaga" href="http://www.hovitaga.com/">Hovitaga </a>hat f√ºr das Einf√ºgen von Mustern ein kleines kostenloses AddOn entwickelt. Doch der Reihe nach.</p>
<h2>Einf√ºgen von Mustern</h2>
<p>√úber das Men√º <em>Hilfsmittel &#8211; Einstellungen</em> im Editor k√∂nnen einige Einstellungen f√ºr das Einf√ºgen von Mustern vorgenommen werden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_22_14.jpg"><img fetchpriority="high" decoding="async" class="alignnone size-medium wp-image-4552" alt="Muster Einstellungen" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_22_14-282x300.jpg" width="282" height="300" srcset="/wp-content/uploads/2014/03/03_07_16_22_14-282x300.jpg 282w, /wp-content/uploads/2014/03/03_07_16_22_14.jpg 565w" sizes="(max-width: 282px) 100vw, 282px" /></a></p>
<p>&nbsp;</p>
<h2>Muster einf√ºgen SAP Standard</h2>
<p>Das Einf√ºgen von Mustern erfolgt √ºber den Druckknopf <em>Muster</em> im Editor. Es erscheint ein Popup in dem man ausw√§hlen muss, f√ºr welchen Befehl man ein Muster einf√ºgen m√∂chte. Wir entscheiden uns f√ºr die Option <em>ABAP Objects Muster</em> und gelangen auf ein weiteres Popup:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_11_34.jpg"><img decoding="async" class="alignnone size-medium wp-image-4553" alt="ABAP Objects Muster" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_11_34-289x300.jpg" width="289" height="300" srcset="/wp-content/uploads/2014/03/03_07_16_11_34-289x300.jpg 289w, /wp-content/uploads/2014/03/03_07_16_11_34.jpg 376w" sizes="(max-width: 289px) 100vw, 289px" /></a></p>
<p>&nbsp;</p>
<p>Nachdem ich mich an dieser Stelle h√§ufig √§rgere, dass in der Suchhilfe zur Methode alle Methoden der Klasse angezeigt werden und keine Unterscheidung zwischen PRIVATE, PROTECTED oder PUBLIC gemacht wird, endet hier auch die Funktionalit√§t im SAP Standard. Je nach Release wird vor dem Aufruf der Methode noch die Datendeklaration eingef√ºgt.</p>
<h2>Muster einf√ºgen Hovitaga style</h2>
<p>Dort, wo SAP aufh√∂rt, f√§ngt die Funktionalit√§t von Hovitaga an. An der Stelle, wo normalerweise der Code in den Quelltext eingef√ºgt wird, erscheint erneut ein Popup:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_15_50_29.jpg"><img decoding="async" class="alignnone size-medium wp-image-4554" alt="Hovitaga Dialog" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_15_50_29-300x191.jpg" width="300" height="191" srcset="/wp-content/uploads/2014/03/03_07_15_50_29-300x191.jpg 300w, /wp-content/uploads/2014/03/03_07_15_50_29-1024x655.jpg 1024w, /wp-content/uploads/2014/03/03_07_15_50_29-624x399.jpg 624w, /wp-content/uploads/2014/03/03_07_15_50_29.jpg 1363w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>Hier kann durch verschiedene Funktionen der Aufruf im Quelltext gesteuert werden.¬†Anstatt im Coding nicht ben√∂tigte Parameter zu l√∂schen, kann im Dialog bereits entschieden werden, welche Parameter ben√∂tigt werden. Auf Wunsch wird auch die Datendeklaration f√ºr den jeweiligen Parameter eingef√ºgt. F√ºr Tabellenparameter kann auch ein entsprechender Arbeitsbereich deklariert werden. Hovitaga folgt hierbei den √ºblichen Namenskonventionen:</p>
<ul>
<li>S = Struktur</li>
<li>T = Tabelle</li>
<li>V = Variable</li>
<li>R = Referenz auf ein Objekt</li>
</ul>
<p>Durch einen Schalter kann zwischen globaler und lokaler Datendeklaration gew√§hlt werden, was sich in der Namenskonvention durch die Verwendung von G oder L auswirkt.</p>
<p>In einer Vorschau wird der einzuf√ºgende Aufruf angezeigt. Man sieht sofort, wie sich die √Ñnderungen von z.B. &#8220;Remove Unsed Lines&#8221; auswirken.</p>
<h2>Fazit</h2>
<p>Ich m√∂chte nicht soweit gehen, dass es ein unentbehrliches Tool f√ºr den ABAP-Programmierer ist. Allerdings finden sich sinnvolle Funktionen in dieser Erweiterung, die das Leben durchaus leichter machen k√∂nnen. Es gibt also eine klare Tricktresor-Empfehlung!</p>
<h2>Download</h2>
<p><a title="Advanced Pattern Enhancement | Hovitaga" href="http://www.hovitaga.com/Advanced-pattern-enhancement-overview">Hovitaga Advanced Pattern Enhancement &#8211; Product page and Download</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/hovitaga-advanced-pattern-enhancement/">Hovitaga Advanced Pattern Enhancement</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Warum Entwurfsmuster?</title>
		<link>/blog/warum-entwurfsmuster/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 07 Mar 2014 14:25:51 +0000</pubDate>
				<category><![CDATA[Entwurfsmuster]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[programmierung]]></category>
		<category><![CDATA[Zevolving]]></category>
		<category><![CDATA[Muster]]></category>
		<category><![CDATA[Entwicklung]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4541</guid>

					<description><![CDATA[<p>Entwurfsmuster (engl.: "Design Pattern") sind inzwischen ein n√ºtzliches Werkzeug in der Programmierung. Allerdings sind Entwurfsmuster teilweise sehr komplex, abstrakt und schwer zu erkennen. In der Tricktresor-Rubrik Entwurfsmuster m√∂chte ich Entwurfsmuster selbst, Anwendungshinweise, Vor- und Nachteile und alles andere, was irgendwie mit Entwurfsmustern zu tun hat, sammeln.</p>
<p>Der Beitrag <a href="/blog/warum-entwurfsmuster/">Warum Entwurfsmuster?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Entwurfsmuster (engl.: &#8220;Design Pattern&#8221;) sind inzwischen ein n√ºtzliches Werkzeug in der Programmierung. Allerdings sind Entwurfsmuster teilweise sehr komplex, abstrakt und schwer zu erkennen. In der Tricktresor-Rubrik <em>Entwurfsmuster</em> m√∂chte ich Entwurfsmuster selbst, Anwendungshinweise, Vor- und Nachteile und alles andere, was irgendwie mit Entwurfsmustern zu tun hat, sammeln. Dass hierbei der Fokus auf SAP und ABAP liegt, ist hoffentlich selbstverst√§ndlich&#8230;?! <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png" alt="üòâ" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<h2>Was ist ein Entwurfsmuster?</h2>
<p>Entwurfsmuster sind L√∂sungen f√ºr definierte programmiertechnische Probleme. Ein Entwurfsmuster hat bestimmte Eigenschaften, die speziell f√ºr immer wiederkehrende Probleme in der Softwareentwicklung erdacht wurden.</p>
<h2>Und was hei√üt das jetzt konkret?</h2>
<p>Ich mag Vergleiche. Auch wenn nicht alles, was hinkt, ein Vergleich ist&#8230; Mein Vater hat mich fr√ºher immer genervt, wenn er alles bei Computern mit Autos verglichen hat. Aber selbst bei teilweise √ºbel hinkenden Analogien kann man eine abstrakte Sache sehr ¬†gut beschreiben.</p>
<p>Ich versuche das mal nicht mit Autos, sondern mit Holz. Nehmen wir an, dass Holz die Programmiersprache ist und Softwareentwicklung das Tischlerhandwerk ist. Der Tischler kann mit Holz vieles bauen, was der Kunde w√ºnscht: Carports, Tische, B√§nke, Schr√§nke usw. F√ºr einige W√ºnsche reicht die Programmiersprache &#8220;Holz&#8221; unter Umst√§nden nicht aus: Waschbecken, Auto, Mikrowelle.</p>
<p>Aber bei den meisten allt√§glichen W√ºnschen, reicht der Werkstoff Holz jedoch. Zudem wei√ü der Kunde meistens auch, dass er f√ºr seinen Wunsch einen Tischler (ABAP-Programmierer) bestellen muss. Damit der Tischler nicht jedes Mal neu forschen muss, wie er am besten die Beine eines Stuhles oder Tisches zusammen leimt, hat er daf√ºr ein <em>Entwurfsmuster</em> gelernt. Das gibt dem Tischler die Sicherheit, dass die Beine stabil und robust sind.</p>
<p>Und auch die realen Gegenst√§nde in der Welt des Tischlers sind h√§ufig Entwurfsmuster: Stuhl, Hocker, Tisch, Apothekerschrank, Carport, &#8230; Der Vorteil hierbei ist: Jeder wei√ü sofort, √ºber was gesprochen wird und was f√ºr Eigenschaften das Objekt hat. Der Kunde muss dem Tischler nicht erkl√§ren, dass er &#8220;etwas haben m√∂chte, worauf man sitzen kann&#8221;. Weder Tischler noch Kunde m√ºssen sich Gedanken dar√ºber machen, ob man vielleicht eine gro√üe Kiste nehmen k√∂nnte und ob das Objekt auch eine Last von 500 kg aushalten muss und auch nicht, ob es schwimmen k√∂nnen muss. Die Eigenschaften sind klar und alle Beteiligten k√∂nnen sich √ºber Details unterhalten. Gegebenenfalls muss das Entwurfsmuster gewechselt werden, wenn bei den Details heraus kommt, dass noch andere Eigenschaften gefordert sind, die das bisherige Entwurfsmuster nicht leisten kann. In dem Beispiel mit dem Stuhl k√∂nnte man eventuell zum <em>Entwurfsmuster</em> Bank wechseln.</p>
<h2>Historie</h2>
<p>Die Entwurfsmuster gehen zur√ºck auf die <a title="Gang Of Four | Wikipedia" href="http://de.wikipedia.org/wiki/Viererbande_(Softwareentwicklung)"><em>Gang Of Four</em></a>. Die vier &#8220;Bandenmitglieder&#8221; Erich Gamma, Richard Helm, Ralph Johnson und John Vlissides haben die Entwurfsmuster zwar nicht erfunden, aber sie waren die ersten, die die Muster in einem Katalog zusammen gefasst haben. Diese Sammlung von 1995 <a title="Design Patterns | amazon.de" href="http://www.amazon.de/Patterns-Elements-Reusable-Object-Oriented-Software/dp/0201633612/ref=sr_1_1?ie=UTF8&amp;qid=1394198450&amp;sr=8-1&amp;keywords=gang+of+four+design+pattern"><em>Design Patterns. Elements Of Reusable Object-Oriented Software</em></a> geh√∂rt mittlerweile zum Standardwerk in der Softwareentwicklung.</p>
<h2>Vorteile</h2>
<p>Zwei Vorteile von Entwurfsmustern sind bei dem Tischlerbeispiel bereits deutlich geworden:</p>
<ul>
<li>Eindeutigkeit: trotzdem ein Sachverhalt komplex ist, kann er mithilfe von Entwurfsmustern einfach dargestellt und diskutiert werden</li>
<li>Erprobte L√∂sungen f√ºr wiederkehrende Aufgaben: Der Programmierer muss sich keine Gedanken machen, wie bestimmte Fragestellungen gel√∂st werden k√∂nnen. Er kann sich in der Werkzeugkiste Entwurfsmuster bedienen.</li>
</ul>
<p>Weitere Vorteile sind (abh√§ngig vom Entwurfsmuster):</p>
<ul>
<li>leichte Erweiterbarkeit</li>
<li>Wartbarkeit</li>
<li>Flexibilit√§t</li>
<li>Vor- und Nachteile eines Entwurfsmusters sind im Voraus bekannt</li>
</ul>
<h2>Nachteile</h2>
<p>Wo Licht ist, da ist auch Schatten. Entwurfsmuster sind teilweise extrem komplex und zudem h√∂chst abstrakt. Das bedeutet f√ºr den Programmierer, dass er sich intensiv mit dem Thema &#8220;Entwurfsmuster&#8221; besch√§ftigen muss. Um wirklich gut mit Entwurfsmustern arbeiten zu k√∂nnen, m√ºssen diese in Fleisch und Blut √ºbergehen. Ich bin fast versucht zu sagen, dass man dabei eine h√∂here <em>Programmierer-Bewusstseinsebene</em> erreicht&#8230; <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png" alt="üòâ" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Entwurfsmuster sind schwer bis gar nicht zu erkennen. Wenn selbst ein einfaches Muster nicht durch den Namen &#8211; zum Beispiel als SINGLETON oder FACTORY &#8211; gekennzeichnet ist, ist es schwer, es als dieses zu erkennen. Da die Objekte eines Entwurfsmusters nicht zwingend zusammen h√§ngen, sondern als einzelne Klassen durch das SAP-System geistern, ist es wichtig, dass diese erstens entsprechend gekennzeichnet und zweitens gut dokumentiert werden.</p>
<h2>Fazit</h2>
<p>Meines Erachtens f√ºhrt f√ºr einen Entwickler, der seinen Job ernst nimmt, kein Weg mehr an Entwurfsmustern vorbei. Die Entwicklung im ABAP wird immer &#8220;Objekt lastiger&#8221;. Dementsprechend werden auch Entwurfsmuster wichtiger. Sie werden von der SAP eingesetzt und m√ºssen vom ABAP-Entwickler benutzt werden.</p>
<p>Auch sind die Zeiten vorbei, in der man sich zu jedem Problem eine eigene L√∂sung einfallen lassen musste. Es gibt viele st√§ndig wiederkehrende Aufgabenstellungen, bei denen der Kunde wenig Verst√§ndnis zeigen wird, wenn man hierzu eine eigene L√∂sung entwickeln will.</p>
<h2>Weitere Quellen</h2>
<ul>
<li><a title="Zevolving | Naimesh Patel" href="http://zevolving.com/category/abapobjects/oo-design-patterns/">ABAP-Blog: ZEVOLVING</a></li>
<li><a title="SCN Blog | Igor Barbaric" href="http://scn.sap.com/people/igor.barbaric/blog">SCN Blog of Igor Barbaric</a></li>
<li><a title="SCN | SAP contributors" href="http://search.sap.com/ui/scn#query=oo+abap+design+pattern&amp;startindex=1&amp;filter=scm_a_site%28scm_v_Site11%29&amp;filter=scm_a_modDate%28*%29&amp;timeScope=all">SCN-Beitr√§ge zu ABAP OO Design Patterns</a></li>
<li><a title="Pattern Library | Hillside" href="http://hillside.net/patterns/">Design Pattern Library</a></li>
</ul>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/warum-entwurfsmuster/">Warum Entwurfsmuster?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Eigene Muster verwenden</title>
		<link>/blog/eigene-muster-verwenden/</link>
					<comments>/blog/eigene-muster-verwenden/#respond</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 21 Jul 2003 19:30:39 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Muster]]></category>
		<category><![CDATA[Workbench-Tools]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=95</guid>

					<description><![CDATA[<p>Statischer h&#228;ufig wiederkehrender Programmtext kann einfach als Muster abgelegt werden. Hierzu geh&#246;ren zum Beispiel einheitliche Programmk&#246;pfe oder ganze Vorgaben f&#252;r einen Report mit Ausgabe einer Liste.</p>
<p>Der Beitrag <a href="/blog/eigene-muster-verwenden/">Eigene Muster verwenden</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Statischer h&auml;ufig wiederkehrender Programmtext kann einfach als Muster abgelegt werden. Hierzu geh&ouml;ren zum Beispiel einheitliche Programmk&ouml;pfe oder ganze Vorgaben f&uuml;r einen Report mit Ausgabe einer Liste.<br /><P>Wenn Sie sich im Editor befinden, gelangen Sie &uuml;ber &#8220;<EM>Hilfsmittel &#8211; Weitere Hilfsmittel &#8211; Muster bearbeiten</EM>&#8221; zu den n&ouml;tigen Funktionen.</P><P>W&auml;hlen Sie &#8220;Muster anlegen&#8221; und geben Sie dann den Namen des Musters ein. Z. B. Z_PROGKOPF1, um einen einheitlichen Programmkopf zu verwirklichen.</P><P>Dieser k&ouml;nnte dann folgenderma&szlig;en aussehen:</P><P class="sap1"><FONT color="#fb2412">************************************************************************<BR>************************************************************************<BR>****************************&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *******************************<BR>***************************&nbsp; TRICKTRESOR&nbsp; ******************************<BR>****************************&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *******************************<BR>************************************************************************<BR>************************************************************************<BR>*** <BR>*** PROGRAMMNAME&nbsp;&nbsp; :<BR>*** PROGRAMMTITEL&nbsp; :<BR>*** ZWECK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :<BR>*** AUTOR(EN)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :<BR>*** DATUM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : <BR>*** ORIGINALSYSTEM : MBS<BR>*** VORAUSSETZUNGEN:<BR>***<BR>************************************************************************<BR>*** &Auml;NDERUNGEN (JJJJMMTTAutor)<BR>*** &#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<BR>***<BR>***<BR>************************************************************************</FONT><BR></P><P>Sie k&ouml;nnen aber evtl. auch ganze Programmstrukturen vorgeben, um das Erstellen von Programmen einfacher zu gestalten:</P><P class="sap1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NO STANDARD PAGE HEADING<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LINE-SIZE 132<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LINE-COUNT 65<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MESSAGE-ID ztricktresor.</P><P class="sap1"><FONT color="#fb2412">*** Datendefinitionen:<BR>*DATA:</FONT></P><P class="sap1"><FONT color="#fb2412">*** Programmparameter:<BR>*PARAMETERS:&nbsp;&nbsp;&nbsp;&nbsp; p_xxx.<BR>*SELECT-OPTIONS: s_xxx</FONT></P><P class="sap1"><FONT color="#fb2412">*** Includes:<BR></FONT>*INCLUDE:</P><P class="sap1"><FONT color="#fb2412">*** Init<BR></FONT>INITIALIZATION.</P><P class="sap1"><FONT color="#fb2412">*** Programmanfang</FONT><BR>START-OF-SELECTION.</P><P class="sap1"><FONT color="#fb2412">*** Seitenkopf</FONT><BR>TOP-OF-PAGE.<BR>&nbsp; PERFORM top_of_page.</P><P class="sap1">TOP-OF-PAGE DURING LINE-SELECTION.<BR>&nbsp; PERFORM top_of_page.</P><P class="sap1">&nbsp;</P><P class="sap1"><FONT color="#fb2412">*** Unterroutinen</FONT></P><P class="sap1"><FONT color="#fb2412">*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<BR>*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FORM top_of_page&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *<BR>*&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;*<BR></FONT>FORM top_of_page.</P><P class="sap1">&nbsp; FORMAT COLOR COL_HEADING INTENSIFIED ON.<BR>&nbsp; ULINE.</P><P class="sap1">&nbsp; CASE sy-lsind.<BR>&nbsp;&nbsp;&nbsp; WHEN 1.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8230;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8230;<BR>&nbsp;&nbsp;&nbsp; WHEN 2.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8230;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8230;<BR>&nbsp; ENDCASE.</P><P class="sap1">&nbsp; FORMAT COLOR OFF INTENSIFIED OFF.<BR>&nbsp; ULINE.</P><P class="sap1">ENDFORM.<BR></P><P>&nbsp;</P></p>
<p>Der Beitrag <a href="/blog/eigene-muster-verwenden/">Eigene Muster verwenden</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/eigene-muster-verwenden/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Verwendung von Mustern</title>
		<link>/blog/verwendung-von-mustern/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 21 Jul 2003 19:15:47 +0000</pubDate>
				<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Workbench-Tools]]></category>
		<category><![CDATA[Muster]]></category>
		<guid isPermaLink="false">http://wp.tricktresor.com/?p=94</guid>

					<description><![CDATA[<p>Die Verwendung von Mustern ist sehr einfach. Oftmals muss man nur daran denken, dass es dieses Hilfsmittel &#252;berhaupt gibt.</p>
<p>Der Beitrag <a href="/blog/verwendung-von-mustern/">Verwendung von Mustern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Die Verwendung von Mustern ist sehr einfach. Oftmals muss man nur daran denken, dass es dieses Hilfsmittel &uuml;berhaupt gibt.<br /><P>Im Editor k&ouml;nnen Sie ein Muster einbinden, indem Sie auf den Knopf [Muster] klicken oder im Men&uuml; &uuml;ber &#8220;<EM>Bearbeiten &#8211; Muster</EM>&#8221; gehen.</P><P>Das Einbinden von Mustern ist immer dann sehr hilfreich, wenn man ein vorhandenes <FONT color="#fb2412">komplexes Objekt</FONT> aufrufen m&ouml;chte. </P><P>Die h&auml;ufigste Verwendung findet die Funktion wohl bei der Einbindung von <FONT color="#fb2412">Funktionsbausteinen</FONT>. Hier werden n&auml;mlich automatisch die Import- und Export-Parameter, Tabellen und Ausnahmen eingeblendet.</P><P>Hilfreich ist auch das automatische <FONT color="#fb2412">Einf&uuml;gen einer Select-Anweisung</FONT>. Hier k&ouml;nnen Sie n&auml;mlich die Felder, die in der WHERE-Bedingung auftauchen sollen, per Ankreuzen &uuml;bernehmen.</P><P><TABLE class="tblimg" cellPadding="4" align="left"><TBODY><TR><TD vAlign="top"><P><IMG src="/wp-content/uploads/tt_images/muster_select.gif"><BR>Feldauswahl Tabelle T005</P></TD></TR></TBODY></TABLE></P><P>Auch interne Tabellen mit Feldern einer Dictionary-Struktur (<FONT color="#f49047">Strukturiertes Datenobjekt</FONT>) lassen sich komfortabel mit der Muster-Funktion erstellen. Sie k&ouml;nnen Felder der angegebenen Struktur durch Ankreuzen &uuml;bernehmen. Geben Sie dann den Namen der internen Struktur an, und der Quelltext f&uuml;r die Definition der Tabelle wird eingef&uuml;gt:</P><P class="sap1">DATA: BEGIN OF t_t005,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; spras TYPE t005t-spras,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; land1 TYPE t005t-land1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; natio TYPE t005t-natio,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; END OF t_t005.<BR></P></p>
<p>Der Beitrag <a href="/blog/verwendung-von-mustern/">Verwendung von Mustern</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
