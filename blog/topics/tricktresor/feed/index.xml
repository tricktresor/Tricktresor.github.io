<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>Tricktresor Archive - Tricktresor</title>
	<atom:link href="/blog/topics/tricktresor/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 07 Jun 2022 09:48:15 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>Tricktresor Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Startbildschirm festlegen</title>
		<link>/blog/startbildschirm-festlegen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 02 Jun 2022 12:59:44 +0000</pubDate>
				<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Blog]]></category>
		<category><![CDATA[Allgemein]]></category>
		<category><![CDATA[startbild]]></category>
		<category><![CDATA[image]]></category>
		<guid isPermaLink="false">/?p=1036355</guid>

					<description><![CDATA[<p>Im SAPGUI Easy Access Menu gibt es die Möglichkeit, ein Bild anzuzeigen. Das ist einerseits hilfreich, um das Unternehmens-Branding direkt beim Anmelden an das R/3-System zu präsentieren. Andererseits kann man auf diese Weise die unterschiedlichen Systeme gut und einfach kennzeichnen, so dass die Anwendenden auf Anhieb wissen, in welchem System sie sich angemeldet haben. In unserem Entwicklungssystem sieht das zum Beispiel wie folgt aus: Einstellungen Um ein Bild für das Easy Access Startmenü festzulegen, gehst...</p>
<p>Der Beitrag <a href="/blog/startbildschirm-festlegen/">Startbildschirm festlegen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Im SAPGUI Easy Access Menu gibt es die Möglichkeit, ein Bild anzuzeigen. Das ist einerseits hilfreich, um das Unternehmens-Branding direkt beim Anmelden an das R/3-System zu präsentieren. Andererseits kann man auf diese Weise die unterschiedlichen Systeme gut und einfach kennzeichnen, so dass die Anwendenden auf Anhieb wissen, in welchem System sie sich angemeldet haben.</p>



<p>In unserem Entwicklungssystem sieht das zum Beispiel wie folgt aus:</p>



<figure class="wp-block-image size-large"><img fetchpriority="high" decoding="async" width="1024" height="653" src="/wp-content/uploads/2022/06/image-1024x653.png" alt="" class="wp-image-1036360" srcset="/wp-content/uploads/2022/06/image-1024x653.png 1024w, /wp-content/uploads/2022/06/image-300x191.png 300w, /wp-content/uploads/2022/06/image-768x490.png 768w, /wp-content/uploads/2022/06/image-174x111.png 174w, /wp-content/uploads/2022/06/image-95x62.png 95w, /wp-content/uploads/2022/06/image.png 1037w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Inwerken SAP-System</figcaption></figure>



<h2 class="wp-block-heading">Einstellungen</h2>



<p>Um ein Bild für das Easy Access Startmenü festzulegen, gehst du wie folgt vor:</p>



<ul><li>Hochladen eines Bildes in Transaktion SMW0</li><li>Einstellen der Parameter<ul><li><code>START_IMAGE</code> &#8211; Name des Bildes</li><li><code>RESIZE_IMAGE</code> (YES/NO) &#8211; Anpassen des Bildes an die Fenstergröße</li></ul></li></ul>



<h3 class="wp-block-heading">Hochladen des Bildes</h3>



<p>Starte die Transaktion SMW0 und wähle die Option <em>Binary data for WebRFC applications</em> und führe das Programm mit F8 aus. Du kannst auch direkt das Programm <strong>RSWWWSHW</strong> aufrufen.</p>



<p>Im folgenden Selektionsbild kannst du die Auswahl einschränken, musst du aber nicht. Führe den Report mit F8 aus.</p>



<figure class="wp-block-image size-full"><img decoding="async" width="593" height="320" src="/wp-content/uploads/2022/06/image-2.png" alt="" class="wp-image-1036362" srcset="/wp-content/uploads/2022/06/image-2.png 593w, /wp-content/uploads/2022/06/image-2-300x162.png 300w" sizes="(max-width: 593px) 100vw, 593px" /><figcaption>Report RSWWWSHW</figcaption></figure>



<p>Lege einen neuen Eintrag an. Drücke hierzu das <strong>Anlegen-Symbol</strong> in der Drucktastenleiste oder drücke F5. Im Popup musst du einen <em>Namen</em> und eine <em>Beschreibung</em> vergeben. Der Name muss mit Z beginnen (Kundennamensraum!). Drücke danach das <strong>Import-Symbol</strong> oder die Tastenkombination SHIFT+F6. Es erscheint ein Dateiauswahldialog in dem du deine Bilddatei auswählst. Ordne noch ein Paket zu und du bist fertig. Den Namen des Bildes benötigst du gleich.</p>



<p>Weitere Informationen findest du in meinem <a href="/blog/bilder-aus-mime-repository-anzeigen/">Artikel zur Anzeige von Bildern aus der SMW0</a>.</p>



<h3 class="wp-block-heading">Einstellen der Parameter</h3>



<p>Das Startbild wird über Parameter in der <strong>Tabelle SSM_CUS</strong>T definiert. Rufe die Transaktion <strong>SM30</strong> auf, um die Parameter zu pflegen. Oder rufe direkt die Transaktion <strong>SM30_SSM_CUST</strong> auf.</p>



<p>Gib die folgenden Parameter ein:</p>



<figure class="wp-block-table"><table><thead><tr><th>Parametername</th><th>Wert</th><th>Beschreibung</th></tr></thead><tbody><tr><td>START_IMAGE</td><td>&lt;NAME&gt;</td><td>Name des in SMW0 angelegten Bildes in Großbuchstaben</td></tr><tr><td>RESIZE_IMAGE</td><td>YES oder NO</td><td>Bildgröße an Fenstergröße anpassen ja/ nein</td></tr><tr><td>HIDE_START_IMAGE</td><td>YES oder NO</td><td>Startbild ignorieren ja/nein</td></tr></tbody></table><figcaption>Parametertabelle SSM_CUST</figcaption></figure>



<p>Ein genaues Vorgehen mit weiteren Hinweisen findest du in <a href="https://launchpad.support.sap.com/#/notes/1638985" target="_blank" rel="noreferrer noopener">SAP-Hinweis 1638985</a>.</p>



<p>Die Einstellungen sind Mandanten-unabhängig. Das bedeutet, dass du leider keine unterschiedlichen Bilder in unterschiedlichen Mandanten einstellen kannst (Siehe <a href="https://launchpad.support.sap.com/#/notes/1337986" target="_blank" rel="noreferrer noopener">SAP-Hinweis 1337986</a>).</p>



<h2 class="wp-block-heading">Animiertes GIF anzeigen</h2>



<p>Anstelle eines JPG oder PNG Bildes kannst du auch ein animierten GIF anzeigen. Hierfür musst du das Bild jedoch im Mime Repository ablegen. Wie das genau geht, steht in <a href="https://launchpad.support.sap.com/#/notes/2693398" target="_blank" rel="noreferrer noopener">SAP-Hinweis 2693398</a>.</p>



<h2 class="wp-block-heading">URL anzeigen</h2>



<p>Seit Release 7.00 kannst du auch Webseiten anzeigen. Dazu musst du den Parameter <code>SESS_URL</code> setzen (<a class="keychainify-checked" href="https://launchpad.support.sap.com/#/notes/1387086" target="_blank" rel="noreferrer noopener">SAP-Hinweis 1387086</a>). Die URL darf maximal 200 Zeichen lang sein. Eine interessante Möglichkeit also, um ein internes Wiki, die neuesten Tricks oder ähnliche Webseiten einzublenden.</p>



<p><span style="text-decoration: underline;"><strong>Achtung:</strong></span> Die Verwendung eine URL verzögert gegebenenfalls den Start des SAPGUI, da die Daten erst geladen werden müssen. Das Quartz-Theme hat auf unserem System auf jeden Fall große Schwierigkeiten mit der Anzeige einer URL: Der Start dauert extrem lange, bzw. werden neue Modi gar nicht geöffnet.</p>



<h2 class="wp-block-heading">Tipps zum Bild</h2>



<p>Folgende Tipps helfen dir eventuell bei der Auswahl des Bildes weiter.</p>



<h3 class="wp-block-heading">Bild ausblenden</h3>



<p>Mit dem Parameter <code>HIDE_START_IMAGE</code> kannst du steuern, dass das Startbild nicht angezeigt wird. Falls das Bild nicht angezeigt wird, stelle sicher, dass der Parameter auf NO steht.</p>



<h3 class="wp-block-heading">Bildgröße</h3>



<p>Wähle ein Bild, das nicht zu groß ist. Der Parameter <code>RESIZE_IMAGE</code> passt das Bild nämlich nicht im gleichen Größenverhältnis an, sondern verzerrt es. Das hat zwar den Vorteil, dass das Bild vollflächig angezeigt wird, allerdings sehen &#8211; auch leicht &#8211; verzerrte Bilder sehr unprofessionell aus.</p>



<p>Leider wird in dem zur Anzeige verwendeten Baustein <code>WB_BITMAP_SHOW</code> für die Darstellung mit CL_GUI_PICTURE die Option DISPLAY_MODE_STRETCH anstelle DISPLAY_MODE_FIT bzw. DISPLAY_MODE_FIT_CENTER verwendet. Mit FIT wird das Bild mit korrektem Seitenverhältnis an die Fenstergröße angepasst.</p>



<h3 class="wp-block-heading">Bildformat</h3>



<p>Als Bildformat kann ich dir PNG empfehlen, denn hier hast du die Möglichkeit, einen transparenten Hintergrund zu definieren. Dadurch sieht das Bild auch dann ordentlich aus, wenn ein anderes GUI-Theme eine andere Hintergrundfarbe hat:</p>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="566" src="/wp-content/uploads/2022/06/image-3-1024x566.png" alt="" class="wp-image-1036363" srcset="/wp-content/uploads/2022/06/image-3-1024x566.png 1024w, /wp-content/uploads/2022/06/image-3-300x166.png 300w, /wp-content/uploads/2022/06/image-3-768x425.png 768w, /wp-content/uploads/2022/06/image-3-660x365.png 660w, /wp-content/uploads/2022/06/image-3-71x40.png 71w, /wp-content/uploads/2022/06/image-3.png 1311w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Quartz-Theme (links) und Blue-Crystal-Theme (rechts)</figcaption></figure>
<p>Der Beitrag <a href="/blog/startbildschirm-festlegen/">Startbildschirm festlegen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Class Inspector</title>
		<link>/blog/class-inspector/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 16 Mar 2022 17:19:17 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Programmierung]]></category>
		<guid isPermaLink="false">/?p=1034704</guid>

					<description><![CDATA[<p>Heute hatte ich einen merkwürdigen Fehler: Ich konnte eine inaktive Klasse nicht aktivieren. Der Class Builder hat nur gemeldet: &#8220;Active class has been generated&#8221;, aber die Klasse war weiterhin inaktiv. Bei der Fehlersuche bin ich zwar nicht auf die Ursache gestoßen, habe aber einige Funktionsbausteine und Klassen kennengelernt, die bei der Fehlersuche hilfreich waren. Mit Hilfe des Funktionsbausteins RS_INACTIVE_PART habe ich immerhin herausgefunden, welcher Teil der Klasse nicht aktiv war, aber da die Komponenten einer...</p>
<p>Der Beitrag <a href="/blog/class-inspector/">Class Inspector</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Heute hatte ich einen merkwürdigen Fehler: Ich konnte eine inaktive Klasse nicht aktivieren. Der Class Builder hat nur gemeldet: &#8220;Active class has been generated&#8221;, aber die Klasse war weiterhin <em>inaktiv</em>. Bei der Fehlersuche bin ich zwar nicht auf die Ursache gestoßen, habe aber einige Funktionsbausteine und Klassen kennengelernt, die bei der Fehlersuche hilfreich waren. </p>



<p>Mit Hilfe des Funktionsbausteins RS_INACTIVE_PART habe ich immerhin herausgefunden, welcher Teil der Klasse nicht aktiv war, aber da die Komponenten einer Klasse sehr uneinheitlich definiert werden, half es mir nicht weiter, dass der inaktive Part vom Typ &#8220;CLSD&#8221; war. Über die Tabelle DWINACTIV habe ich den <em>Include</em> des inaktiven Klassenartefakts ermitteln können. Über den Objekttyp habe ich zwar herausgefunden, dass dies der Teil &#8220;<strong>CLSD &#8211; LIMU CLSD Class Definition (ABAP Objects)</strong>&#8221; ist.  Da der Definitionsteil im Class Builder jedoch als aktiv angezeigt wurde, wollte ich den Quelltext vergleichen. Im <a class="keychainify-checked" href="/blog/classname-utilities/">Artikel über die Classname Services</a> habe ich bereits beschrieben, wie man über die Einzelteile an die technischen Details kommt. Das war mir natürlich deutlich zu Umständlich&#8230; Also habe ich letztendlich ein kleines Programm &#8211; einen Class Inspector &#8211; geschrieben, dass die einzelnen Includes einer Klasse auflistet und über Doppelklick den jeweiligen Quelltext anzeigt. </p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="584" src="/wp-content/uploads/2022/03/image-1024x584.png" alt="" class="wp-image-1034705" srcset="/wp-content/uploads/2022/03/image-1024x584.png 1024w, /wp-content/uploads/2022/03/image-300x171.png 300w, /wp-content/uploads/2022/03/image-768x438.png 768w, /wp-content/uploads/2022/03/image-148x85.png 148w, /wp-content/uploads/2022/03/image-71x40.png 71w, /wp-content/uploads/2022/03/image.png 1293w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Tricktresor Class Inspector</figcaption></figure>



<h2 class="wp-block-heading">Code github</h2>



<p>Der Quelltext ist auf github verfügbar:</p>



<p><a href="https://github.com/tricktresor/class_inspector">https://github.com/tricktresor/class_inspector</a></p>



<p>Da das Coding so lang aber auch nicht ist, hier auch noch mal direkt.</p>



<h2 class="wp-block-heading">Code</h2>



<pre class="wp-block-code"><code>REPORT ztrcktrsr_class_inspector.

PARAMETERS p_clas TYPE seoclsname DEFAULT 'CL_GUI_CONTAINER'.


CLASS lcl_main DEFINITION.
  PUBLIC SECTION.

    TYPES: BEGIN OF _include,
             repid    TYPE syrepid,
             descr    TYPE c LENGTH 60,
             exposure TYPE icon_d,
           END OF _include,
           _includes TYPE STANDARD TABLE OF _include WITH EMPTY KEY.

    METHODS on_double_click
                FOR EVENT double_click OF cl_salv_events_table
      IMPORTING row column.
    METHODS constructor
      IMPORTING
        container_grid TYPE REF TO cl_gui_container
        container_code TYPE REF TO cl_gui_container.
    METHODS display.
    METHODS editor.
    METHODS start
      IMPORTING
        i_class TYPE clike.
  PROTECTED SECTION.
    DATA mt_redef     TYPE STANDARD TABLE OF seoredef.
    DATA container_grid    TYPE REF TO cl_gui_container.
    DATA container_code    TYPE REF TO cl_gui_container.
    DATA mo_editor    TYPE REF TO cl_gui_abapedit.
    DATA class_includes TYPE _includes.
    DATA grid TYPE REF TO cl_salv_table.
    DATA classname TYPE seoclsname.
    METHODS display_source IMPORTING include TYPE programm.

ENDCLASS.

CLASS lcl_main IMPLEMENTATION.

  METHOD constructor.
    me->container_grid = container_grid.
    me->container_code = container_code.

  ENDMETHOD.

  METHOD on_double_click.
    editor( ).
    DATA(source) = class_includes&#91; row ].

    display_source( source-repid ).

  ENDMETHOD.

  METHOD display_source.
    DATA lt_source TYPE STANDARD TABLE OF string.

    READ REPORT include INTO lt_source.
    mo_editor->set_text( lt_source ).

  ENDMETHOD.

  METHOD editor.

    CHECK container_code IS BOUND.
    CHECK mo_editor IS INITIAL.

    mo_editor = NEW #( parent = container_code ).
    mo_editor->set_readonly_mode( 1 ).

  ENDMETHOD.

  METHOD display.

    IF grid IS INITIAL.

      TRY.
          " create SALV
          CALL METHOD cl_salv_table=>factory
            EXPORTING
              r_container  = container_grid
            IMPORTING
              r_salv_table = grid
            CHANGING
              t_table      = class_includes.

          grid->get_functions( )->set_all( ).
          grid->get_display_settings( )->set_list_header( CONV #( classname ) ).

          DATA(columns) = grid->get_columns( ).
          CAST cl_salv_column_table( columns->get_column( 'EXPOSURE' ) )->set_icon( abap_true ).
          columns->get_column( 'DESCR' )->set_medium_text( 'Description' ).
          columns->get_column( 'EXPOSURE' )->set_medium_text( 'Exposure' ).

          " register event DOUBLE_CLICK
          SET HANDLER on_double_click FOR grid->get_event( ).

          grid->display( ).
        CATCH cx_salv_error INTO DATA(error).
          MESSAGE error TYPE 'I'.
      ENDTRY.
    ELSE.
      grid->refresh( ).
    ENDIF.


  ENDMETHOD.

  METHOD start.

    DATA textpool TYPE table_of_textpool.
    DATA description TYPE string.

    CHECK classname &lt;> i_class.
    classname = i_class.

    TRY.
        DATA(classinfo) = cl_oo_class=>get_instance( i_class ).
      CATCH cx_class_not_existent ##no_handler.
    ENDTRY.

    DATA(includes) = cl_oo_classname_service=>get_all_class_includes( class_name = i_class ).
    CLEAR class_includes.
    LOOP AT includes INTO DATA(include).
      READ TEXTPOOL include INTO textpool LANGUAGE sy-langu.

      IF include+30(1) = 'C'.

        IF include+30(2) = 'CM'.
          cl_oo_classname_service=>get_method_by_include(
            EXPORTING
              incname             = include
            RECEIVING
              mtdkey              = DATA(method)
            EXCEPTIONS
              class_not_existing  = 1
              method_not_existing = 2
              OTHERS              = 3  ).
          IF sy-subrc = 0.
            description = method-cpdname.
            TRY.
                DATA(methodexposure) = classinfo->get_component_exposure( cpdname = method-cpdname ).
              CATCH cx_component_not_existing ##no_handler.
            ENDTRY.
          ENDIF.
        ELSE.
          CASE include+30(5).
            WHEN 'CCDEF'.
              description = 'Local type definitions'.
            WHEN 'CCMAC'.
              description = 'Macros'.
            WHEN 'CCIMP'.
              description = 'Local class implementations'.
            WHEN 'CCAU'.
              description = 'Unit tests'.
            WHEN 'CU'.
              description = 'Class definition/ Public section'.
            WHEN 'CO'.
              description = 'Protected section'.
            WHEN 'CI'.
              description = 'Private Section'.
            WHEN 'CP'.
              description = 'Class pool'.
            WHEN 'CT'.
              description = ''.
            WHEN 'CL'.
              description = 'Local classes'.
            WHEN 'CS'.
              description = 'Complete source code'.

          ENDCASE.
        ENDIF.
      ENDIF.

      APPEND VALUE #(
        repid = include
        descr = description
        exposure = SWITCH #( methodexposure
          WHEN seoc_exposure_private THEN icon_led_red
          WHEN seoc_exposure_protected THEN icon_led_yellow
          WHEN seoc_exposure_public THEN icon_led_green )
          ) TO class_includes.
    ENDLOOP.
    display( ).

  ENDMETHOD.



ENDCLASS.

INITIALIZATION.
  DATA(docker) = NEW cl_gui_docking_container( side = cl_gui_docking_container=>dock_at_bottom ratio = 95 ).
  DATA(splitter) = NEW cl_gui_easy_splitter_container(
    parent      = docker
    orientation = cl_gui_easy_splitter_container=>orientation_horizontal ).

  DATA(container_grid) = splitter->top_left_container.
  DATA(container_code) = splitter->bottom_right_container.

  DATA(main) = NEW lcl_main(
    container_grid = container_grid
    container_code = container_code  ).


AT SELECTION-SCREEN.
  main->start( p_clas ).



START-OF-SELECTION.</code></pre>
<p>Der Beitrag <a href="/blog/class-inspector/">Class Inspector</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Übersetzung von Ausnahmeklassen</title>
		<link>/blog/uebersetzung-von-ausnahmeklassen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Tue, 23 Nov 2021 15:19:26 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Übersetzung]]></category>
		<category><![CDATA[Ausnahmeklasse]]></category>
		<category><![CDATA[exception class]]></category>
		<guid isPermaLink="false">/?p=1032481</guid>

					<description><![CDATA[<p>Ausnahmeklasse sind in vielerlei Hinsicht Ausnahme-Klassen. Es fängt mit der Generierung des CONSTRUCTORs an, geht über die unterschiedliche Behandlung in SE24 und Eclipse und endet bei der Übersetzung der Exception-ID&#8217;s der Ausnahmeklasse. Man könnte sich nun darüber streiten, ob die Ausnahme-ID&#8217;s der Ausnahmeklassen überhaupt übersetzt werden sollten oder ob sie eh nur technischen Charakter haben und nicht an die Oberfläche gelangen sollten. Das können wir allerdings an anderer Stelle tun. Ich bin der Meinung, dass...</p>
<p>Der Beitrag <a href="/blog/uebersetzung-von-ausnahmeklassen/">Übersetzung von Ausnahmeklassen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Ausnahmeklasse sind in vielerlei Hinsicht Ausnahme-Klassen. Es fängt mit der Generierung des CONSTRUCTORs an, geht über die unterschiedliche Behandlung in SE24 und Eclipse und endet bei der Übersetzung der Exception-ID&#8217;s der Ausnahmeklasse.</p>



<p>Man könnte sich nun darüber streiten, ob die Ausnahme-ID&#8217;s der Ausnahmeklassen überhaupt übersetzt werden sollten oder ob sie eh nur technischen Charakter haben und nicht an die Oberfläche gelangen sollten. Das können wir allerdings an anderer Stelle tun. Ich bin der Meinung, dass die Ausnahme-IDs&#8217;, die nicht mit einer SAP-Meldung erzeugt werden, regulär nutzbare Elemente sind. </p>



<h2 class="wp-block-heading" id="ausnahme-id-s">Ausnahme-ID&#8217;s</h2>



<p>Die Texte, bzw. Ausnahme-IDs von Ausnahmeklassen werden über einen sogenannten OTR-Text definiert. Für jeden <em>Text</em>, den du in der Ausnahmeklasse hinzufügst, wird eine Konstante vom Typ SOTR_CONC mit einer eindeutigen GUID angelegt. OTR steht für <em>Online Text Repository</em>. OTR-Texte können mit Transaktion SOTR_EDIT gepflegt werden. Allerdings können Sie auch aus dieser Transaktion heraus nicht übersetzt werden.</p>



<h2 class="wp-block-heading" id="regulare-ubersetzung">Reguläre Übersetzung</h2>



<p>In der Regel kann man ein Objekt in der SAPGUI &#8211; bis auf wenige Ausnahmen &#8211; über das Menü <em>Springen •</em> <em>Übersetzung</em> übersetzen. Ausnahmeklassen sind leider so eine Ausnahme.</p>



<h2 class="wp-block-heading" id="ubersetzung-von-ausnahme-ids">Übersetzung von Ausnahme-IDs</h2>



<p>Um eine Ausnahme-ID zu übersetzen, musst du wie folgt vorgehen:</p>



<ol><li>Finde heraus, wie die ID des OTR-Objektes lautet. In der SE24 findest du die ID im Reiter &#8220;Attribute&#8221;. Es sind alle Attribute vom Typ SOTR_CONC. In Eclipse findest du die generierten Attribute in der PUBLIC SECTION. Auch hier sind es die Konstanten vom Typ SOTR_CONC.</li><li>Kopiere die OTR-ID</li><li>Starte Transaktion SE63 und klicke die Drucktaste &#8220;Kurztexte&#8221; an</li><li>Suche nach OTR oder öffne den Ordner 00 Meta Objects.</li><li>Wähle &#8220;OTRS &#8211; OTR Kurztext Meta&#8221; aus.</li><li>Gib die kopierte GUID in das Feld GUID ein. Achte darauf, dass Quell- und Zielsprache korrekt eingestellt sind.</li><li>Klicke auf die Drucktaste &#8220;Bearbeiten&#8221;</li></ol>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="532" height="577" src="/wp-content/uploads/2021/11/image.png" alt="" class="wp-image-1032497" srcset="/wp-content/uploads/2021/11/image.png 532w, /wp-content/uploads/2021/11/image-277x300.png 277w" sizes="(max-width: 532px) 100vw, 532px" /><figcaption>Auswahl Objekttyp OTRS</figcaption></figure>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="612" height="285" src="/wp-content/uploads/2021/11/image-1.png" alt="" class="wp-image-1032498" srcset="/wp-content/uploads/2021/11/image-1.png 612w, /wp-content/uploads/2021/11/image-1-300x140.png 300w" sizes="(max-width: 612px) 100vw, 612px" /><figcaption>OTR bearbeiten</figcaption></figure>



<p>Du befindest dich nun im bekannten Dynpro zum Übersetzen der Texte. Leider müssen die Ausnahme-ID&#8217;s einzeln kopiert und bearbeitet werden. Es gibt meines Wissens nach keine Sammelfunktion zum Bearbeiten so wie bei den <a href="/blog/uebersetzung-einer-nachrichtenklasse/">Nachrichtenklassen</a>.</p>
<p>Der Beitrag <a href="/blog/uebersetzung-von-ausnahmeklassen/">Übersetzung von Ausnahmeklassen</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Warum ich meinen Spreadshirt-Shop gelöscht habe</title>
		<link>/blog/warum-ich-meinen-spreadshirt-shop-geloescht-habe/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 25 Oct 2021 17:36:10 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[werbung]]></category>
		<category><![CDATA[Design]]></category>
		<category><![CDATA[t-shirt]]></category>
		<guid isPermaLink="false">/?p=1031921</guid>

					<description><![CDATA[<p>Bis eben hatte ich einen Spreadshirt-Shop. Das heißt, ich hatte ein paar Designs kreiert und bei Spreadshirt hochgeladen. Meinen Account dort habe ich nun aus folgenden Gründen gelöscht: Der Verkauf hielt sich sehr in Grenzen. Die drölf Euro zwanzig, die ich pro Quartal ausgezahlt bekomme, kosten mich in der Verwaltung (EÜR [Einkommenüberschussrechnung]) und Versteuerung (Einkommensteuererklärung) mehr Nerven und Abzüge, als ich damit verdiene. Trotz vieler Designs, die ich natürlich toll finde, verkaufte ich im Grunde...</p>
<p>Der Beitrag <a href="/blog/warum-ich-meinen-spreadshirt-shop-geloescht-habe/">Warum ich meinen Spreadshirt-Shop gelöscht habe</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Bis eben hatte ich einen Spreadshirt-Shop. Das heißt, ich hatte ein paar Designs kreiert und bei Spreadshirt hochgeladen. Meinen Account dort habe ich nun aus folgenden Gründen gelöscht:</p>



<ul><li>Der Verkauf hielt sich sehr in Grenzen. </li><li>Die drölf Euro zwanzig, die ich pro Quartal ausgezahlt bekomme, kosten mich in der Verwaltung (EÜR [Einkommenüberschussrechnung]) und Versteuerung (Einkommensteuererklärung) mehr Nerven und Abzüge, als ich damit verdiene.</li><li>Trotz vieler Designs, die ich natürlich toll finde, verkaufte ich im Grunde nur den &#8220;ABAP Magician&#8221;</li><li>Ich wollte euch die Designs grundsätzlich noch verfügbar machen und nur meine Verkaufsprovision auf Null Euro herabsetzen. Das ist jedoch seit einiger Zeit nicht mehr möglich, denn inzwischen gibt es eine von Spreadshirt fest vergebene Provision für verkaufte Designs</li><li>Das WordPress-Plugin von Spreadshirt hat sich des Öfteren nach Aktualisierungen oder Design-Anpassungen im Admin-Panel in den Vordergrund gedrängt. Das war nicht schlimm, aber ich fand es sehr nervig.</li><li>Ein eigentlich ganz cooles Design wurde von Spreadshirt nicht genehmigt, da sie markenrechtliche Bedenken hatten.</li></ul>



<h2 class="wp-block-heading" id="was-passiert-nun">Was passiert nun?</h2>



<p>Ja, nix weiter. Der Shop ist zu und auch, wenn es mir Spaß gemacht hat, die Designs zu entwerfen, ist mir durchaus klar, dass der Tricktresor nicht Harley Davidson ist und man nicht mit einem Trickresor-Logo auf der Brust durch die Gegend laufen möchte&#8230; <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f603.png" alt="😃" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>



<h2 class="wp-block-heading" id="design-ideen">Design-Ideen</h2>



<p>Falls ihr das eine oder andere Design gut findet, stelle ich euch die Dateien hier zur Verfügung. Ihr dürft diese Designs für den Privatgebrauch nutzen, um euch, euren Freund:innen oder Kolleg:innen ein lustiges Geschenk zu machen.</p>



<figure class="wp-block-gallery columns-2 is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex"><ul class="blocks-gallery-grid"><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/10/front-tricktresor-support-TShirt-300x202.png"><img loading="lazy" decoding="async" width="300" height="202" src="/wp-content/uploads/2021/10/front-tricktresor-support-TShirt-300x202.png" alt="" data-id="1031925" data-link="/?attachment_id=1031925" class="wp-image-1031925" srcset="/wp-content/uploads/2021/10/front-tricktresor-support-TShirt-300x202.png 300w, /wp-content/uploads/2021/10/front-tricktresor-support-TShirt-1024x691.png 1024w, /wp-content/uploads/2021/10/front-tricktresor-support-TShirt-768x518.png 768w, /wp-content/uploads/2021/10/front-tricktresor-support-TShirt-1536x1036.png 1536w, /wp-content/uploads/2021/10/front-tricktresor-support-TShirt-2048x1381.png 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/10/Shut-Up-And-Code-With-Me-300x260.png"><img loading="lazy" decoding="async" width="300" height="260" src="/wp-content/uploads/2021/10/Shut-Up-And-Code-With-Me-300x260.png" alt="" data-id="1031926" data-link="/?attachment_id=1031926" class="wp-image-1031926" srcset="/wp-content/uploads/2021/10/Shut-Up-And-Code-With-Me-300x260.png 300w, /wp-content/uploads/2021/10/Shut-Up-And-Code-With-Me-1024x888.png 1024w, /wp-content/uploads/2021/10/Shut-Up-And-Code-With-Me-768x666.png 768w, /wp-content/uploads/2021/10/Shut-Up-And-Code-With-Me-1536x1333.png 1536w, /wp-content/uploads/2021/10/Shut-Up-And-Code-With-Me-2048x1777.png 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/10/ABAP-MAGICIAN-2-WHITE-300x283.png"><img loading="lazy" decoding="async" width="300" height="283" src="/wp-content/uploads/2021/10/ABAP-MAGICIAN-2-WHITE-300x283.png" alt="" data-id="1031927" data-link="/?attachment_id=1031927" class="wp-image-1031927" srcset="/wp-content/uploads/2021/10/ABAP-MAGICIAN-2-WHITE-300x283.png 300w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-2-WHITE-1024x965.png 1024w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-2-WHITE-768x724.png 768w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-2-WHITE-1536x1448.png 1536w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-2-WHITE-2048x1931.png 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/10/ABAP-MAGICIAN-2-300x283.png"><img loading="lazy" decoding="async" width="300" height="283" src="/wp-content/uploads/2021/10/ABAP-MAGICIAN-2-300x283.png" alt="" data-id="1031928" data-link="/?attachment_id=1031928" class="wp-image-1031928" srcset="/wp-content/uploads/2021/10/ABAP-MAGICIAN-2-300x283.png 300w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-2-1024x965.png 1024w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-2-768x724.png 768w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-2-1536x1448.png 1536w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-2-2048x1931.png 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/10/ABAP-MAGICIAN-300x196.png"><img loading="lazy" decoding="async" width="300" height="196" src="/wp-content/uploads/2021/10/ABAP-MAGICIAN-300x196.png" alt="" data-id="1031929" data-link="/?attachment_id=1031929" class="wp-image-1031929" srcset="/wp-content/uploads/2021/10/ABAP-MAGICIAN-300x196.png 300w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-1024x669.png 1024w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-768x502.png 768w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-1536x1003.png 1536w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-2048x1338.png 2048w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-818x537.png 818w, /wp-content/uploads/2021/10/ABAP-MAGICIAN-95x62.png 95w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/10/Ob-die-Doku-fertig-ist-300x183.png"><img loading="lazy" decoding="async" width="300" height="183" src="/wp-content/uploads/2021/10/Ob-die-Doku-fertig-ist-300x183.png" alt="" data-id="1031931" data-link="/?attachment_id=1031931" class="wp-image-1031931" srcset="/wp-content/uploads/2021/10/Ob-die-Doku-fertig-ist-300x183.png 300w, /wp-content/uploads/2021/10/Ob-die-Doku-fertig-ist-1024x625.png 1024w, /wp-content/uploads/2021/10/Ob-die-Doku-fertig-ist-768x469.png 768w, /wp-content/uploads/2021/10/Ob-die-Doku-fertig-ist-1536x937.png 1536w, /wp-content/uploads/2021/10/Ob-die-Doku-fertig-ist-2048x1250.png 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/10/select-from-bar-300x181.png"><img loading="lazy" decoding="async" width="300" height="181" src="/wp-content/uploads/2021/10/select-from-bar-300x181.png" alt="" data-id="1031932" data-link="/?attachment_id=1031932" class="wp-image-1031932" srcset="/wp-content/uploads/2021/10/select-from-bar-300x181.png 300w, /wp-content/uploads/2021/10/select-from-bar-1024x618.png 1024w, /wp-content/uploads/2021/10/select-from-bar-768x463.png 768w, /wp-content/uploads/2021/10/select-from-bar-1536x927.png 1536w, /wp-content/uploads/2021/10/select-from-bar-2048x1236.png 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/10/Tricktresor-for-better-coding-2019-294x300.png"><img loading="lazy" decoding="async" width="294" height="300" src="/wp-content/uploads/2021/10/Tricktresor-for-better-coding-2019-294x300.png" alt="" data-id="1031934" data-link="/?attachment_id=1031934" class="wp-image-1031934" srcset="/wp-content/uploads/2021/10/Tricktresor-for-better-coding-2019-294x300.png 294w, /wp-content/uploads/2021/10/Tricktresor-for-better-coding-2019-1003x1024.png 1003w, /wp-content/uploads/2021/10/Tricktresor-for-better-coding-2019-768x784.png 768w, /wp-content/uploads/2021/10/Tricktresor-for-better-coding-2019-1504x1536.png 1504w, /wp-content/uploads/2021/10/Tricktresor-for-better-coding-2019-2005x2048.png 2005w" sizes="(max-width: 294px) 100vw, 294px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/10/Tricktresor-logos-copy-paste-champion-2019-268x300.png"><img loading="lazy" decoding="async" width="268" height="300" src="/wp-content/uploads/2021/10/Tricktresor-logos-copy-paste-champion-2019-268x300.png" alt="" data-id="1031936" data-link="/?attachment_id=1031936" class="wp-image-1031936" srcset="/wp-content/uploads/2021/10/Tricktresor-logos-copy-paste-champion-2019-268x300.png 268w, /wp-content/uploads/2021/10/Tricktresor-logos-copy-paste-champion-2019-914x1024.png 914w, /wp-content/uploads/2021/10/Tricktresor-logos-copy-paste-champion-2019-768x860.png 768w, /wp-content/uploads/2021/10/Tricktresor-logos-copy-paste-champion-2019.png 1000w" sizes="(max-width: 268px) 100vw, 268px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/12/AB-AP-white-300x111.png"><img loading="lazy" decoding="async" width="300" height="111" src="/wp-content/uploads/2021/12/AB-AP-white-300x111.png" alt="" data-id="1032857" data-link="/blog/warum-ich-meinen-spreadshirt-shop-geloescht-habe/ab-ap-white-2/" class="wp-image-1032857" srcset="/wp-content/uploads/2021/12/AB-AP-white-300x111.png 300w, /wp-content/uploads/2021/12/AB-AP-white-1024x379.png 1024w, /wp-content/uploads/2021/12/AB-AP-white-768x285.png 768w, /wp-content/uploads/2021/12/AB-AP-white-1536x569.png 1536w, /wp-content/uploads/2021/12/AB-AP-white-2048x759.png 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure></li><li class="blocks-gallery-item"><figure><a href="/wp-content/uploads/2021/12/AB-AP-1.png"><img loading="lazy" decoding="async" width="300" height="106" src="/wp-content/uploads/2021/12/AB-AP-1-300x106.png" alt="" data-id="1032861" data-full-url="/wp-content/uploads/2021/12/AB-AP-1.png" data-link="/blog/warum-ich-meinen-spreadshirt-shop-geloescht-habe/ab-ap-1/" class="wp-image-1032861" srcset="/wp-content/uploads/2021/12/AB-AP-1-300x106.png 300w, /wp-content/uploads/2021/12/AB-AP-1-1024x361.png 1024w, /wp-content/uploads/2021/12/AB-AP-1-768x271.png 768w, /wp-content/uploads/2021/12/AB-AP-1-1536x541.png 1536w, /wp-content/uploads/2021/12/AB-AP-1-2048x722.png 2048w" sizes="(max-width: 300px) 100vw, 300px" /></a></figure></li></ul><figcaption class="blocks-gallery-caption">Designs Tricktresor/ ABAP</figcaption></figure>
<p>Der Beitrag <a href="/blog/warum-ich-meinen-spreadshirt-shop-geloescht-habe/">Warum ich meinen Spreadshirt-Shop gelöscht habe</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Aufmerksamkeit erlangen &#8211; SAPGUI Modus in den Vordergrund</title>
		<link>/blog/aufmerksamkeit-erlangen/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 10 Jun 2021 11:01:27 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Reports]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[SAPGUI]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[Modus]]></category>
		<guid isPermaLink="false">/?p=1029150</guid>

					<description><![CDATA[<p>Obwohl der SAPGUI bereits als &#8220;tot&#8221; eingestuft wird, finden sich immer wieder neue Erkenntnisse&#8230; In diesem Beitrag zeige ich dir, wie du einen SAPGUI-Modus in den Vordergrund bringen kannst, um die Aufmerksamkeit des Anwenders zurückzuerlangen. Solange der Anwender nur SAPGUI-Modi anzeigt, wird der gewünschte SAPGUI-Modus in den Vordergrund kommen und die anderen Fenster überlagern. Sollte noch ein anderes Programm (Browser, Outlook, Excel etc.), dann wird der Wunsch nach Aufmerksamkeit durch ein Blinken des SAPGUI-Icons in...</p>
<p>Der Beitrag <a href="/blog/aufmerksamkeit-erlangen/">Aufmerksamkeit erlangen &#8211; SAPGUI Modus in den Vordergrund</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Obwohl der SAPGUI bereits als &#8220;tot&#8221; eingestuft wird, finden sich immer wieder neue Erkenntnisse&#8230; In diesem Beitrag zeige ich dir, wie du einen SAPGUI-Modus in den Vordergrund bringen kannst, um die Aufmerksamkeit des Anwenders zurückzuerlangen. </p>



<p>Solange der Anwender nur SAPGUI-Modi anzeigt, wird der gewünschte SAPGUI-Modus in den Vordergrund kommen und die anderen Fenster überlagern. Sollte noch ein anderes Programm (Browser, Outlook, Excel etc.), dann wird der Wunsch nach Aufmerksamkeit durch ein Blinken des SAPGUI-Icons in der Taskleiste angezeigt.</p>



<p>Das folgende Programm kannst du in zwei verschiedenen Modi starten um den Effekt zu sehen. Die beiden Modi sollten möglichst übereinander (nicht nebeneinander) liegen, um den Effekt erkennen zu können.</p>



<h2 class="wp-block-heading">Coding</h2>



<pre class="wp-block-code"><code>REPORT zz_activate_gui_mode.

*--------------------------------------------------------------------*
* Programm in 2 verschiedenen Modi aufrufen und etwa 1 Sekunde versetzt starten!
*--------------------------------------------------------------------*

DO 10 TIMES.
  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      text = |Modus: { sy-modno }  Index: { sy-index }|.

  CALL FUNCTION 'SAPGUI_SET_PROPERTY'
    DESTINATION 'SAPGUI'
    EXPORTING
      property = 'ACTIVATE'
      value    = 'X'
    EXCEPTIONS
      OTHERS   = 0.

  WAIT UP TO 3 SECONDS.
ENDDO.</code></pre>
<p>Der Beitrag <a href="/blog/aufmerksamkeit-erlangen/">Aufmerksamkeit erlangen &#8211; SAPGUI Modus in den Vordergrund</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>ALV-Grid aus SALV ermitteln</title>
		<link>/blog/alv-grid-aus-salv-ermitteln/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 09 Jun 2021 14:56:09 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[cl_gui_alv_grid]]></category>
		<category><![CDATA[salv]]></category>
		<category><![CDATA[ALV]]></category>
		<category><![CDATA[cl_salv_table]]></category>
		<guid isPermaLink="false">/?p=1029100</guid>

					<description><![CDATA[<p>Die Klasse CL_SALV_TABLE erfreut sich seit Jahren großer Beliebtheit. In erster Linie wahrscheinlich deswegen, weil man ohne Ermittlung des Feldkatalogs oder Vorgabe der zugrunde liegenden Datenstruktur eine Tabelle als Grid anzeigen kann. Das SALV verwendet intern jedoch immer noch die Klasse CL_GUI_ALV_GRID. Und es kann durchaus sein, dass man, nachdem man etwas mit dem SALV programmiert hat, an dieses Objekt herankommen möchte. Achtung! Änderungen in System ab Release 7.55 Wie das geht, zeige ich dir...</p>
<p>Der Beitrag <a href="/blog/alv-grid-aus-salv-ermitteln/">ALV-Grid aus SALV ermitteln</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Die Klasse CL_SALV_TABLE erfreut sich seit Jahren großer Beliebtheit. In erster Linie wahrscheinlich deswegen, weil man ohne Ermittlung des Feldkatalogs oder Vorgabe der zugrunde liegenden Datenstruktur eine Tabelle als Grid anzeigen kann. Das SALV verwendet intern jedoch immer noch die Klasse CL_GUI_ALV_GRID. Und es kann durchaus sein, dass man, nachdem man etwas mit dem SALV programmiert hat, an dieses Objekt herankommen möchte.</p>



<div class="wp-block-group alignfull has-background ext-my-0 ext-py-lg editor:no-inserter" style="background-color:#1966c2"><div class="wp-block-group__inner-container is-layout-constrained wp-block-group-is-layout-constrained">
<div class="wp-block-columns alignwide are-vertically-aligned-center is-layout-flex wp-container-core-columns-is-layout-1 wp-block-columns-is-layout-flex">
<div class="wp-block-column is-vertically-aligned-center is-layout-flow wp-block-column-is-layout-flow" style="flex-basis:100%">
<h2 class="has-white-color has-text-color has-large-font-size ext-mt-0 wp-block-heading" id="new-755" style="font-style:normal;font-weight:400;line-height:1.1">Achtung! Änderungen in System ab Release 7.55</h2>



<div class="wp-block-buttons is-layout-flex wp-block-buttons-is-layout-flex">
<div class="wp-block-button has-custom-font-size is-style-fill has-medium-font-size"><a class="wp-block-button__link has-white-color has-text-color has-background" href="/blog/alv-grid-aus-salv-ermitteln-ab-release-7-55/" style="background-color:#ff5900" rel="">Hier geht&#8217;s zum neuen Beitrag</a></div>
</div>
</div>
</div>
</div></div>



<p>Wie das geht, zeige ich dir mit der folgenden Klasse.</p>



<h2 class="wp-block-heading">Coding</h2>



<pre class="wp-block-code"><code>CLASS lcl_access_salv DEFINITION INHERITING FROM cl_salv_model_list FINAL.
  PUBLIC SECTION.
    CLASS-METHODS:
      get_cl_gui_alv_grid IMPORTING io_salv        TYPE REF TO cl_salv_model_list
                          RETURNING VALUE(ro_grid) TYPE REF TO cl_gui_alv_grid.
ENDCLASS.

CLASS lcl_access_salv IMPLEMENTATION.
  METHOD get_cl_gui_alv_grid.
    DATA:lo_salv    TYPE REF TO cl_salv_table.
*--------------------------------------------------------------------*
* Must be bound
*--------------------------------------------------------------------*
    IF io_salv IS NOT BOUND.
      RETURN.
    ENDIF.
*--------------------------------------------------------------------*
* Adapter must be bound
*--------------------------------------------------------------------*
    IF   io_salv-&gt;r_controller IS NOT BOUND
      OR io_salv-&gt;r_controller-&gt;r_adapter IS NOT BOUND.
      MESSAGE 'Minor programming fault: Call GET_GRID_FROM_SALV after SALV-&gt;DISPLAY( )!'(001) 
         TYPE 'S' DISPLAY LIKE 'W'.
      lo_salv ?= io_salv.  " Calling method has cl_salv_table typed in interface
      lo_salv-&gt;display( ).
    ENDIF.
    IF   io_salv-&gt;r_controller IS NOT BOUND
      OR io_salv-&gt;r_controller-&gt;r_adapter IS NOT BOUND.
      RETURN.  " Still not bound  --&gt; can't do anything
    ENDIF.
*--------------------------------------------------------------------*
* If method not present or wrong return type exception will handle this and we return unbound grid
*--------------------------------------------------------------------*
    TRY.

        " Works for CL_SALV_FULLSCREEN_ADAPTER as well as for CL_SALV_GRID_ADAPTER
        CALL METHOD io_salv-&gt;r_controller-&gt;r_adapter-&gt;('GET_GRID')  
          RECEIVING
            value = ro_grid.
      CATCH cx_root ##CATCH_ALL. " don't dump
        RETURN.
    ENDTRY.
  ENDMETHOD.
ENDCLASS.</code></pre>
<p>Der Beitrag <a href="/blog/alv-grid-aus-salv-ermitteln/">ALV-Grid aus SALV ermitteln</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Negativ oder Positiv?</title>
		<link>/blog/negativ-oder-positiv/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 29 Apr 2021 16:38:27 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[ALV-Grid]]></category>
		<guid isPermaLink="false">/?p=1027899</guid>

					<description><![CDATA[<p>Eine Frage, die Thomas Binder aus Berlin nicht nur bezüglich seines Immunsystems beschäftigt hat, sondern auch bei der Ausgabe von Daten im ALV-Grid. Er ist dabei über eine böse Falle bei den Darstellungsmöglichkeiten des ALV-Grid gestolpert, die sich einerseits logisch erklären lässt, anderseits jedoch Fragen aufwirft, warum dieser Grund im ALV-Grid nicht einheitlich behandelt wird. Darstellung von Zahlen Thomas hatte einen stinknormalen ALV-Grid programmiert, in dem positive als auch negative Zahlen angezeigt wurden. Alles hat...</p>
<p>Der Beitrag <a href="/blog/negativ-oder-positiv/">Negativ oder Positiv?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Eine Frage, die Thomas Binder aus Berlin nicht nur bezüglich seines Immunsystems beschäftigt hat, sondern auch bei der Ausgabe von Daten im ALV-Grid. Er ist dabei über eine böse Falle bei den Darstellungsmöglichkeiten des ALV-Grid gestolpert, die sich einerseits logisch erklären lässt, anderseits jedoch Fragen aufwirft, warum dieser Grund im ALV-Grid nicht einheitlich behandelt wird.</p>



<h2 class="wp-block-heading">Darstellung von Zahlen</h2>



<p>Thomas hatte einen <em>stinknormalen </em>ALV-Grid programmiert, in dem positive als auch negative Zahlen angezeigt wurden. Alles hat super funktioniert. Das Grid war sicherlich nicht so simpel wie in folgendem Beispiel, aber es illustriert gut, worum es geht:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="196" height="76" src="/wp-content/uploads/2021/04/SNAG-01551.png" alt="" class="wp-image-1027905" srcset="/wp-content/uploads/2021/04/SNAG-01551.png 196w, /wp-content/uploads/2021/04/SNAG-01551-193x76.png 193w" sizes="(max-width: 196px) 100vw, 196px" /><figcaption>ALV-Grid mit positiven und negativen Zahlen</figcaption></figure>



<p>Nach einiger Zeit hat er aus der Fachabteilung die Rückmeldung bekommen, dass die Zahlen nicht stimmen würden. Er testete das zur Verfügung gestellte Beispiel und konnte keinen Fehler feststellen. Die Fachabteilung hat ihm dann einen Ausdruck zur gegeben, auf dem folgendes zu sehen war:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="197" height="97" src="/wp-content/uploads/2021/04/SNAG-01552.png" alt="" class="wp-image-1027906"/><figcaption>ALV Listausgabe</figcaption></figure>



<p>Der Report wurde im Hintergrund ausgeführt und das dargestellte Grid dementsprechend als ALV-Liste ausgegeben. Wie eindeutig zu sehen ist, ist der Wert TWO, der im Grid negativ ist, in der Listausgabe auf einmal positiv.</p>



<h2 class="wp-block-heading">Ursache</h2>



<p>Die Ursache für den Fehler war einigermaßen schnell gefunden: Das verwendete Datenelement BWERT ist mit der Domäne WERT7 definiert. In der Domäne ist festgelegt, dass der Typ keine Vorzeichen hat:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="571" height="401" src="/wp-content/uploads/2021/04/SNAG-01553.png" alt="" class="wp-image-1027908" srcset="/wp-content/uploads/2021/04/SNAG-01553.png 571w, /wp-content/uploads/2021/04/SNAG-01553-300x211.png 300w, /wp-content/uploads/2021/04/SNAG-01553-200x140.png 200w" sizes="(max-width: 571px) 100vw, 571px" /><figcaption>Domäne WERT7</figcaption></figure>



<p>Auch wenn die Ursache eindeutig ist und mit der Verwendung eines anderen Datenelementes das Problem gelöst werden konnte, ergibt sich nicht, warum der ALV-Grid die Werte unterschiedlich ausgibt. </p>



<p>Jedenfalls zeigt dieses Beispiel sehr gut, wie perfide der Fehlerteufel sich manchmal verstecken kann und erinnert ein wenig an den sehr sehenswert Vortrag <a class="keychainify-checked" href="https://www.dkriesel.com/blog/2013/0802_xerox-workcentres_are_switching_written_numbers_when_scanning">Traue keinem Scan, den du nicht selbst gefälscht</a> hast von <a class="keychainify-checked" href="https://www.dkriesel.com/start">David Kriesel</a>.</p>



<p>Also: Bleibt gesund und seid vorsichtig!</p>
<p>Der Beitrag <a href="/blog/negativ-oder-positiv/">Negativ oder Positiv?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Hat eine Klasse Unit Tests?</title>
		<link>/blog/hat-eine-klasse-unit-tests/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 29 Apr 2021 14:54:35 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[ABAP OO]]></category>
		<category><![CDATA[unit tests]]></category>
		<guid isPermaLink="false">/?p=1027874</guid>

					<description><![CDATA[<p>Für interne Audits oder Auswertungen oder auch einfach aus Interesse könnte man prüfen wollen, ob eine Klasse Unit Tests enthält oder nicht. Folgendes kleine Programm gibt alle lokalen Testklassen und die dazugehörigen Unit Tests in einer Liste aus. Coding Ausgabe Für die Klasse CL_AUNIT_PROG_INFO wird die folgende Liste erzeugt, die Auskunft über die enthaltenen Unit Tests gibt:</p>
<p>Der Beitrag <a href="/blog/hat-eine-klasse-unit-tests/">Hat eine Klasse Unit Tests?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Für interne Audits oder Auswertungen oder auch einfach aus Interesse könnte man prüfen wollen, ob eine Klasse Unit Tests enthält oder nicht.</p>



<p>Folgendes kleine Programm gibt alle lokalen Testklassen und die dazugehörigen Unit Tests in einer Liste aus.</p>



<h2 class="wp-block-heading">Coding</h2>



<pre class="wp-block-code"><code>PARAMETERS p_clsnam TYPE seoclsname DEFAULT 'CL_AUNIT_PROG_INFO'.


START-OF-SELECTION.

  DATA(hlp) = NEW cl_aunit_factory( ).
  DATA(res) = hlp->get_test_class_handles(
    EXPORTING
      obj_type = 'CLAS'
      obj_name = CONV #( p_clsnam ) ).

  LOOP AT res INTO DATA(cls).
    WRITE: / cls->get_class_name( ) COLOR COL_GROUP.
    LOOP AT cls->get_test_methods( ) INTO DATA(tmt).
      WRITE: /3 tmt.
    ENDLOOP.
  ENDLOOP.</code></pre>



<h2 class="wp-block-heading">Ausgabe</h2>



<p>Für die Klasse CL_AUNIT_PROG_INFO wird die folgende Liste erzeugt, die Auskunft über die enthaltenen Unit Tests gibt:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="223" height="190" src="/wp-content/uploads/2021/04/SNAG-01547.png" alt="" class="wp-image-1027881" srcset="/wp-content/uploads/2021/04/SNAG-01547.png 223w, /wp-content/uploads/2021/04/SNAG-01547-100x85.png 100w" sizes="(max-width: 223px) 100vw, 223px" /><figcaption>Lokale Testklassen und deren Unit Tests</figcaption></figure>
<p>Der Beitrag <a href="/blog/hat-eine-klasse-unit-tests/">Hat eine Klasse Unit Tests?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Dynamische Vorschlagssuche</title>
		<link>/blog/dynamische-vorschlagssuche/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 26 Apr 2021 11:58:25 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Suchhilfen]]></category>
		<category><![CDATA[suchhilfe-exit]]></category>
		<guid isPermaLink="false">/?p=1027653</guid>

					<description><![CDATA[<p>Seit SAP Release 7.40 gibt es in der F4-Suchhilfe die erweiterte Option &#8220;Vorschlagssuche auf Eingabefeldern&#8221;. Im englischen wird es auch type-ahead oder proposal search genannt. Sie zeigt dem Anwender sofort nach Eingabe eines Zeichens in das Eingabefeld mögliche Treffer an. Je nach Datenbank kann in der Suchhilfe auch die Spaltenübergreifende Volltextsuche (fuzzy search) aktiviert werden. Die Vorschlagssuche wird in den gängigsten SAP-Transaktionen verwendet. Einstellung im SAPGUI Man kann die Vorschlagssuche in den SAPGUI-Optionen abschalten, denn...</p>
<p>Der Beitrag <a href="/blog/dynamische-vorschlagssuche/">Dynamische Vorschlagssuche</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Seit SAP Release 7.40 gibt es in der F4-Suchhilfe die erweiterte Option &#8220;Vorschlagssuche auf Eingabefeldern&#8221;. Im englischen wird es auch <em>type-ahead</em> oder <em>proposal search</em> genannt. Sie zeigt dem Anwender sofort nach Eingabe eines Zeichens in das Eingabefeld mögliche Treffer an. Je nach Datenbank kann in der Suchhilfe auch die Spaltenübergreifende Volltextsuche (fuzzy search) aktiviert werden. </p>



<p>Die Vorschlagssuche wird in den gängigsten SAP-Transaktionen verwendet.</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="590" height="439" src="/wp-content/uploads/2021/04/SNAG-01509.png" alt="" class="wp-image-1027655" srcset="/wp-content/uploads/2021/04/SNAG-01509.png 590w, /wp-content/uploads/2021/04/SNAG-01509-300x223.png 300w" sizes="(max-width: 590px) 100vw, 590px" /><figcaption>Vorschlagssuche in Transaktion SE24</figcaption></figure>



<h2 class="wp-block-heading">Einstellung im SAPGUI</h2>



<p>Man kann die Vorschlagssuche in den SAPGUI-Optionen abschalten, denn die Verwendung ist manchmal problematisch. So wird die Ergebnismenge zu langsam eingeblendet oder das eingegebene Wort kommt als auch die Suche kommen durcheinander, wenn man das Wort zu schnell editiert.</p>



<p>Folgende Einstellung im SAPGUI steuert die Verwendung der Vorschlagssuche:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="795" height="550" src="/wp-content/uploads/2021/04/SNAG-01510.png" alt="" class="wp-image-1027654" srcset="/wp-content/uploads/2021/04/SNAG-01510.png 795w, /wp-content/uploads/2021/04/SNAG-01510-300x208.png 300w, /wp-content/uploads/2021/04/SNAG-01510-768x531.png 768w" sizes="(max-width: 795px) 100vw, 795px" /><figcaption>Aktivierte Vorschlagssuche im SAPGUI</figcaption></figure>



<h2 class="wp-block-heading">Eigene Vorschlagsliste </h2>



<p>In der Regel basieren die Einträge auf der der Suchhilfe zu Grunde liegenden Selektionsmethode. Ich zeige dir eine Methode, wie du die Vorschlagssuche für eine dynamisch zusammengestellte Liste. In meinem Beispiel habe ich die 30 größten deutschen Städte sowie deren Bundesländer ermittelt. Aus diesen Städten soll sich der Anwender eine Stadt auswählen:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="564" height="173" src="/wp-content/uploads/2021/04/SNAG-01511.png" alt="" class="wp-image-1027656" srcset="/wp-content/uploads/2021/04/SNAG-01511.png 564w, /wp-content/uploads/2021/04/SNAG-01511-300x92.png 300w" sizes="(max-width: 564px) 100vw, 564px" /><figcaption>Einfaches Eingabefeld</figcaption></figure>



<p>Was musst du tun, um die dynamische Vorschlagssuche zu realisieren? du benötigst im Grunde nur einen Suchhilfe-Exit, der die folgenden Dinge tut:</p>



<ul><li>Ermittlung der gültigen Werte</li><li>Einschränkung der Werte</li><li>Zurückstellen der in Frage kommenden Werte in die Trefferliste</li></ul>



<p>Die Frage ist natürlich, wie kommen die in Frage kommenden Werte in die Suchhilfe? Der mir einfachste Weg ist der Austausch über das SAP-Memory. Die Daten werden vom Programm per EXPORT TO MEMORY in den Speicher geschrieben und von der Suchhilfe mit IMPORT FROM MEMORY wieder ausgelesen.</p>



<h2 class="wp-block-heading">Suchhilfe-Exit</h2>



<p>Ein Suchhilfe-Exit greift bei den verschiedenen Aktionen der Suchhilfe-Verarbeitung ein. Lege eine neue Funktionsgruppe an und kopiere den Baustein F4IF_SHLP_EXIT_EXAMPLE auf einen Namen deiner Wahl. Ich habe den Baustein Z_SHLP_EXIT_DYNAMIC genannt.</p>



<p>Bei der Ausführung der F4-Wertsuchhilfe werden mehrere Verarbeitungsschritte durchlaufen. Der Funktionsbaustein wird bei jedem dieser Schritte aufgerufen. Was im jeweiligen Schritt getan werden muss, muss über den Eingabeparameter CALLCONTROL-STEP gesteuert werden.</p>



<p>Der Verarbeitungsschritt, der wohl am häufigsten verwendet wird, ist &#8220;SELECT&#8221;. Auch wir nutzen diesen Schritt, um die Werteliste zu ermitteln und zur Verfügung zu stellen.</p>



<h3 class="wp-block-heading">Funktionsbaustein Z_SHLP_EXIT_DYNAMIC</h3>



<p>Im folgenden Coding importiere ich die Werteliste, die vom Programm per SAP-Memory übergeben wurden. Danach lese ich den Wert, den der Anwender bereits eingegeben hat und prüfe damit die einzelnen Einträge. Die Werte, die nicht passen, lösche ich aus der Tabelle.</p>



<p>Die am Ende verbleibenden Werte werden Spaltenweise mit dem Funktionsbaustein F4UT_PARAMETER_RESULTS_PUT an die Ergebnistabelle übertragen.</p>



<pre class="wp-block-code"><code>FUNCTION Z_SHLP_EXIT_DYNAMIC .
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  TABLES
*"      SHLP_TAB TYPE  SHLP_DESCT
*"      RECORD_TAB STRUCTURE  SEAHLPRES
*"  CHANGING
*"     REFERENCE(SHLP) TYPE  SHLP_DESCR
*"     REFERENCE(CALLCONTROL) LIKE  DDSHF4CTRL STRUCTURE  DDSHF4CTRL
*"----------------------------------------------------------------------

  TYPES: BEGIN OF ts_value,
           line TYPE text40,
           text TYPE text40,
         END OF ts_value.
  DATA values TYPE STANDARD TABLE OF ts_value WITH EMPTY KEY.


  IF callcontrol-step = 'SELECT'.

    IMPORT values TO values FROM MEMORY ID 'Trcktrsr'.

    DATA(selval) = to_upper( shlp-interface&#91; shlpfield = 'VALUE' ]-value ).


    LOOP AT values ASSIGNING FIELD-SYMBOL(&lt;val>).
      DATA(val) = to_upper( &lt;val>-line ).
      IF NOT val CP selval.
        DELETE values INDEX sy-tabix.
      ENDIF.
    ENDLOOP.

    CALL FUNCTION 'F4UT_PARAMETER_RESULTS_PUT'
      EXPORTING
        parameter         = 'VALUE'
        fieldname         = 'LINE'         " Name of the source field in SOURCE_TAB
      TABLES
        shlp_tab          = shlp_tab    " Table of Elementary Search Helps
        record_tab        = record_tab  " Hit list
        source_tab        = values
      CHANGING
        shlp              = shlp        " Single (Current) Search Help
        callcontrol       = callcontrol " Control of the F4 process
      EXCEPTIONS
        parameter_unknown = 1           " No suitable parameter of the search help
        OTHERS            = 2.
    IF sy-subrc > 0.
      RETURN.
    ELSE.
      CALL FUNCTION 'F4UT_PARAMETER_RESULTS_PUT'
        EXPORTING
          parameter         = 'TEXT'
          fieldname         = 'TEXT'         " Name of the source field in SOURCE_TAB
        TABLES
          shlp_tab          = shlp_tab    " Table of Elementary Search Helps
          record_tab        = record_tab  " Hit list
          source_tab        = values
        CHANGING
          shlp              = shlp        " Single (Current) Search Help
          callcontrol       = callcontrol " Control of the F4 process
        EXCEPTIONS
          parameter_unknown = 1           " No suitable parameter of the search help
          OTHERS            = 2.
      IF sy-subrc > 0.
        RETURN.
      ENDIF.

      callcontrol-step = 'DISPLAY'.
    ENDIF.
  ENDIF.


ENDFUNCTION.</code></pre>



<h2 class="wp-block-heading">Definition der Suchhilfe</h2>



<p>Nun musst du noch die Suchhilfe definieren, in der du die Parameter der Suchhilfe definierst und die Datenbeschaffung über den Suchhilfe-Exit steuerst.</p>



<p>Den Suchhilfe-Exit legst du in Transaktion SE11 an. Aktiviere die Option <em>Vorschlagssuche auf Eingabefeldern</em>. Trage den Namen des Funktionsbausteins in das Feld Suchhilfe-Exit ein und definiere die Parameter:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="821" height="441" src="/wp-content/uploads/2021/04/image-1.png" alt="" class="wp-image-1027658" srcset="/wp-content/uploads/2021/04/image-1.png 821w, /wp-content/uploads/2021/04/image-1-300x161.png 300w, /wp-content/uploads/2021/04/image-1-768x413.png 768w" sizes="(max-width: 821px) 100vw, 821px" /><figcaption>Suchhilfe ZDYNFUZZ</figcaption></figure>



<h2 class="wp-block-heading">Verwendung im Programm</h2>



<p>Sobald du die Suchhilfe angelegt hast, kannst du sie im Programm verwenden, indem du diese zur Verwendung im Feld angibst:</p>



<pre class="wp-block-code"><code>PARAMETERS p_val TYPE text40 MATCHCODE OBJECT zdynfuzz.</code></pre>



<p>Bei Initialisierung ermitteln wir die möglichen Werte und schreiben sie ins SAP-Memory. Das war auch schon alles.</p>



<pre class="wp-block-code"><code>REPORT.

PARAMETERS p_val TYPE text40 MATCHCODE OBJECT zdynfuzz.


INITIALIZATION.

  TYPES: BEGIN OF ts_value,
           line TYPE text40,
           text type text40,
         END OF ts_value.
  DATA gt_values TYPE STANDARD TABLE OF ts_value WITH EMPTY KEY.

  gt_values = VALUE #(
    ( line = 'Berlin'            text = 'Berlin' )
    ( line = 'Hamburg'           text = 'Hamburg' )
    ( line = 'München'           text = 'Bayern' )
    ( line = 'Köln'              text = 'Nordrhein-Westfalen' )
    ( line = 'Frankfurt am Main' text = 'Hessen' )
    ( line = 'Stuttgart'         text = 'Baden-Württemberg' )
    ( line = 'Düsseldorf'        text = 'Nordrhein-Westfalen' )
    ( line = 'Leipzig'           text = 'Sachsen' )
    ( line = 'Dortmund'          text = 'Nordrhein-Westfalen' )
    ( line = 'Essen'             text = 'Nordrhein-Westfalen' )
    ( line = 'Bremen'            text = 'Bremen' )
    ( line = 'Dresden'           text = 'Sachsen' )
    ( line = 'Hannover'          text = 'Niedersachsen' )
    ( line = 'Nürnberg'          text = 'Bayern' )
    ( line = 'Duisburg'          text = 'Nordrhein-Westfalen' )
    ( line = 'Bochum'            text = 'Nordrhein-Westfalen' )
    ( line = 'Wuppertal'         text = 'Nordrhein-Westfalen' )
    ( line = 'Bielefeld'         text = 'Nordrhein-Westfalen' )
    ( line = 'Bonn'              text = 'Nordrhein-Westfalen' )
    ( line = 'Münster'           text = 'Nordrhein-Westfalen' )
    ( line = 'Karlsruhe'         text = 'Baden-Württemberg' )
    ( line = 'Mannheim'          text = 'Baden-Württemberg' )
    ( line = 'Augsburg'          text = 'Bayern' )
    ( line = 'Wiesbaden'         text = 'Hessen' )
    ( line = 'Mönchengladbach'   text = 'Nordrhein-Westfalen' )
    ( line = 'Gelsenkirchen'     text = 'Nordrhein-Westfalen' )
    ( line = 'Braunschweig'      text = 'Niedersachsen' )
    ( line = 'Aachen'            text = 'Nordrhein-Westfalen' )
    ( line = 'Kiel'              text = 'Schleswig-Holstein' )
    ( line = 'Chemnitz'          text = 'Sachsen' ) ).


  EXPORT values FROM gt_values TO MEMORY ID 'Trcktrsr'.</code></pre>



<h2 class="wp-block-heading">Ergebnis</h2>



<p>Nun bekommt der Anwender alle Werte direkt angezeigt, die zur bereits getätigten Eingabe passen:</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="592" height="236" src="/wp-content/uploads/2021/04/SNAG-01512.png" alt="" class="wp-image-1027659" srcset="/wp-content/uploads/2021/04/SNAG-01512.png 592w, /wp-content/uploads/2021/04/SNAG-01512-300x120.png 300w" sizes="(max-width: 592px) 100vw, 592px" /><figcaption>Aktiviert Vorschlagssuche</figcaption></figure>



<p>Die Einträge können mit den Pfeiltasten direkt ausgewählt werden.</p>
<p>Der Beitrag <a href="/blog/dynamische-vorschlagssuche/">Dynamische Vorschlagssuche</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Geschäftszeiten in S/4HANA: ABAP vs. SimDia²</title>
		<link>/blog/geschaeftszeiten-cl_md_bp_maintain-vs-simdia%c2%b2/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Sat, 24 Apr 2021 21:35:23 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Partner]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[simdia]]></category>
		<category><![CDATA[Aufzeichnung]]></category>
		<category><![CDATA[Geschäftspartner]]></category>
		<guid isPermaLink="false">/?p=1027590</guid>

					<description><![CDATA[<p>Seit einiger Zeit beschäftige ich mich mit den Geschäftspartnern in S/4HANA und deren programmatischer Anlage, Änderung sowie der Erweiterung der einzelnen Sichten. In meinem aktuellen Projekt führt kein Weg an der Anlage der Business Partner per Programm vorbei, da die Daten über eine Schnittstelle kommen und verarbeitet werden müssen. Wie sieht es aber aus, wenn Geschäftspartner zwar massenhaft aber nicht automatisch geändert werden müssen, zum Beispiel durch den Fachbereich? In der aktuellen Situation, in der...</p>
<p>Der Beitrag <a href="/blog/geschaeftszeiten-cl_md_bp_maintain-vs-simdia%c2%b2/">Geschäftszeiten in S/4HANA: ABAP vs. SimDia²</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Seit einiger Zeit beschäftige ich mich mit den Geschäftspartnern in S/4HANA und deren programmatischer Anlage, Änderung sowie der Erweiterung der einzelnen Sichten. In meinem aktuellen Projekt führt kein Weg an der Anlage der Business Partner per Programm vorbei, da die Daten über eine Schnittstelle kommen und verarbeitet werden müssen. </p>



<p>Wie sieht es aber aus, wenn Geschäftspartner zwar massenhaft aber nicht automatisch geändert werden müssen, zum Beispiel durch den Fachbereich? In der aktuellen Situation, in der wir uns befinden, müssen Stammdatenänderungen mitunter schnell erfolgen können. Die IT kann dies oftmals nicht leisten, denn der Aufwand ist erheblich und die Vorlaufzeit mitunter katastrophal. Und wenn dann noch regelmäßige, weit auseinander liegende Releasezyklen dazu kommen (also Produktivsetzung nur alle drei Monate), dann kann locker ein dreiviertel Jahr ins Land gehen, bis der Anwender sein Programm hat.</p>



<p>Mit der Software <a class="keychainify-checked" href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> können viele Aufgaben vom Anwender selbst erledigt werden. Die Einarbeitungszeit für <a class="keychainify-checked" href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> ist gering, die Möglichkeiten sind vielfältig.</p>



<p>Ich möchte heute einmal vergleichen, wie sich meine Programmierung und Simdia² im Vergleich schlagen. </p>



<h2 class="wp-block-heading">Disziplin: Geschäftszeiten ändern</h2>



<p>Die Änderung von Geschäftspartnern in S/4HANA ist eine sehr anspruchsvolle Aufgabe. Das Objekt &#8220;Business Partner&#8221; ist komplex und sehr variabel. Es gibt für einzelne Funktionen entsprechende Funktionsbausteine (die man jedoch erst einmal finden muss) oder die zentrale Funktion CL_MD_BP_MAINTAIN=&gt;MAINTAIN, die mit einem komplexen Datentypen <em>gefüttert </em>werden muss. </p>



<p>Aktuell und wohl auch noch viele Monate später sind die genauen Öffnungszeiten von Partnern wichtig. Kunden haben eventuell eingeschränkte und häufig wechselnde Warenannahmezeiten und auch Lieferanten sind nicht ständig zu den <em>normalen</em> Geschäftszeiten erreichbar.</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="604" height="893" src="/wp-content/uploads/2021/04/SNAG-01504.png" alt="" class="wp-image-1027604" srcset="/wp-content/uploads/2021/04/SNAG-01504.png 604w, /wp-content/uploads/2021/04/SNAG-01504-203x300.png 203w" sizes="(max-width: 604px) 100vw, 604px" /><figcaption>Geschäftszeiten eines Geschäftspartners</figcaption></figure>



<p>Aus diesem Grund denke ich, dass die Funktion der Geschäftszeiten eine sehr wichtige Rolle spielt oder spielen kann. Der Fachbereich erfragt die Geschäftszeiten seiner Partner jedoch in der Regel nicht einzeln um sie dann in den Geschäftspartner einzutragen, sondern erfragt diese eventuell über ein Online-Formular. Oder die Daten werden von Kollegen und Kolleginnen gesammelt, die diese dann in eine Excel-Tabelle eintragen. Am Ende wäre es also für den Fachbereich sehr hilfreich, wenn er ein Programm hätte, mit dem die aktuellen Geschäftszeiten automatisiert in die betroffenen Partner eingetragen werden könnte.</p>



<h2 class="wp-block-heading">Ablauf in der IT</h2>



<p>Auch wenn inzwischen viel über Continuous Integration und Continuous Delivery geredet wird, sieht der Alltag in der SAP-IT immer noch anders aus. Natürlich muss der Fachbereich eine Anforderung stellen. Alleine das ist häufig nicht ganz einfach. Die Anforderung muss geprüft und die technische Umsetzung geplant werden. Wenn dann irgendwann ein Programmierer für die Entwicklung eingeplant wurde, müssen weitere Hürden genommen werden:</p>



<ul><li>Es müssen die richtigen Bausteine für die Aufgabe gefunden werden</li><li>Selbst wenn die programmierende Person sich mit der Programmierung der Geschäftspartner auskennt, muss eventuell erst einmal recherchiert werden</li><li>Dann muss die Excel-Datei eingelesen werden<ul><li>entweder wird tatsächlich eine recht aufwendige Programmierung zum Einlesen der Excel-Datei entwickelt</li><li>oder man macht es sich leicht und liest eine CSV-Datei ein. Dann muss der Fachbereich die Datei erst als CSV speichern, bevor die Datei verarbeitet werden kann</li></ul></li><li>Es müssen eventuell Berechtigungen für die neue Transaktion beantragt und zugeordnet werden</li></ul>



<p>Sobald das Programm fertiggestellt wurde, muss der Fachbereich testen. Meiner Erfahrung nach funktioniert ein Programm selten nach dem ersten <em>Wurf</em>.</p>



<p>Häufig kommen noch Urlaub oder Krankheit entweder aus dem Fachbereich oder in der IT hinzu, was die Fertigstellung des Programms verzögert&#8230;</p>



<p>Und wenn dann noch lange Releasezyklen dazu kommen, dann ist in manchen Firmen die Pandemie bereits vorbei, bevor der Fachbereich das Programm zur Arbeitserleichterung erhalten hat.</p>



<h2 class="wp-block-heading">Änderung der Geschäftszeiten in S4/HANA mit der Business-Partner-API</h2>



<p>Da ich mich in letzter Zeit öfters mit der API zu den Geschäftspartnern beschäftigt habe (Klasse CL_MD_BP_MAINTAIN), wollte ich wissen, wie lange ich alleine für die Programmierung zur Änderung der Geschäftszeiten benötige.</p>



<p>Etwa vier Stunden waren alleine schon nötig, nur um herauszufinden, welche Parameter bei den Geschäftszeiten überhaupt benötigt werden. Viele Parameter gingen häufig nicht aus den definierten Datenelementen hervor und auch nicht aus der Anwendung selbst.</p>



<p>Beispielsweise ist der Typ (Feldname TYPE), der definiert, welche Regel für die Geschäftszeiten gilt (Täglich, Wöchentlich, Monatlich) vom Typ CHAR2. Ich musste also erst herausfinden, was mit TYPE eigentlich gemeint ist. Welche Id für die Art der Geschäftszeiten (Anrufzeiten, Warenannahmezeiten, Besuchszeiten) verwendet werden muss, habe ich eher durch Zufall herausgefunden. Der SCHEDULE_TYPE hat zwar ein eigenes Datenelement, das jedoch weder Festwerte hat noch auf eine Prüftabelle verweist.</p>



<p>Durch meine Arbeit mit den Geschäftspartnern, beziehungsweise mit der Klasse CL_MD_BP_MAINTAIN, hatte ich bereits eine passende Fehlerbehandlung. </p>



<h3 class="wp-block-heading">Coding</h3>



<p>Der folgende Quelltext legt zu einem Business Partner die Warenannahmezeiten für Montag bis Freitag mit den jeweils übergebenen Von- und Bis-Zeiten an. </p>



<pre class="wp-block-code"><code>    SELECT SINGLE partner_guid FROM but000 INTO @DATA(guid) WHERE partner = @partner.

    CHECK sy-subrc = 0.

    "fill data structure with relevant customer data
    DATA(bp_data) = VALUE cvis_ei_extern(
      partner-header-object_task     = 'M'
      partner-header-object          = 'BUS1006' "Business Partner
      partner-header-object_instance = VALUE #(
      bpartner = partner
        bpartnerguid           = guid )
        partner-central_data-business_hour = VALUE #( current_state = ' '
          business_hours = VALUE #(
            task = 'M'
            data_key-schedule_type = 'B' "Warenannahme TAB TB049
            data-weekly = VALUE #(
              ( weeks      = 1
                fcalid     = '01' "Deutschland
                conflicts  = '0' "Keine Ausnahmen
                type       = 'W'
                start_date = sy-datum
                end_date   = sy-datum + 365
                monday     = 'X' monda_from = time_from  monday_to  = time_to    mond_tzone = 'CET'
                tuesday    = 'X' tuesd_from = time_from  tuesday_to = time_to    tues_tzone = 'CET'
                wednesday  = 'X' wedne_from = time_from  wednesd_to = time_to    wedn_tzone = 'CET'
                thursday   = 'X' thurs_from = time_from  thursda_to = time_to    thur_tzone = 'CET'
                friday     = 'X' frida_from = time_from  friday_to  = time_to    frid_tzone = 'CET'
                saturday   = ' ' satur_from = VALUE #( ) saturda_to = VALUE #( ) satu_tzone = ''
                sunday     = ' ' sunda_from = VALUE #( ) sunday_to  = VALUE #( ) sund_tzone = '' )
                )
                 ( ) ) ) ) .

    TRY.

        SET UPDATE TASK LOCAL.
        cl_md_bp_maintain=&gt;maintain(
          EXPORTING
            i_data     = VALUE #( ( bp_data ) )
          IMPORTING
            e_return   = DATA(lt_return)   ).

        IF lt_return IS INITIAL.
          sy-subrc = 1.
        ELSE.
          READ TABLE lt_return&#091; 1 ]-object_msg INTO ls_return WITH KEY type = 'A'.
          IF sy-subrc &gt; 0.
            READ TABLE lt_return&#091; 1 ]-object_msg INTO ls_return WITH KEY type = 'E'.
          ENDIF.
        ENDIF.

        IF sy-subrc &lt;&gt; 0.
          CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'.
        ENDIF.
      CATCH zcx_bc_bp.
        RETURN.
    ENDTRY.</code></pre>



<p>In meinem Beispiel habe ich noch nicht das Einlesen und Prüfen der Excel-Tabelle programmiert, keine Darstellung der eingelesenen Daten und keine Fehlerbehandlung für den Anwender. </p>



<p>Deswegen würde ich schätzen, dass die Entwicklung eines ordentlichen Programms, das die Geschäftszeiten anlegt und entsprechend Anwenderfreundlich ist, <strong>mindestens eine Woche Entwicklungszeit </strong>benötigt.</p>



<h2 class="wp-block-heading">Und was ist jetzt mit SimDia²?</h2>



<p>Das Tool <a class="keychainify-checked" href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> von Ersasoft, das als Windowsprogramm auf dem PC des Anwenders vorhanden sein muss, wird vom SAP-Anwender bedient. Im Grunde führt der Anwender dabei die gleichen Schritte aus, wie bei einer normalen manuellen Eingabe in der Transaktion, die er gerade benötigt. In unserem Fall ist es die Transaktion &#8220;BP &#8211; Geschäftspartner&#8221;. Diese Arbeitsschritte werden aufgezeichnet und können beliebig oft wiederholt werden.</p>



<p>Der Anwender legt eine Excel-Datei mit den Daten an, die für die Transaktion benötigt werden. Dabei ist es wichtig, dass die Feldnamen eindeutig sind, damit <a href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> die Felder eindeutig zuordnen kann. Die Erstellung der Excel-Datei kann ebenfalls durch <a href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> mit Hilfe des integrierten Vorlagen-Generators erfolgen.</p>



<h3 class="wp-block-heading">Eingabedatei</h3>



<p>In unserem Fall benötigen wir eine Datei mit Spalten für die Felder Geschäftspartnernummer und jeweils drei Felder für jeden Tag:</p>



<ul><li>Tag auswählen (X/space)</li><li>Uhrzeit von</li><li>Uhrzeit bis</li></ul>



<p>Nach einer kurzen Einführung in die Funktionen und die Arbeitsweise von <a class="keychainify-checked" href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> ist der Anwender in der Lage, die Transaktion mit den Daten aus der Excel-Datei zu befüllen. Der große Vorteil ist, dass der Anwender seine Transaktion genau kennt und genau weiß, welche Daten benötigt werden.</p>



<p>Bei der Aufzeichnung muss man sich nach den Besonderheiten der Transaktion richten. Bei der Transaktion BP ist zum Beispiel eine Besonderheit, dass die jeweils letzte Sicht des Geschäftspartners bei Auswahl eines anderen Geschäftspartners erneut präsentiert wird. </p>



<h3 class="wp-block-heading">Aufzeichnung</h3>



<p>Die Aufzeichnung ist sehr einfach und intuitiv. <a class="keychainify-checked" href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> und die gewünschte Transaktion müssen gestartet werden. Danach muss die Excel-Datei mit den Daten ausgewählt werden. Mit dem Aufzeichungsassistenten von <a class="keychainify-checked" href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> wird die Aufzeichnung gestartet. Alle Felder der Excel-Tabelle werden im <a class="keychainify-checked" href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a>-Fenster als Drucktaste dargestellt. Der Anwender muss dann nur noch die einzelnen Sichten auswählen, die zu belegenden Felder anklicken und mit einem Klick auf die dazugehörige Drucktaste im <a class="keychainify-checked" href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a>-Fenster die Daten übertragen. Die Aufzeichnung kann natürlich gespeichert und jederzeit wiederverwendet werden.</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="530" height="725" src="/wp-content/uploads/2021/04/SNAG-01507.png" alt="" class="wp-image-1027611" srcset="/wp-content/uploads/2021/04/SNAG-01507.png 530w, /wp-content/uploads/2021/04/SNAG-01507-219x300.png 219w" sizes="(max-width: 530px) 100vw, 530px" /><figcaption>Felder aus der Excel-Tabelle</figcaption></figure>



<h3 class="wp-block-heading">Daten importieren</h3>



<p>Zum Import der Daten aus einer Excel-Tabelle müssen die Excel-Datei und die passende Aufzeichnung geladen werden. Die passende Transaktion startet <a href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> selbstständig und schon können die Daten importiert werden. Am Anfang kann man den Import Schritt für Schritt überwachen um sicher zu gehen, dass die Aufzeichnung wirklich korrekt ist.</p>



<p>Wenn alles passt, dann kann der Turbo eingeschaltet werden und die Daten werden in Windeseile importiert.  </p>



<figure class="wp-block-image size-large"><img decoding="async" src="/wp-content/uploads/2021/04/SNAG-01506-1024x616.png" alt="" class="wp-image-1027610" width="NaN" height="NaN" srcset="/wp-content/uploads/2021/04/SNAG-01506-1024x616.png 1024w, /wp-content/uploads/2021/04/SNAG-01506-300x181.png 300w, /wp-content/uploads/2021/04/SNAG-01506-768x462.png 768w, /wp-content/uploads/2021/04/SNAG-01506.png 1268w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Simdia² integriert in den SAPGUI</figcaption></figure>



<p>Die importierten Daten werden protokolliert. Kann ein Datensatz nicht gespeichert werden, dann wird dies im Protokoll festgehalten.</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1024" height="163" src="/wp-content/uploads/2021/04/SNAG-01505-1024x163.png" alt="" class="wp-image-1027609" srcset="/wp-content/uploads/2021/04/SNAG-01505-1024x163.png 1024w, /wp-content/uploads/2021/04/SNAG-01505-300x48.png 300w, /wp-content/uploads/2021/04/SNAG-01505-768x123.png 768w, /wp-content/uploads/2021/04/SNAG-01505.png 1109w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Excel-Datei mit Geschäftszeiten und Protokoll aus Simdia²</figcaption></figure>



<h2 class="wp-block-heading">Fazit</h2>



<p>Bei der ABAP-Programmierung habe ich dir eine ungefähre Zeitangabe gegeben, wie lange die Vorarbeit für ein <em>richtiges </em>Programm gedauert hat (Zur Erinnerung: ca. eine Woche). Jetzt bist du sicherlich gespannt, wie lange die Aufzeichnung mit Simdia² gedauert hat? Nun, während ich diesen Artikel schreibe, habe ich die Aufzeichnung erstellt und ein paar Datensätze importiert und ein paar Screenshots gemacht. Ich musste die Aufzeichnung mehrere Male machen, weil ich erst später darüber gestolpert bin, dass ich für das Aktivieren der einzelnen Tage ein separates Feld benötige. Das alles hat insgesamt circa <strong>zwei Stunden </strong>gedauert. Mit etwas Übung ist man mit <a href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> innerhalb von <strong>10 Minuten</strong> mit einer Aufzeichnung fertig.</p>



<p><a href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> ist also auf jeden Fall eine Alternative zur ABAP-Programmierung. Besonders dann, wenn die IT überlastet ist und der Fachbereich dringend eine Lösung für zeitraubende, wiederkehrende Arbeiten benötigt.</p>



<h2 class="wp-block-heading">Sicherheit</h2>



<p>Sicherheit und Sicherheitslücken sind ein wichtiges Thema in der IT. <a class="keychainify-checked" href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> hat diesbezüglich einen enormen Vorteil: Der Anwender kann nur die Daten ändern, für die er auch die Berechtigung hat. Das ist bei SAP-Programmen nicht immer der Fall und wird gerne übersehen.</p>



<h2 class="wp-block-heading">Weitere Artikel zu SimDia²</h2>


            <div id="post-grid-lazy-1028358" class="post-grid-lazy"><img decoding="async" alt="" src="" /></div>
        <script>
            jQuery('#post-grid-lazy-1028358').ready(function($) {
                $('#post-grid-lazy-1028358').fadeOut();
                $('#post-grid-1028358   ').fadeIn();
            })
        </script>
        <style type="text/css">
            #post-grid-1028358 {
                display: none;
            }

            .post-grid-lazy {
                text-align: center;
            }
        </style>
        <div data-options='{&quot;page_type&quot;:&quot;taxonomy&quot;,&quot;page_taxonomy&quot;:&quot;category&quot;,&quot;page_tax_term&quot;:326,&quot;id&quot;:&quot;1028358&quot;,&quot;lazy_load&quot;:&quot;yes&quot;,&quot;masonry_enable&quot;:&quot;no&quot;,&quot;view_type&quot;:&quot;grid&quot;}' id="post-grid-1028358" class="post-grid grid">
                <div class="grid-items">
            <div class="item item-1043503 skin flat even 0 ">
                <div class="layer-wrapper layout-1028386">
                <div class="layer-media element_1587187627902" id="">
        <div class="element element_1587190790308  element-media ">
        <a target="_self" href="/blog/abap-und-stellenanzeigen/"><img loading="lazy" decoding="async" width="500" height="500" src="/wp-content/uploads/2020/09/abap-magician-turnbeutel.jpg" class="attachment-large size-large wp-post-image" alt="" srcset="/wp-content/uploads/2020/09/abap-magician-turnbeutel.jpg 500w, /wp-content/uploads/2020/09/abap-magician-turnbeutel-300x300.jpg 300w, /wp-content/uploads/2020/09/abap-magician-turnbeutel-150x150.jpg 150w, /wp-content/uploads/2020/09/abap-magician-turnbeutel-83x83.jpg 83w" sizes="(max-width: 500px) 100vw, 500px" /></a>

    </div>
    </div>
    <div class="layer-content element_1587187714568" id="">
        <div class="element element_1587187895341  title ">
                    <a target="_blank" href="/blog/abap-und-stellenanzeigen/">ABAP und Stellenanzeigen</a>

        

    </div>
    <div class="element element_1587187729822  excerpt ">
        Den Tricktresor gibt es nun seit über zwanzig Jahren. Am 17.4.2003 habe ich meinen ersten Beitrag verfasst: Drucktaste neben AUSFÜHREN-Button.                    <a target="_self" href="/blog/abap-und-stellenanzeigen/">Read more</a>
            </div>
    </div>
        </div>
    </div><div class="item item-1045109 skin flat odd 1 ">
                <div class="layer-wrapper layout-1028386">
                <div class="layer-media element_1587187627902" id="">
        <div class="element element_1587190790308  element-media ">
        <a target="_self" href="/blog/img-struktur-anzeigen/"><img loading="lazy" decoding="async" width="640" height="228" src="/wp-content/uploads/2024/03/image-9.png" class="attachment-large size-large wp-post-image" alt="" srcset="/wp-content/uploads/2024/03/image-9.png 739w, /wp-content/uploads/2024/03/image-9-300x107.png 300w" sizes="(max-width: 640px) 100vw, 640px" /></a>

    </div>
    </div>
    <div class="layer-content element_1587187714568" id="">
        <div class="element element_1587187895341  title ">
                    <a target="_blank" href="/blog/img-struktur-anzeigen/">IMG-Struktur anzeigen</a>

        

    </div>
    <div class="element element_1587187729822  excerpt ">
        Für den ein oder anderen Fall kann es sinnvoll sein, eine Unternehmensstruktur (IMG) direkt anzeigen oder sogar editieren zu können.                    <a target="_self" href="/blog/img-struktur-anzeigen/">Read more</a>
            </div>
    </div>
        </div>
    </div><div class="item item-1045045 skin flat even 2 ">
                <div class="layer-wrapper layout-1028386">
                <div class="layer-media element_1587187627902" id="">
        <div class="element element_1587190790308  element-media ">
        <a target="_self" href="/blog/alv-grid-und-dropdown/"><img loading="lazy" decoding="async" width="332" height="364" src="/wp-content/uploads/2024/03/image-8.png" class="attachment-large size-large wp-post-image" alt="" srcset="/wp-content/uploads/2024/03/image-8.png 332w, /wp-content/uploads/2024/03/image-8-274x300.png 274w" sizes="(max-width: 332px) 100vw, 332px" /></a>

    </div>
    </div>
    <div class="layer-content element_1587187714568" id="">
        <div class="element element_1587187895341  title ">
                    <a target="_blank" href="/blog/alv-grid-und-dropdown/">ALV-Grid und Dropdown</a>

        

    </div>
    <div class="element element_1587187729822  excerpt ">
        Es gibt einige Verhaltensweise in SAP-Objekten, bei denen ich einfach nicht verstehe, warum diese nicht schon seit langer Zeit behoben                    <a target="_self" href="/blog/alv-grid-und-dropdown/">Read more</a>
            </div>
    </div>
        </div>
    </div><div class="item item-1044885 skin flat odd 3 ">
                <div class="layer-wrapper layout-1028386">
                <div class="layer-media element_1587187627902" id="">
        <div class="element element_1587190790308  element-media ">
        <a target="_self" href="/blog/finden-%e2%94%80-nicht-suchen/"><img loading="lazy" decoding="async" width="533" height="179" src="/wp-content/uploads/2024/02/SNAG-0290.jpg" class="attachment-large size-large wp-post-image" alt="" srcset="/wp-content/uploads/2024/02/SNAG-0290.jpg 533w, /wp-content/uploads/2024/02/SNAG-0290-300x101.jpg 300w" sizes="(max-width: 533px) 100vw, 533px" /></a>

    </div>
    </div>
    <div class="layer-content element_1587187714568" id="">
        <div class="element element_1587187895341  title ">
                    <a target="_blank" href="/blog/finden-%e2%94%80-nicht-suchen/">Finden ─ nicht suchen</a>

        

    </div>
    <div class="element element_1587187729822  excerpt ">
        Ich denke, nach beinahe 30 Jahren Erfahrung mit SAP-Systemen kann ich mich als alten Fuchs bezeichnen und es gibt wenig                    <a target="_self" href="/blog/finden-%e2%94%80-nicht-suchen/">Read more</a>
            </div>
    </div>
        </div>
    </div>        </div>
            <style type="text/css">
            .layout-1028386 .element_1587187627902 {
                            }

                    </style>
        <style type="text/css">
        .layout-1028386 .element_1587190790308 {
            overflow: hidden;
                    }

        .layout-1028386 .element_1587190790308 img {
            max-width: 100%;
            height: auto;
        }

        @media only screen and (min-width: 1024px) {
            .layout-1028386 .element_1587190790308 {
                height: auto;
                            }
        }

        @media only screen and (min-width: 768px) and (max-width: 1023px) {
            .layout-1028386 .element_1587190790308 {
                height: auto;
                            }
        }

        @media only screen and (min-width: 0px) and (max-width: 767px) {
            .layout-1028386 .element_1587190790308 {
                height: auto;
                            }
        }
    </style>
        <style type="text/css">
            .layout-1028386 .element_1587187714568 {
                margin: 10px;
                            }

                    </style>
        <style type="text/css">
        .layout-1028386 .element_1587187895341 {
            font-size: 18px;
            margin: 5px 0px;
            text-align: left;
                    }

        .layout-1028386 .element_1587187895341 a {
            font-size: 18px;
            margin: 5px 0px;
            text-align: left;
                    }
    </style>
    <style type="text/css">
        .layout-1028386 .element_1587187729822 {
            font-size: 13px;
            margin: 0px 0px;
            text-align: left;
                    }

        .layout-1028386 .element_1587187729822 a {
            font-size: 13px;
                    }
    </style>


    

            <style type="text/css">
            .layout-1028386 a{text-decoration:none}.layout-1028386{vertical-align:top}.layout-1028386 .layer-content{padding:10px}        </style>
        <script>
                    </script>
        <style type="text/css">
        #post-grid-1028358 {
            padding: 10px;
                    }

        #post-grid-1028358 .item {
            padding: 0px;
            background: #fff;
                    }

        #post-grid-1028358 .item .layer-media {
            height:auto;        }

        @media only screen and (min-width: 0px) and (max-width: 767px) {
            #post-grid-1028358 .grid-items {
                text-align: center;
                            }

            #post-grid-1028358 .item {
                width: 90%;
                margin: 10px;
                display: inline-block;
                vertical-align: top;
                height:auto;            }
        }

        @media only screen and (min-width: 768px) and (max-width: 1023px) {
            #post-grid-1028358 .grid-items {
                text-align: center;
                            }

            #post-grid-1028358 .item {
                width: 250px;
                margin: 10px;
                display: inline-block;
                vertical-align: top;
                max-height:auto;            }
        }

        @media only screen and (min-width: 1024px) {
            #post-grid-1028358 .grid-items {
                text-align: center;
                            }

            #post-grid-1028358 .item {
                width: 250px;
                display: inline-block;
                margin: 10px;
                vertical-align: top;
                height:auto;            }
        }

            </style>
    </div>

<p>Der Beitrag <a href="/blog/geschaeftszeiten-cl_md_bp_maintain-vs-simdia%c2%b2/">Geschäftszeiten in S/4HANA: ABAP vs. SimDia²</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
