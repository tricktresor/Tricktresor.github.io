<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:series="https://publishpress.com/"
	>

<channel>
	<title>AddOns Archive - Tricktresor</title>
	<atom:link href="/blog/topics/tricktresor/addons/feed/" rel="self" type="application/rss+xml" />
	<link></link>
	<description>Tipps und Tricks zu SAP R/3</description>
	<lastBuildDate>Tue, 14 Apr 2020 13:01:33 +0000</lastBuildDate>
	<language>de-DE</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.3</generator>

<image>
	<url>/wp-content/uploads/2019/02/cropped-Tricktresor-favicon-2019-32x32.png</url>
	<title>AddOns Archive - Tricktresor</title>
	<link></link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>SimDia² als Alternative zur Programmierung?</title>
		<link>/blog/simdia%c2%b2-als-alternative-zur-programmierung/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 15 Jan 2018 16:44:36 +0000</pubDate>
				<category><![CDATA[Partner]]></category>
		<category><![CDATA[AddOns]]></category>
		<category><![CDATA[Featured]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Module]]></category>
		<category><![CDATA[simdia]]></category>
		<category><![CDATA[migration]]></category>
		<category><![CDATA[programmierung]]></category>
		<category><![CDATA[LSMW]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=1018330</guid>

					<description><![CDATA[<p>Für Datenimporte muss man programmieren oder sich mit der LSMW auskennen. Beides Tools, die dem Anwender in der Regel nicht zur Verfügung stehen. Hier ist SimDia² das ideale Tool. Allerdings nicht nur für Fachanwender und Key-User...</p>
<p>Der Beitrag <a href="/blog/simdia%c2%b2-als-alternative-zur-programmierung/">SimDia² als Alternative zur Programmierung?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Über mein Lieblings-AddOn <a href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> habe ich ja bereits mehrmals geschrieben (<a href="https://tricktresor.com/blog/simdia2-sap-datenimport-einfach/">SAP Datenimport einfach?</a>, <a href="https://tricktresor.com/blog/simdia2-neue-version-des-besten-sap-import-tools/">Neue Version SimDia²</a> und <a href="https://tricktresor.com/blog/logik-vs-daten-sap-vs-simdia%c2%b2-programmierer-vs-anwender/">Logik vs. Daten</a>). Grund dafür waren die große Funktionalität und die extrem einfache Handhabung. Beides ermöglicht es auch Endanwendern und Nicht-Informatikern, sehr schnell &#8211; also in wenigen Minuten &#8211; einen Datenaustausch zwischen Excel und SAP zu definieren und automatisch ausführen zu lassen.</p>
<p>Mein Problem als leidenschaftlicher Programmierer und „Datenmalträtierer“ war aber bisher immer, dass mir ein bisschen die „Anwender-Brille“ fehlte und damit entsprechende Anwendungsfälle. In meinem Arbeitsalltag habe ich nämlich mit Datenimport-Anfragen nicht wirklich zu tun (worüber ich aber ehrlicherweise gar nicht traurig bin). Und wenn doch, dann habe ich ja dieses Tool zum <em>Extreme Customizing</em>: ABAP. Daher ging ich bis vor kurzem davon aus, dass SimDia² vor allem ein Tool für Fachabteilungen und Endanwender zur Lösung kleinerer und einfacher Datenimport-Aufgaben ist.</p>
<p>Das Problem eines Entwicklers in meiner Xing-Gruppe <a href="https://www.xing.com/communities/groups/tricktresor-f8f4-1000599">Tricktresor</a>  zum Thema <a href="https://www.xing.com/communities/posts/aufzeichnung-in-lsmw-sekundaerressourcen-pflegen-1014264586">Aufzeichnung in LSMW (Sekundärressourcen pflegen)</a> brachte mich jedoch zu der Frage, ob und wie sich der dort geschilderte und recht komplexe Vorgang statt mit LSMW auch mit SimDia² lösen ließe. Kurz und gut: mit ein wenig Auffrischung im Umgang mit SimDia² (was mir bis dahin aus oben erwähnten Gründen etwas gefehlt hatte) ließ sich die gesamte Aufgabe schlussendlich in nur 2-3 Minuten lösen.</p>
<h2>Aufzeichnung mit SimDia²</h2>
<p>Im Grunde reicht es, wenn man die betreffende SAP-Transaktion gut kennt (in diesem Fall die mir bis dahin unbekannte C202) und ein wenig weiß, wie SAP tickt. Da die gesamte SimDia²-Aufzeichnung im normalen SAP GUI-Dialog stattfindet, verschwinden auch keine Registerkarten (wie teilweise beim Batchinput) und nach dem Text <em>Planungs-Vorgang</em> lässt sich sehr einfach in der Tabelle suchen. Der einzige Trick besteht dann noch darin, den gefundenen Vorgang zu markieren. Aber auch das verrät SAP einem nach beherztem Druck auf die rechte Maustaste:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/sd01.png"><img decoding="async" class="alignnone size-full wp-image-1018332" src="https://tricktresor.com/wp-content/uploads/2018/01/sd01.png" alt="" width="313" height="61" srcset="/wp-content/uploads/2018/01/sd01.png 313w, /wp-content/uploads/2018/01/sd01-300x58.png 300w" sizes="(max-width: 313px) 100vw, 313px" /></a></p>
<p>Anschließend lassen sich die Sekundärressourcen ganz einfach ebenfalls über das Kontext-Menü  aufrufen und versorgen.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/sd02.png"><img decoding="async" class="alignnone size-full wp-image-1018331" src="https://tricktresor.com/wp-content/uploads/2018/01/sd02.png" alt="" width="314" height="64" srcset="/wp-content/uploads/2018/01/sd02.png 314w, /wp-content/uploads/2018/01/sd02-300x61.png 300w" sizes="(max-width: 314px) 100vw, 314px" /></a></p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/sd03.png"><img fetchpriority="high" decoding="async" class="alignnone size-large wp-image-1018333" src="https://tricktresor.com/wp-content/uploads/2018/01/sd03-1024x590.png" alt="" width="640" height="369" srcset="/wp-content/uploads/2018/01/sd03-1024x590.png 1024w, /wp-content/uploads/2018/01/sd03-300x173.png 300w, /wp-content/uploads/2018/01/sd03-768x442.png 768w, /wp-content/uploads/2018/01/sd03-265x153.png 265w, /wp-content/uploads/2018/01/sd03-148x85.png 148w, /wp-content/uploads/2018/01/sd03-193x112.png 193w, /wp-content/uploads/2018/01/sd03-71x40.png 71w, /wp-content/uploads/2018/01/sd03.png 1502w" sizes="(max-width: 640px) 100vw, 640px" /></a></p>
<h2>Nur für Fachabteilungen?</h2>
<p>Ist SimDia² also „nur“ ein Tool für Fachabteilungen und Endanwender zur Lösung kleinerer Datenimport-Aufgaben? Mitnichten.</p>
<p>Nachdem bei mir der Knoten geplatzt war &#8211; spätestens, als ich gesehen hatte, wie einfach auch die <a href="https://ersasoft.de/de/videos/?s=tt#Tutorial6">Verarbeitung von Kopf- und Detaildaten</a> damit ist &#8211; wurde mir klar, dass mit SimDia² eben auch komplexe Fälle abgebildet werden können. Auch solche, für die in der LSMW geballtes Entwickler-Gehirnschmalz und manchmal sogar ABAP nötig sind.</p>
<p>Denn auf diese Weise können &#8211; und da müssen wir Entwickler jetzt ganz stark sein<img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png" alt="😉" class="wp-smiley" style="height: 1em; max-height: 1em;" /> &#8211; auch ganz „normale“ SAP-Anwender komplexe Datenimporte durchführen. Wenn man mal kurz darüber nachdenkt, ist das doch aber gar nicht so verkehrt. Warum? Weil dadurch die Aufgaben von denjenigen erledigt werden können, die sich mit den Daten ohnehin am besten auskennen. Und wir Entwickler können uns auf das konzentrieren, wofür wir eigentlich ausgebildet wurden und bezahlt werden: komplexe Software-Lösungen entwickeln und unsere Unternehmen fit zu machen für die Zukunft. Außerdem sagt ja keiner, dass wir SimDia² nicht auch für unsere Zwecke einsetzen können, falls z. B. die Datenimporte weiterhin von der IT durchgeführt werden sollen. Wenn wir Aufgaben in ein paar Minuten erledigen können, für die vorher einige Stunden nötig waren, dann beschwert sich darüber sicher auch niemand.</p>
<h2>SimDia²</h2>
<p>Mehr Informationen zu SimDia² findest du auf der Homepage: <a href="https://ersasoft.de/de/simdia/?s=tt">https://ersasoft.de/</a></p>
<h2>Erfahrungsberichte</h2>
<p>Da ich selbst SimDia² in der Praxis noch nicht eingesetzt habe (ich darf zum Glück tun, wofür ich ausgebildet wurde und bezahlt werde<img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png" alt="😉" class="wp-smiley" style="height: 1em; max-height: 1em;" />), interessieren mich natürlich einschlägige Erfahrungen. Falls ihr also weitere Beispiele für mich habt, in denen ihr komplexe Datentransfers mit SimDia² erledigt habt, für die vorher eine aufwendige LSMW-Programmierung notwendig war, dann gerne immer her damit!</p>
<br />
[accordian]</p>
<h2>Tricktresor- Bonus</h2>
<p>[accordian_list title=&#8217;Sichere dir einen 5%-Rabatt auf SimDia²!&#8217;]</p>
<p><em>Da SimDia² eine professionelle Software für SAP-Nutzer ist, benutze bitte deine Firmen-Mailadresse. SAP-Berater können einen entsprechenden Hinweis in die Nachricht schreiben.</em></p>
<p>[notice type=&#8217;info&#8217;]</p>
<p>[contact-form-7]</p>
<p>[/notice]</p>
<p>[/accordian_list]</p>
<p>[/accordian]</p>
<p>
<p>Der Beitrag <a href="/blog/simdia%c2%b2-als-alternative-zur-programmierung/">SimDia² als Alternative zur Programmierung?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>abapGit</title>
		<link>/blog/abapgit/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Wed, 10 Jan 2018 23:52:18 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[Blog]]></category>
		<category><![CDATA[Info/ Doku/ Demo]]></category>
		<category><![CDATA[Featured]]></category>
		<category><![CDATA[Programmierung]]></category>
		<category><![CDATA[Community]]></category>
		<category><![CDATA[abapGit]]></category>
		<category><![CDATA[github]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=1018300</guid>

					<description><![CDATA[<p>abapGit revolutioniert gerade die Art, wie die SAP-Community zusammen arbeiten kann. Das Addon, das Lars Hvam im Alleingang entwickelt hat, hat SAPLink inzwischen fast vollständig abgelöst und begeistert jeden, der damit einmal zu tun hatte. In diesem Artikel erfährst du, was abapGit ist, wie es funktioniert und welche Vorteile es gibt.</p>
<p>Der Beitrag <a href="/blog/abapgit/">abapGit</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>abapGit revolutioniert gerade die Art, wie die SAP-Community zusammen arbeiten kann. Das Addon, das Lars Hvam im Alleingang entwickelt hat, hat SAPLink inzwischen fast vollständig abgelöst und begeistert jeden, der damit einmal zu tun hatte. In diesem Artikel erfährst du, was abapGit ist, wie es funktioniert und welche Vorteile es gibt.</p>
<h2>Github</h2>
<p>Die Grundlage von abapGit ist die Open Source Plattform <a href="https://github.com/">Github</a>. Auf dieser Plattform kann Quellcode verwaltet werden. Andere Anwender können sich die Quelltexte auf ihren Computer laden, verwenden, verbessern und die verbesserte Version wieder publizieren. Zusammenarbeit wird durch diese Plattform enorm erleichtert. Es gibt auch andere Plattformen, die nach einem ähnlichen Prinzip arbeiten: Gitlab, BitBucket und so weiter. Hier gibt es eine Liste der Alternativen: <a href="https://trusted.de/github-alternativen">https://trusted.de/github-alternativen</a>.</p>
<p>Github zum Beispiel erlaubt in der kostenlosen Variante nur öffentliche Projekte. Die Plattform <a href="https://about.gitlab.com/products/feature-comparison/">GitLab</a> ermöglicht auch private Projekte, die nicht öffentlich sichtbar sind.</p>
<h2>Der Nutzen im SAP-Umfeld</h2>
<p>Im Gegensatz zu den meisten anderen Programmiersprachen, benötigt man einen kompletten <em>SAP-Server</em>, um ABAP-Programme ausführen zu können. Dieser Server steht jedoch zentral in einem Unternehmen. Damit hat man auch ein zentrales Repository und benötigt Github nicht. In diesem Fall haben alle, die SAP programmieren auch Zugriff auf den unternehmenseigenen Server. Was also bringt die Installation und die Verwendung von abapGit?</p>
<p>Wenn jemand im Unternehmen das Tool abapGit auf dem SAP-Entwicklungssystem installiert und den Zugang zum öffentlichen github-Repository freischalten lässt, dann können Mitarbeiter an öffentlichen ABAP-Open-Source-Projekten teilhaben. Ein Klick und die entsprechende Anwendung kann aus dem Github-Repository auf dem SAP-Server installiert werden. Es gibt mehrere Gründe, warum das jemand tun könnte:</p>
<ul>
<li>Viele der Github-Projekte sind Demoprogramme oder Lernprojekte zu einem Thema. So kann man sich also schnell und einfach zu vielen Themen weiterbilden ohne dass man Tabellen, Programme, Klasse, Datenelemente etc. manuell im SAP-System anlegen muss.
<ul>
<li><a href="https://github.com/pixelbaker/ABAP-RayTracer">ABAP-RayTracer</a></li>
<li><a href="https://github.com/christianguenter2/ABAP_conways_game_of_life">Conways Game Of Life</a></li>
</ul>
</li>
<li>Es werden immer mehr wertvolle Tools von SAP-begeisterten Programmierern entwickelt. Diese Tools darf ein Unternehmen kostenlos nutzen. Durch abapGit können diese einfach und gefahrlos installiert werden
<ul>
<li><a href="https://github.com/ivanfemia/abap2xlsx">ABAP2XLSX</a></li>
<li><a href="https://github.com/larshp/abapOpenChecks">abapOpenChecks</a></li>
</ul>
</li>
</ul>
<p>Wenn ein Unternehmen kostenlose, von vielen erfahrenen Menschen programmierte Software nutzt, dann ist es nur recht und billig, dass ein Unternehmen durch die Beteiligung der eigenen Mitarbeiter auch etwas an die Gemeinschaft zurück gibt. abapGit macht es einfach möglich.</p>
<p>Lars Hvam hat berichtet in seinen Blogs auf <a href="https://blogs.sap.com/author/lars.hvam/">blogs.sap.com</a> über abapGit als auch über seine Open-Source-Projekte und andere Programmierthemen. Zusätzlich hat er eine Seite erstellt, auf denen ABAP-Projekte gelistet werden: <a href="http://dotabap.org/">http://dotabap.org/</a></p>
<h2>Weitere Berichte über abapGit</h2>
<p>https://blogs.sap.com/2017/06/21/abapgit-so-easy/</p>
<p>https://blogs.sap.com/2017/11/19/getting-started-open-sourcing-abap-code/</p>
<h2>Zukunft</h2>
<p>Die Problemlose Zusammenarbeit im ABAP-Umfeld ist immer noch Neuland. Dementsprechend sind auch die genannten Plattformen zur Speicherung von Quelltext und zur Zusammenarbeit für die meisten ABAP-Programmierer ungewohnt. Das genial andere Programm ZABAPGIT von Lars Hvam ermöglicht jedoch viele neue Möglichkeiten. Im Gegensatz zu SAPLink, das irgendwann in der Entwicklung stoppte und oftmals fehlerhaft und umständlich zu bedienen war, arbeitet abapGit sensationell einfach und sicher.</p>
<p>Jeder, der eine kleine Programmierung, ein Mini-Addon oder ein Lernprojekt auf dem SAP-Server erstellt hat, kann es einfach mit anderen teilen und von der Gemeinschaft verbessern lassen.</p>
<h2>Tricktresor auf Github</h2>
<p>Angefangen hat es gestern mit einem kleinen Blogeintrag &#8220;<a href="https://blogs.sap.com/2018/01/09/variations-of-selecting-multiple-options-from-a-list/">Varianten einer Mehrfachselektion</a>&#8220;, den ich auf blogs.sap.com veröffentlicht habe, habe ich angefangen, den Quellcode, der im Tricktresor ja eh bereits öffentlich ist, auch auf Github zu publizieren. Alle Github-Projekte könnt ihr unter der folgenden Adresse sehen:</p>
<p><a href="https://github.com/tricktresor?tab=repositories">https://github.com/tricktresor?tab=repositories</a></p>
<p>Hier werde ich neue und auch alte Programmierungen veröffentlichen. Einerseits tue ich das, um euch den Quellcode einfacher zur Verfügung zu stellen. Andererseits sammle ich damit ebenfalls Erfahrungen um damit meine eigene Arbeit besser machen zu können als auch meine Kunden beraten zu können.</p>
<p>Zudem hoffe ich auch, dass vielleicht das eine oder andere kleine Programm Stück für Stück verbessert wird, auf ein neues ABAP-Release gehoben wird oder auch eine Toolsammlung entsteht, die uns allen das Leben leichter macht.</p>
<h2>Eigene Projekte</h2>
<p>Wenn du ein eigenes Projekt auf Github veröffentlichen möchtest, dann ist es ziemlich leicht.</p>
<h3>abapGit installieren</h3>
<p>Als erstes musst du abapGit auf dem SAP-Server installieren, sofern dies noch niemand vor dir getan hat. Dafür musst du abapGit herunterladen und installieren: <a href="http://abapgit.org/">abapgit.org</a> Wie genau, das steht dort beschrieben.</p>
<p>Solltest du keine Verbindung zu github.com bekommen, so muss die HTTP-Verbindung freigeschaltet werden (SAP-Server, Router, Antivirenprogramme prüfen).</p>
<h3>Github-Account</h3>
<p>Sofern du noch keinen Github-Account hast, musst du einen auf <a href="https://github.com/">https://github.com/</a> anlegen.</p>
<p>Danach kannst du direkt auf der Startseite oder über das Menü PLUS ein neues Projekt anlegen .</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/github1-1.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018308" src="https://tricktresor.com/wp-content/uploads/2018/01/github1-1.png" alt="" width="1045" height="304" srcset="/wp-content/uploads/2018/01/github1-1.png 1045w, /wp-content/uploads/2018/01/github1-1-300x87.png 300w, /wp-content/uploads/2018/01/github1-1-768x223.png 768w, /wp-content/uploads/2018/01/github1-1-1024x298.png 1024w" sizes="(max-width: 1045px) 100vw, 1045px" /></a></p>
<p>Hier gibst du einen Namen sowie die Beschreibung ein. In der kostenlosen Variante kannst du nur öffentliche Projekte erstellen.</p>
<p>Wichtig ist, dass du den Haken &#8220;Initialize this repository with a README&#8221; setzt. Eine Lizenz solltest du auch direkt auswählen. Am meisten verwendet wird die MIT-License.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/github2-1.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018309" src="https://tricktresor.com/wp-content/uploads/2018/01/github2-1.png" alt="" width="768" height="609" srcset="/wp-content/uploads/2018/01/github2-1.png 768w, /wp-content/uploads/2018/01/github2-1-300x238.png 300w" sizes="(max-width: 768px) 100vw, 768px" /></a></p>
<p>Ein Klick auf <em>Create repository</em> erzeugt das Projekt. Herzlichen Glückwunsch!</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/abapgit5.png"><img loading="lazy" decoding="async" class="alignnone wp-image-1018320 size-full" src="https://tricktresor.com/wp-content/uploads/2018/01/abapgit5.png" alt="" width="996" height="680" srcset="/wp-content/uploads/2018/01/abapgit5.png 996w, /wp-content/uploads/2018/01/abapgit5-300x205.png 300w, /wp-content/uploads/2018/01/abapgit5-768x524.png 768w" sizes="(max-width: 996px) 100vw, 996px" /></a></p>
<h3>abapGit</h3>
<p>Theoretisch kannst du nun eine neue Datei anlegen und ABAP-Quellcode in diese Datei kopieren. Praktisch funktioniert das jedoch nicht, da abapGit noch Meta-Daten zu dem jeweiligen Objekt speichert. Diese werden nur geschrieben und später wieder erkannt, wenn du die SAP-Objekte über das Programm ZABAPGIT hinzufügst. Starte dafür die Transaktion SE38 und führe das Programm ZABAPGIT aus.</p>
<p>Die Startseite ist dann wahrscheinlich leer, aber in etwa wird dich folgendes Bild begrüßen:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/abapgit2.png"><img loading="lazy" decoding="async" class="alignnone wp-image-1018312 size-large" src="https://tricktresor.com/wp-content/uploads/2018/01/abapgit2-1024x434.png" alt="" width="640" height="271" srcset="/wp-content/uploads/2018/01/abapgit2-1024x434.png 1024w, /wp-content/uploads/2018/01/abapgit2-300x127.png 300w, /wp-content/uploads/2018/01/abapgit2-768x325.png 768w, /wp-content/uploads/2018/01/abapgit2.png 1086w" sizes="(max-width: 640px) 100vw, 640px" /></a></p>
<h3>Repository füllen</h3>
<p>Wie bekommst du nun Programme und andere Objekte nach Github? Zuerst klonst du das gewünschte Projekt über den Link &#8220;Clone&#8221; im abapGit-Menu. Es erscheint dann folgendes Popup:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/abapgit3.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018311" src="https://tricktresor.com/wp-content/uploads/2018/01/abapgit3.png" alt="" width="904" height="164" srcset="/wp-content/uploads/2018/01/abapgit3.png 904w, /wp-content/uploads/2018/01/abapgit3-300x54.png 300w, /wp-content/uploads/2018/01/abapgit3-768x139.png 768w" sizes="(max-width: 904px) 100vw, 904px" /></a></p>
<p>Hier trägst du dir github-URL ein sowie ein Paket. Du kannst ein lokales Paket definieren, das nicht transportiert wird (du benötigst also keinen Transportauftrag) oder du nimmst ein Z- oder Y-Paket, das einen Transport in die nachfolgenden SAP-Systeme erlaubt.</p>
<p>Wenn das Paket noch nicht existiert, kannst du es über die Schaltfläche &#8220;Create Package&#8221; anlegen:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/abapgit4.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018310" src="https://tricktresor.com/wp-content/uploads/2018/01/abapgit4.png" alt="" width="760" height="252" srcset="/wp-content/uploads/2018/01/abapgit4.png 760w, /wp-content/uploads/2018/01/abapgit4-300x99.png 300w" sizes="(max-width: 760px) 100vw, 760px" /></a></p>
<p>du kannst für die Github-Projekte auch ein Hauptpaket definieren und dann für jedes Projekt ein eigenes Unterpaket erstellen.</p>
<p>Als Ergebnis erhältst du wiederum eine sehr übersichtliche Seite:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/abapgit6.png"><img loading="lazy" decoding="async" class="alignnone wp-image-1018321 size-full" src="https://tricktresor.com/wp-content/uploads/2018/01/abapgit6.png" alt="" width="1073" height="311" srcset="/wp-content/uploads/2018/01/abapgit6.png 1073w, /wp-content/uploads/2018/01/abapgit6-300x87.png 300w, /wp-content/uploads/2018/01/abapgit6-768x223.png 768w, /wp-content/uploads/2018/01/abapgit6-1024x297.png 1024w" sizes="(max-width: 1073px) 100vw, 1073px" /></a></p>
<p>Wenn du nun ein Programm in diesem Paket anlegst, dann kannst du über <em>Refresh</em> prüfen, ob du das Programm auch wirklich in dem Paket angelegt hast. Es erscheint dann in der Liste.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/abapgit7.png"><img loading="lazy" decoding="async" class="alignnone wp-image-1018322 size-full" src="https://tricktresor.com/wp-content/uploads/2018/01/abapgit7.png" alt="" width="1035" height="122" srcset="/wp-content/uploads/2018/01/abapgit7.png 1035w, /wp-content/uploads/2018/01/abapgit7-300x35.png 300w, /wp-content/uploads/2018/01/abapgit7-768x91.png 768w, /wp-content/uploads/2018/01/abapgit7-1024x121.png 1024w" sizes="(max-width: 1035px) 100vw, 1035px" /></a></p>
<p>Über den Link <em>Stage</em> kannst du die Daten ins Github hochladen. In der Übersicht siehst du die Objekte, die übertragen werden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/abapgit8.png"><img loading="lazy" decoding="async" class="alignnone wp-image-1018323 size-full" src="https://tricktresor.com/wp-content/uploads/2018/01/abapgit8.png" alt="" width="1068" height="189" srcset="/wp-content/uploads/2018/01/abapgit8.png 1068w, /wp-content/uploads/2018/01/abapgit8-300x53.png 300w, /wp-content/uploads/2018/01/abapgit8-768x136.png 768w, /wp-content/uploads/2018/01/abapgit8-1024x181.png 1024w" sizes="(max-width: 1068px) 100vw, 1068px" /></a></p>
<p>Mit <em>Add all and commit</em> gelangst du zum nächsten Schritt. Hier musst du deine Anmeldedaten von Github eintragen.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/abapgit9-1.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018325" src="https://tricktresor.com/wp-content/uploads/2018/01/abapgit9-1.png" alt="" width="582" height="461" srcset="/wp-content/uploads/2018/01/abapgit9-1.png 582w, /wp-content/uploads/2018/01/abapgit9-1-300x238.png 300w" sizes="(max-width: 582px) 100vw, 582px" /></a></p>
<p>Danach noch dein Kennwort eingeben und es wird die Übertragung zu Github gestartet.</p>
<p>Ob es geklappt hat, kannst du direkt auf Github prüfen:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2018/01/abapgit10.png"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-1018326" src="https://tricktresor.com/wp-content/uploads/2018/01/abapgit10.png" alt="" width="990" height="488" srcset="/wp-content/uploads/2018/01/abapgit10.png 990w, /wp-content/uploads/2018/01/abapgit10-300x148.png 300w, /wp-content/uploads/2018/01/abapgit10-768x379.png 768w" sizes="(max-width: 990px) 100vw, 990px" /></a></p>
<p>&nbsp;</p>
<h3>Weg frei zur Zusammenarbeit</h3>
<p>Damit ist der Weg frei zur Zusammenarbeit mit anderen SAP-Entwicklern. Wenn dein Projekt spannend ist oder gerade diese Funktion von anderen Programmierern benötigt wird, wird sich jemand finden, der hier mitarbeitet. Du kannst deine Programme natürlich auch einfach so auf Github speichern und hauptsächlich für dich dein persönliches Lernprogramm oder Code-Fundgrube verwalten.</p>
<p>Happy Coding!</p>
<p>Der Beitrag <a href="/blog/abapgit/">abapGit</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>SimDia² &#8211; SAP-Datenimport einfach?</title>
		<link>/blog/simdia2-sap-datenimport-einfach/</link>
					<comments>/blog/simdia2-sap-datenimport-einfach/#comments</comments>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Mon, 14 Apr 2014 15:24:30 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[Partner]]></category>
		<category><![CDATA[EXCEL]]></category>
		<category><![CDATA[Batch Input]]></category>
		<category><![CDATA[SAPGUI]]></category>
		<category><![CDATA[Viewcluster]]></category>
		<category><![CDATA[Controls]]></category>
		<category><![CDATA[Entwicklung]]></category>
		<category><![CDATA[GUI]]></category>
		<category><![CDATA[color]]></category>
		<category><![CDATA[Scripting]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[Tools]]></category>
		<category><![CDATA[simdia]]></category>
		<category><![CDATA[programmierung]]></category>
		<category><![CDATA[LSMW]]></category>
		<category><![CDATA[Dynpros]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Popups]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4659</guid>

					<description><![CDATA[<p>Für die Datenmigration von Fremdsystemen oder Excel stehen in SAP viele Möglichkeiten offen. In diesem Artikel stelle ich euch SimDia² vor mit dem die Datenübernahme aus Exceldateien ein Kinderspiel wird. Die Übernahme der Felder wird durch einfaches Anklicken im SAPGUI definiert. Es können "Kopfdaten" und "Positionsdaten" übernommen werden. </p>
<p>Der Beitrag <a href="/blog/simdia2-sap-datenimport-einfach/">SimDia² &#8211; SAP-Datenimport einfach?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p><span style="line-height: 1.5em;">[pullquote float=&#8217;left&#8217; color=&#8217;#000000&#8242; bgcolor=&#8217;#ffffff&#8217;]Wir schärfen Ihre Axt, während Sie den Baum fällen.[/pullquote] So lautet das Motto von </span><a style="line-height: 1.5em;" title="ERSAsoft | Homepage" href="https://ersasoft.de/de?s=tt">ERSAsoft</a><span style="line-height: 1.5em;">.&nbsp;</span>Der Slogan ist eine Anspielung auf das Zitat „Ich hab keine Zeit meine Axt zu schärfen. Ich muss einen Baum fällen.“ aus der Erzählung „Komm, ich erzähl dir eine Geschichte“ von <a title="Jorge Bucay | Wikipedia" href="http://de.wikipedia.org/wiki/Jorge_Bucay">Jorge Bucay</a>.</p>
<p>Er soll den Anspruch von ERSAsoft verdeutlichen, Tools zu entwickeln, die „den Umgang mit SAP so einfach und komfortabel wie möglich gestalten“. Ob das Datenimport-Tool SimDia²&nbsp; diesem Anspruch wirklich gerecht wird, wollte ich prüfen.</p>
<h2>Was ist SimDia²?</h2>
<p><a href="https://ersasoft.de/de/simdia/?s=tt">SimDia²</a> ist ein ein Tool, um Daten aus Excel nach SAP zu importieren. Dabei arbeitet das Programm direkt im SAPGUI-Dialog. Damit wird auch schnell klar, welche Zielrichtung SimDia² verfolgt: den Import kleinster bis mittlerer Datenmengen (von zwei bis &gt;10.000 Datensätzen). Für wirklich große Datenmigrationen mit mehreren 100.000 oder gar Millionen Datensätzen ist es nicht gedacht.</p>
<p>Aufgaben, bei denen Daten von Excel in eine SAP-Transaktion übertragen werden, sollen mit SimDia² einfacher werden. Auf der&nbsp;<a title="Demo-Videos | SimDia²" href="https://ersasoft.de/de/videos/?s=tt">Video-Seite&nbsp;</a>werden deswegen auch typische Beispiele aus der täglichen Arbeit eines SAP-Fachanwenders vorgestellt: Personaldaten erfassen, Rechnungen buchen oder Materialstücklisten einpflegen.</p>
<p>Diese Videos habe ich mir natürlich angesehen und war begeistert. Das Versprechen „Dateneingabe so einfach und komfortabel wie möglich“ war offensichtlich kein leeres. Und dass man damit wohl auch mehr machen kann, als Stamm- und Bewegungsdaten zu importieren, war mir schnell klar. Aber dazu später mehr.</p>
<h2>Technik</h2>
<p><span style="line-height: 1.5em;"><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_21_17_05_56.jpg"><img loading="lazy" decoding="async" class="alignright size-medium wp-image-4662" src="https://tricktresor.com/wp-content/uploads/2014/03/03_21_17_05_56-300x255.jpg" alt="simdia und se11" width="300" height="255" srcset="/wp-content/uploads/2014/03/03_21_17_05_56-300x255.jpg 300w, /wp-content/uploads/2014/03/03_21_17_05_56-624x531.jpg 624w, /wp-content/uploads/2014/03/03_21_17_05_56.jpg 861w" sizes="(max-width: 300px) 100vw, 300px" /></a>Nachdem ich mich in meinem SAP-Leben bereits häufiger mit den verschiedensten Tools zur Datenübernahme beschäftigt habe, war ich gespannt, was SimDia² zu bieten hat. Bei meinem ersten Kontakt mit dem Tool fand ich es spontan sehr innovativ und hilfreich, dass sich das SimDia²-Fenster in den SAP GUI integriert. Technisch stimmt das zwar nicht, denn SimDia²&nbsp; ist ein reines Windows-Programm mit einem eigenen Fenster, das sich über den SAP GUI legt, aber es sieht zuerst einmal so aus, als wäre das Tool nahtlos in SAP integriert.</span></p>
<p>Das Programm verwendet die SAP GUI Scripting API, um Daten mit SAP GUI auszutauschen sowie VBA als Schnittstelle zu Excel. Ein gravierender Vorteil der Realisierung als Windows-Programm: außer einem aktivierten GUI-Scripting sind keinerlei Eingriffe in SAP erforderlich.</p>
<p>Darüber hinaus ist SimDia² praktisch „out-of-the-box“ ablauffähig. Ausgeliefert wird es als ZIP-Archiv: nach dem Entpacken ist es <a href="https://ersasoft.de/de/videos/?s=tt#Video1">sofort startklar</a>.</p>
<h2>Anwendung</h2>
<p>Wie erwähnt, ist SimDia² als Datenimport-Tool konzipiert. Diese Aufgabe bewältigte es in den (wenigen) von mir durchgeführten Tests problemlos. Da ich aber aus der Entwicklung komme und eher selten (eigentlich: nie) typische Daten-Imports durchführen muss, habe ich überlegt, mit welcher Anwendung ich SimDia² noch testen könnte.</p>
<p>Dabei stieß ich auf eine Tätigkeit, die mich jedes Mal schrecklich nervt: das Anlegen von Datenelementen und den dazugehörigen Domänen in ABAP. Da meine Entwicklungen in der Regel eher übersichtlich sind, kommt das massenweise Anlegen von Datenelementen und Domänen bei mir nicht häufig vor. Ich kann mir jedoch gut vorstellen, dass SimDia² bei größeren Projekten, in denen zuvor ein umfangreiches Datenmodell erstellt wird, gut zum Einsatz kommen kann.</p>
<p>Hierfür könnten die Attribute von allen Datenelementen und Domänen in einer Excel-Datei einfach erfasst, diskutiert und gegebenenfalls noch geändert werden. Sobald die Entwicklung in SAP beginnt, lässt man die Repository Objekte durch SimDia²&nbsp;anlegen.</p>
<p>Um zu prüfen, wie SimDia² mit Popups, Radiobuttons und Ankreuzfeldern klar kommt, wollte ich Datenelement und Domäne in einem Rutsch anlegen. Alle notwendigen Attribute hatte ich in einer Excel-Datei gespeichert und die Aufzeichnung gestartet.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/04_14_16_53_40.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-4707 alignleft" src="https://tricktresor.com/wp-content/uploads/2014/03/04_14_16_53_40-300x158.jpg" alt="simdia Excel" width="300" height="158" srcset="/wp-content/uploads/2014/03/04_14_16_53_40-300x158.jpg 300w, /wp-content/uploads/2014/03/04_14_16_53_40-624x330.jpg 624w, /wp-content/uploads/2014/03/04_14_16_53_40.jpg 724w" sizes="(max-width: 300px) 100vw, 300px" /></a><span style="line-height: 1.5em;">Für die Aufzeichnung werden im SimDia²-Fenster die Daten aus der ersten Tabellenzeile als Druckknöpfe angezeigt.</span></p>
<p>Zur programm-internen <a href="https://ersasoft.de/de/videos/?s=tt#Tutorial1">Verknüpfung der Excel-Daten mit den jeweiligen SAP-Feldern</a> positioniert man einfach den Cursor im gewünschten SAP-Feld und klickt im SimDia²-Fenster auf den entsprechenden Button. Der Wert wird daraufhin übernommen und die Aktion aufgezeichnet. So verfährt man, bis alle erforderlichen Felder und Aktionen in SAP erfolgt und aufgezeichnet sind.&nbsp;Und das geht nun wirklich schnell, einfach und intuitiv.</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_21_17_07_33.jpg"><img loading="lazy" decoding="async" class="alignright size-medium wp-image-4664" src="https://tricktresor.com/wp-content/uploads/2014/03/03_21_17_07_33-236x300.jpg" alt="simdia_buttons" width="236" height="300" srcset="/wp-content/uploads/2014/03/03_21_17_07_33-236x300.jpg 236w, /wp-content/uploads/2014/03/03_21_17_07_33.jpg 415w" sizes="(max-width: 236px) 100vw, 236px" /></a></p>
<p><b>Funktionalität</b></p>
<p>SimDia² kann grundsätzlich mit allen SAP-Dynpros und Transaktionen arbeiten (einige Transaktionen sind allerdings zur Automatisierung nicht besonders gut geeignet; s.u.). Dabei ist es egal, ob es sich um Standard-, modifizierte oder kundeneigene Transaktionen handelt. Auch nachträgliche Dynpro-Änderungen sind unproblematisch &#8211; solange keine in der Aufzeichnung benutzte Datenfelder entfernt werden.</p>
<p>Während des Imports werden alle SAP-Meldungen direkt in der Excel-Datei protokolliert, sodass alle innerhalb von SAP durchgeführten Verarbeitungsschritte nachvollzogen werden können.</p>
<p>Darüber hinaus enthält SimDia² einige Funktionen, die ich in anderen Import-Tools noch nie gesehen habe. Hier nur zwei Beispiele:</p>
<ul>
<li>In Table Controls lassen sich nicht nur neue Sätze <span style="text-decoration: underline;">anlegen</span>. Auch bereits existierende Sätze können zielsicher identifiziert und <span style="text-decoration: underline;">geändert</span> werden.</li>
<li>SimDia² kann nicht nur Daten aus Excel nach SAP übertragen, sondern auch umgekehrt. Aber nicht nur das. Die exportierten Daten können z.B. mit Excel-internen Funktionen beliebig modifiziert und sofort nach SAP zurück übertragen werden.</li>
</ul>
<p>Wie weiter oben bereits angedeutet, kann SimDia² aber auch noch mehr, als Daten zu importieren. Da das Programm alle in SAP vorgenommenen Aktionen aufzeichnen und später beliebig wiederholen kann, eignet es sich auch super als Automatisierungstool für SAP. Da ist es egal, ob man schnell mal ein paar hundert Datensätze in einem Testsystem löschen muss, ViewCluster in der Transaktion SM34 anlegen will oder regelmäßig ein paar dutzend Reports ausführen soll.</p>
<h2>Pro und Contra</h2>
<p>SimDia² ist darauf spezialisiert, <em>flache Daten</em> und dazugehörige <em>Positionsdaten</em> zu übernehmen. Es können keine Abfragen oder Verzweigungen programmiert werden. Das macht das Tool einerseits sehr interessant für Key- oder Poweruser, die „ihre“ Imports jetzt selbst vorbereiten und durchführen können.</p>
<p>Gleichzeitig zeigen sich aber auch die Grenzen zur klassischen Programmierung. Sobald eine SAP-Anwendung auf einen Eingabewert mit unterschiedlichen Dynpros &#8220;antwortet&#8221;, muss der Anwender für jeden Eingabewert eine eigene Aufzeichnung erstellen.</p>
<p>Dem steht jedoch der benötigte Zeitaufwand gegenüber: mit etwas Erfahrung (s.u.) braucht man für eine Aufzeichnung mit SimDia² nicht länger als 1-2 Minuten. Bei einem Import mit der LSMW sind dies wohl eher 1-2 Stunden. Und ganz zu schweigen natürlich von einer klassisch programmierten Lösung.</p>
<p>Der Support von <a href="https://ersasoft.de/de/?s=tt">ERSAsoft</a> ist super. Probleme oder Fragen sind schnell per Mail, Telefon oder Teamviewer geklärt. Rüdiger Specht, Gründer und Inhaber, ist dabei stets ruhig, freundlich, geduldig und kompetent. Bei Problemen oder Schwierigkeiten redet er nicht um den heißen Brei herum, sondern sagt klar und deutlich, was Sache ist.</p>
<h2>Fazit</h2>
<p>Obwohl SimDia² sehr einfach zu bedienen ist, hatte ich die ersten Male das Gefühl, dass es &#8220;rum zickt&#8221;. Ich habe jedoch schnell gemerkt, dass die Zickerei an den unterschiedlich programmierten SAP-Programmen liegt. Bei der Aufzeichnung muss man sich an die Gegebenheiten der SAP-Transaktionen richten. Auch wenn SimDia² einfach zu bedienen und schnell zu erlernen ist, heißt es auch hier: Übung macht den Meister und SAP-Knowhow sollte vorhanden sein.</p>
<p>Insgesamt ist SimDia² sehr innovativ, wirklich einfach zu bedienen und schnell zu erlernen. Das ist das riesengroße Plus. Das, was ich bei SimDia² vermisst habe, als negativ zu bewerten, wäre falsch, denn einem Porsche kreide ich auch nicht an, dass er zwar 260 km/h fährt, ich aber nicht gleichzeitig ein Klavier damit transportieren kann. SimDia² ist dafür konzipiert, bestimmte Aufgaben im Zusammenspiel mit Excel schnell und intuitiv zu lösen. Und das tut es.</p>
<p>Damit ist das Programm SAP-internen Tools wie LSMW oder Batch Input haushoch überlegen.</p>
<p>Ist eine Aufzeichnung erst einmal &#8220;im Kasten&#8221;, dann ist der Aufruf schnell möglich und die neuen Daten sind ratzfatz im SAP. Anwendern, die regelmäßig Daten von Excel nach SAP überführen müssen, kann ich SimDia² wirklich nur ans Herz legen.</p>
<h2>Update</h2>
<p>In diesem Artikel beschreibe ich die neue Version von SimDia²:</p>
<p>https://tricktresor.com/blog/simdia2-neue-version-des-besten-sap-import-tools/</p>
<br />
[accordian]</p>
<p>Und jetzt kommt das Beste: ERSAsoft bietet allen Tricktresor-Fans einen Nachlass von 5% an. Füllt einfach das unten stehende Formular aus und ihr bekommt den erwähnten Nachlass gewährt. So. Noch leichter kann ich euch den SAP-Datenimport wirklich nicht machen&#8230;!</p>
<h2>Tricktresor- Bonus</h2>
<p>[accordian_list title=&#8217;Sichere dir einen 5%-Rabatt auf SimDia²!&#8217;]</p>
<p>[notice type=&#8217;info&#8217;]</p>
<p>https://tricktresor.com/blog/simdia%C2%B2-als-alternative-zur-programmierung/</p>
<p>[/notice]</p>
<p>[/accordian_list]</p>
<p>[/accordian]</p>
<p>
<p>Der Beitrag <a href="/blog/simdia2-sap-datenimport-einfach/">SimDia² &#8211; SAP-Datenimport einfach?</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/simdia2-sap-datenimport-einfach/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Hovitaga Advanced Pattern Enhancement</title>
		<link>/blog/hovitaga-advanced-pattern-enhancement/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Fri, 07 Mar 2014 15:44:49 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[abap]]></category>
		<category><![CDATA[Funktionsbausteine]]></category>
		<category><![CDATA[Texte]]></category>
		<category><![CDATA[Tricktresor]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Muster]]></category>
		<category><![CDATA[style]]></category>
		<category><![CDATA[Download]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4550</guid>

					<description><![CDATA[<p>Wer in ABAP programmiert hat mit Sicherheit schon den Befehl "Muster einfügen" im Editor verwendet. Hierüber lassen sich in erster Linie die Aufrufe für Funktionsbausteine und Methoden in den Quelltext einfügen. Gerade bei Funktionsbausteinen ist dies ein unerlässliches Hilfsmittel, denn die Syntaxprüfung prüft bei Funktionsbausteinen nicht, ob ein falscher Parameter verwendet wird. Die ungarische SAP-Entwicklerfirma Hovitaga hat für das Einfügen von Mustern ein kleines kostenloses AddOn entwickelt.</p>
<p>Der Beitrag <a href="/blog/hovitaga-advanced-pattern-enhancement/">Hovitaga Advanced Pattern Enhancement</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Wer in ABAP programmiert hat mit Sicherheit schon den Befehl &#8220;Muster einfügen&#8221; im Editor verwendet. Hierüber lassen sich in erster Linie die Aufrufe für Funktionsbausteine und Methoden in den Quelltext einfügen. Gerade bei Funktionsbausteinen ist dies ein unerlässliches Hilfsmittel, denn die Syntaxprüfung prüft bei Funktionsbausteinen nicht, ob ein falscher Parameter verwendet wird.</p>
<p>Die ungarische SAP-Entwicklerfirma <a title="Homepage | Hovitaga" href="http://www.hovitaga.com/">Hovitaga </a>hat für das Einfügen von Mustern ein kleines kostenloses AddOn entwickelt. Doch der Reihe nach.</p>
<h2>Einfügen von Mustern</h2>
<p>Über das Menü <em>Hilfsmittel &#8211; Einstellungen</em> im Editor können einige Einstellungen für das Einfügen von Mustern vorgenommen werden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_22_14.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4552" alt="Muster Einstellungen" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_22_14-282x300.jpg" width="282" height="300" srcset="/wp-content/uploads/2014/03/03_07_16_22_14-282x300.jpg 282w, /wp-content/uploads/2014/03/03_07_16_22_14.jpg 565w" sizes="(max-width: 282px) 100vw, 282px" /></a></p>
<p>&nbsp;</p>
<h2>Muster einfügen SAP Standard</h2>
<p>Das Einfügen von Mustern erfolgt über den Druckknopf <em>Muster</em> im Editor. Es erscheint ein Popup in dem man auswählen muss, für welchen Befehl man ein Muster einfügen möchte. Wir entscheiden uns für die Option <em>ABAP Objects Muster</em> und gelangen auf ein weiteres Popup:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_11_34.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4553" alt="ABAP Objects Muster" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_16_11_34-289x300.jpg" width="289" height="300" srcset="/wp-content/uploads/2014/03/03_07_16_11_34-289x300.jpg 289w, /wp-content/uploads/2014/03/03_07_16_11_34.jpg 376w" sizes="(max-width: 289px) 100vw, 289px" /></a></p>
<p>&nbsp;</p>
<p>Nachdem ich mich an dieser Stelle häufig ärgere, dass in der Suchhilfe zur Methode alle Methoden der Klasse angezeigt werden und keine Unterscheidung zwischen PRIVATE, PROTECTED oder PUBLIC gemacht wird, endet hier auch die Funktionalität im SAP Standard. Je nach Release wird vor dem Aufruf der Methode noch die Datendeklaration eingefügt.</p>
<h2>Muster einfügen Hovitaga style</h2>
<p>Dort, wo SAP aufhört, fängt die Funktionalität von Hovitaga an. An der Stelle, wo normalerweise der Code in den Quelltext eingefügt wird, erscheint erneut ein Popup:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/03/03_07_15_50_29.jpg"><img loading="lazy" decoding="async" class="alignnone size-medium wp-image-4554" alt="Hovitaga Dialog" src="https://tricktresor.com/wp-content/uploads/2014/03/03_07_15_50_29-300x191.jpg" width="300" height="191" srcset="/wp-content/uploads/2014/03/03_07_15_50_29-300x191.jpg 300w, /wp-content/uploads/2014/03/03_07_15_50_29-1024x655.jpg 1024w, /wp-content/uploads/2014/03/03_07_15_50_29-624x399.jpg 624w, /wp-content/uploads/2014/03/03_07_15_50_29.jpg 1363w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>Hier kann durch verschiedene Funktionen der Aufruf im Quelltext gesteuert werden. Anstatt im Coding nicht benötigte Parameter zu löschen, kann im Dialog bereits entschieden werden, welche Parameter benötigt werden. Auf Wunsch wird auch die Datendeklaration für den jeweiligen Parameter eingefügt. Für Tabellenparameter kann auch ein entsprechender Arbeitsbereich deklariert werden. Hovitaga folgt hierbei den üblichen Namenskonventionen:</p>
<ul>
<li>S = Struktur</li>
<li>T = Tabelle</li>
<li>V = Variable</li>
<li>R = Referenz auf ein Objekt</li>
</ul>
<p>Durch einen Schalter kann zwischen globaler und lokaler Datendeklaration gewählt werden, was sich in der Namenskonvention durch die Verwendung von G oder L auswirkt.</p>
<p>In einer Vorschau wird der einzufügende Aufruf angezeigt. Man sieht sofort, wie sich die Änderungen von z.B. &#8220;Remove Unsed Lines&#8221; auswirken.</p>
<h2>Fazit</h2>
<p>Ich möchte nicht soweit gehen, dass es ein unentbehrliches Tool für den ABAP-Programmierer ist. Allerdings finden sich sinnvolle Funktionen in dieser Erweiterung, die das Leben durchaus leichter machen können. Es gibt also eine klare Tricktresor-Empfehlung!</p>
<h2>Download</h2>
<p><a title="Advanced Pattern Enhancement | Hovitaga" href="http://www.hovitaga.com/Advanced-pattern-enhancement-overview">Hovitaga Advanced Pattern Enhancement &#8211; Product page and Download</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/hovitaga-advanced-pattern-enhancement/">Hovitaga Advanced Pattern Enhancement</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>ABAP2XLS</title>
		<link>/blog/abap2xls/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 20 Feb 2014 17:00:52 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[DOI]]></category>
		<category><![CDATA[Entwicklung]]></category>
		<category><![CDATA[farben]]></category>
		<category><![CDATA[ole]]></category>
		<category><![CDATA[sap]]></category>
		<category><![CDATA[zelle]]></category>
		<category><![CDATA[arbeitsblatt]]></category>
		<category><![CDATA[spreadsheet]]></category>
		<category><![CDATA[EXCEL]]></category>
		<category><![CDATA[sheet]]></category>
		<category><![CDATA[Office]]></category>
		<category><![CDATA[formatierung]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4487</guid>

					<description><![CDATA[<p>Eines der größten und beliebtesten Open Source Projekte für SAP ist zweifelsohne ABAP2XLS. Mit diesem kostenlosen Tool lassen sich einfach und im Hintergrund (!!) echte Excel-Dateien erstellen. Wer viel Excel-Dateien erstellen muss, sollte sich auf jeden Fall dieses geniale Tool anschauen!</p>
<p>Der Beitrag <a href="/blog/abap2xls/">ABAP2XLS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Excel-Dateien lassen sich ohne weiteres aus SAP heraus erzeugen. Es gibt die Möglichkeit, dies per <a title="OLE &amp; Excel | Tricktresor" href="https://tricktresor.com/?s=ole+excel">OLE (Object Linking and Embedding)</a> oder mittels <a title="DOI &amp; Excel | Tricktresor" href="https://tricktresor.com/?s=doi+excel">DOI (Desktop Office Integration)</a> tun. Diese beiden Methoden haben jedoch zwei große Nachteile:</p>
<ol>
<li>Die Anwendung/ Erstellung von Excel-Dateien ist recht kompliziert und aufwändig</li>
<li>Dateien können nur Online, also im Dialog mit dem Anwender erzeugt werden. Die Erzeugung von Excel-Dateien im Hintergrund ist nicht möglich.</li>
</ol>
<p><img loading="lazy" decoding="async" class="alignleft size-medium wp-image-4488" alt="ABAP2XLS - Angry Birds" src="https://tricktresor.com/wp-content/uploads/2014/02/02_20_17_41_32-300x165.jpg" width="300" height="165" srcset="/wp-content/uploads/2014/02/02_20_17_41_32-300x165.jpg 300w, /wp-content/uploads/2014/02/02_20_17_41_32.jpg 558w" sizes="(max-width: 300px) 100vw, 300px" /></p>
<p><a title="ABAP2XLS | Homepage" href="http://ivanfemia.github.io/abap2xlsx/">ABAP2XLS</a> bildet die meisten Funktionen &#8211; und das sind sehr viele!! &#8211; mit eigenen Klassen und Methoden ab. Die Entwicklung wird von einer Gruppe sehr engagierter SAP-Programmierer stetig weiter geführt und verbessert.</p>
<p>Eine kurze Übersicht über die Funktionen und das Entwicklerteam gibt es im <a title="ABAP2XLS | SCN" href="http://scn.sap.com/community/abap/blog/2010/07/12/abap2xlsx--generate-your-professional-excel-spreadsheet-from-abap">SCN &#8211; ABAP2XLS</a>. Die Möglichkeiten sind wirklich fantastisch. Es können jede Menge Funktionen und Formatierungen vorgenommen werden.</p>
<h2>Demo-Programm</h2>
<p>Folgendes Demo-Programm zeigt, wie einfach es ist, eine Excel-Datei mithilfe von ABAP2XLS zu erzeugen:</p>
<pre>REPORT  zdemo_excel1.

DATA: lo_excel                TYPE REF TO zcl_excel,
      lo_worksheet            TYPE REF TO zcl_excel_worksheet,
      lo_hyperlink            TYPE REF TO zcl_excel_hyperlink,
      column_dimension        TYPE REF TO zcl_excel_worksheet_columndime.

CONSTANTS: gc_save_file_name TYPE string VALUE '01_HelloWorld.xlsx'.
INCLUDE zdemo_excel_outputopt_incl.

START-OF-SELECTION.
  " Creates active sheet
  CREATE OBJECT lo_excel.

  " Get active sheet
  lo_worksheet = lo_excel-&gt;get_active_worksheet( ).
  lo_worksheet-&gt;set_cell( ip_column = 'B' ip_row = 2 ip_value = 'Hello world' ).
  lo_worksheet-&gt;set_cell( ip_column = 'B' ip_row = 3 ip_value = sy-datum ).
  lo_worksheet-&gt;set_cell( ip_column = 'C' ip_row = 3 ip_value = sy-uzeit ).
  lo_hyperlink = zcl_excel_hyperlink=&gt;create_external_link( iv_url = 'http://www.abap2xlsx.org/' ).
  lo_worksheet-&gt;set_cell( ip_column = 'B' ip_row = 4 ip_value = 'Click here to visit abap2xlsx homepage' ip_hyperlink = lo_hyperlink ).

  column_dimension = lo_worksheet-&gt;get_column_dimension( ip_column = 'B' ).
  column_dimension-&gt;set_width( ip_width = 11 ).

*** Create output
  lcl_output=&gt;output( lo_excel ).</pre>
<p>Die Umfangreiche Demo-Sammlung ist in einem eigenen Show-Center untergebracht, in dem der Quelltext als auch die Ausgabe angezeigt werden:</p>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/02/02_20_17_56_18.jpg"><img decoding="async" class="alignnone  wp-image-4489" alt="ABAP2XLS Democenter" src="https://tricktresor.com/wp-content/uploads/2014/02/02_20_17_56_18.jpg" width="100%" srcset="/wp-content/uploads/2014/02/02_20_17_56_18.jpg 1176w, /wp-content/uploads/2014/02/02_20_17_56_18-300x105.jpg 300w, /wp-content/uploads/2014/02/02_20_17_56_18-768x269.jpg 768w, /wp-content/uploads/2014/02/02_20_17_56_18-1024x359.jpg 1024w" sizes="(max-width: 1176px) 100vw, 1176px" /></a></p>
<p>Der Beitrag <a href="/blog/abap2xls/">ABAP2XLS</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>SAPcommander</title>
		<link>/blog/sapcommander/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 20 Feb 2014 16:37:16 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4480</guid>

					<description><![CDATA[<p>Um Dateien aus dem und in das SAP-System zu bekommen, helfen die Transaktionen CG3Y und CG3Z weiter. Diese sind jedoch nicht sonderlich komfortabel. Zudem muss man wissen, welche Dateien sich wo im Dateisystem befinden. Eine geniale Alternative ist der SAPcommander.</p>
<p>Der Beitrag <a href="/blog/sapcommander/">SAPcommander</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Vielen von Euch dürfte der <a title="Norton Commander | Wikipedia" href="http://de.wikipedia.org/wiki/Norton_Commander">Norton Commander</a> noch ein Begriff sein. Der Norton Commander war ein Tool zum Kopieren von Dateien. Ein Verzeichnis wurde in dem linken und eine anderes in dem rechten Fenster angezeigt. Dateien konnten so komfortabel von einem Verzeichnis zu einem anderen Verzeichnis kopiert oder verschoben werden.</p>
<h2>SAP Standard</h2>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/02/02_20_17_36_04.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-4482 alignright" alt="Transaktion CG3Y" src="https://tricktresor.com/wp-content/uploads/2014/02/02_20_17_36_04-300x120.jpg" width="300" height="120" srcset="/wp-content/uploads/2014/02/02_20_17_36_04-300x120.jpg 300w, /wp-content/uploads/2014/02/02_20_17_36_04.jpg 446w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Eine Funktion, Dateien zwischen Applikationsserver und Frontend auszutauschen fehlt im SAP. Verzeichnisse auf dem Applikationsserver können mit der Transaktion AL11 durchforstet werden, allerdings nur in sehr beschränktem Maße. Will man Dateien hin und her kopieren, so muss man entweder die Verzeichnisse des Applikationsservers auf dem PC als Laufwerk einbinden oder sich per FTP verbinden. Beides benötigt eine entsprechende Benutzerkennung und Kennwort.</p>
<p>Für einfaches Kopieren von und zum Applikationsserver helfen die Transaktion CG3Y und CG3Z weiter. Diese beiden Transaktion sind jedoch nicht sehr Benutzerfreundlich&#8230;</p>
<h2>SAPcommander</h2>
<p><a href="https://tricktresor.com/wp-content/uploads/2014/02/02_20_17_25_59.jpg"><img loading="lazy" decoding="async" class="size-medium wp-image-4481 alignleft" alt="SAPcommander" src="https://tricktresor.com/wp-content/uploads/2014/02/02_20_17_25_59-300x103.jpg" width="300" height="103" srcset="/wp-content/uploads/2014/02/02_20_17_25_59-300x103.jpg 300w, /wp-content/uploads/2014/02/02_20_17_25_59-624x214.jpg 624w, /wp-content/uploads/2014/02/02_20_17_25_59.jpg 950w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Das kostenlose AddOn <a title="SAPcommander | code.google.com" href="https://code.google.com/p/sapcommander/">SAPcommander</a> funktioniert in ähnlicher Weise wie der Norton Commander. Das schöne am SAPcommander ist jedoch, dass hier Dateien und Verzeichnisse zwischen Frontend und Applikationsserver kopiert werden können oder auch zwischen zwei Verzeichnissen auf dem Applikationsserver.</p>
<p>Dateien können durch Markieren und Drag&#8217;n&#8217;Drop oder auch per Funktionstasten kopiert, verschoben, gelöscht werden. Die Verzeichniswahl kann durch das gewohnte Navigieren im Verzeichnisbaum erfolgen oder auch durch die direkte Eingabe des Dateipfades.</p>
<p>Ein sehr geniales Tool, das entweder als Transportdatei oder als SAPlink-Nugget im eigenen SAP-System installiert werden kann.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/sapcommander/">SAPcommander</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>SAPlink</title>
		<link>/blog/saplink/</link>
		
		<dc:creator><![CDATA[Enno Wulff]]></dc:creator>
		<pubDate>Thu, 20 Feb 2014 16:19:19 +0000</pubDate>
				<category><![CDATA[AddOns]]></category>
		<category><![CDATA[Editor]]></category>
		<category><![CDATA[Upload]]></category>
		<guid isPermaLink="false">https://tricktresor.com/?p=4476</guid>

					<description><![CDATA[<p>Das Open Source Projekt SAPlink ist eine sehr gute Alternative zu dem SAP-Transportsystem. Mithilfe von SAPlink lassen sich die meisten Repository-Objekte (Klassen, Programme, Datenelemente etc.) komplett exportieren und in einem anderen System wieder importieren. </p>
<p>Der Beitrag <a href="/blog/saplink/">SAPlink</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Das Open Source Projekt <a title="SAPlink | code.google.com" href="https://code.google.com/p/saplink/">SAPlink</a> erlaubt es, die meisten Repository-Objekt in einem <em>nugget</em> auf dem Frontend zu exportieren und in einem anderen System wieder zu importieren.</p>
<p><img loading="lazy" decoding="async" class="alignnone size-full wp-image-4468" alt="nugget3" src="https://tricktresor.com/wp-content/uploads/2014/02/02_20_13_02_26.jpg" width="300" height="133" /></p>
<h2>Nuggets</h2>
<p>Ein Nugget ist einem XML-Datei, die von SAPlink auf dem Frontend erzeugt wird. Diese Datei kann mit einem normalen Text-Editor bearbeitet und geändert werden. Die Datei kann in einem beliebigen anderen SAP-System auf dem SAPlink installiert ist wieder importiert werden.</p>
<p>Eine schöne Beschreibung findet sich auf dem <a title="SAPlink-Doku | Berater-Wiki" href="http://www.berater-wiki.de/index.php?title=SAPlink">Berater-Wiki</a>.</p>
<p>Alle Objekte eines nuggets werden importiert und müssen nachträglich manuell aktiviert werden. Beim Upload kann ein Paketname angegeben werden, dem die neuen Objekte zugeordnet werden sollen.</p>
<h2>SAPlink-Objekte</h2>
<p>Die meisten Repository-Objekte werden von SAPlink von Haus aus unterstützt. Es gibt jedoch einige Objekte, die nachträglich installiert werden müssen. Eine Liste dieser Plugins findet sich hier:</p>
<p>https://www.assembla.com/spaces/saplink-plugins/wiki</p>
<p>&nbsp;</p>
<p>Der Beitrag <a href="/blog/saplink/">SAPlink</a> erschien zuerst auf <a href="/">Tricktresor</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
